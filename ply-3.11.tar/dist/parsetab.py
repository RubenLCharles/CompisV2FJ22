
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND_LOG ARC ASSIGN CHAR_CTE CHAR_TYPE CIRCLE COLON COLOR COMMA COMMENT DIV_OP DO ELSE EQUAL_LOG FLOAT_CTE FLOAT_TYPE FOR FUNCTION GTE_LOG GT_LOG ID IF INT_CTE INT_TYPE LBRACK LCURLY LINE LPAREN LTE_LOG LT_LOG MAIN MINUS_OP MULT_OP NEW_LINE NE_LOG OR_LOG PENDOWN PENUP PLUS_OP POINT PROGRAM RBRACK RCURLY READ RETURN RPAREN SEMIC SIZE STRING_CTE THEN TO VARS VOID WHILE WRITEprogram : PROGRAM ID SEMIC dec_var_gob def_funciones main pn_print\n    dec_var_gob : VARS tipos COLON lista_ids dec_var_aux\n                | empty\n    \n    dec_var_aux : tipos COLON lista_ids SEMIC dec_var_aux\n                | empty\n    \n    lista_ids : ID lista_aux lista_aux_b\n    \n    lista_aux : LBRACK INT_CTE RBRACK\n              | empty\n    \n    lista_aux_b : COMMA lista_ids\n                | empty\n    \n    tipos   : INT_TYPE pn_tipoAct\n            | FLOAT_TYPE pn_tipoAct\n            | CHAR_TYPE pn_tipoAct\n    \n    def_funciones : FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4\n                  | empty\n    \n    tipos_func : INT_TYPE pn_tipoAct\n               | VOID pn_tipoAct\n    \n    dec_var_loc : VARS tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec\n                | empty\n    \n    dec_var_loc_aux : COMMA ID dec_var_loc_aux\n                    | empty\n    \n    var_loc_rec : tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec\n                | empty\n    \n    parametros : tipos COLON ID pn_func2 param_aux\n    \n    param_aux : COMMA parametros\n              | empty\n    \n    main : MAIN LPAREN RPAREN bloque\n    \n    bloque : LCURLY estatutos estatu_rec RCURLY\n    \n    estatu_rec : estatutos estatu_rec\n               | empty\n    \n    estatutos : asignacion\n              | declaracion\n              | llamada_func\n              | llamada_void\n              | retorno\n              | lectura\n              | escritura\n              | decision\n              | loop_cond\n              | loop_no_cond \n              | expresiones\n              | empty\n    \n    asignacion : ID pn_expresionID ASSIGN pn_secu1 expresiones pn_secu2\n    \n    declaracion : tipos ID pn_expresionID declaracion_aux SEMIC\n    \n    declaracion_aux : ASSIGN pn_secu1 expresiones pn_secu2\n                    | empty\n    \n    llamada_func : ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC\n    \n    llamada_func_aux : expresiones pn_llamFunc2 llama_func_auxb\n                     | empty\n    \n    llama_func_auxb : COMMA llamada_func_aux\n                    | empty\n    \n    llamada_void : ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC\n    \n    llamada_void_aux : expresiones pn_llamFunc2 llama_void_auxb\n                     | empty\n    \n    llama_void_auxb : COMMA llamada_func_aux\n                    | empty\n    \n    retorno : RETURN  pn_secu3 LPAREN expresiones RPAREN SEMIC\n    \n    lectura : READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5\n    \n    lec_aux : COMMA ID lec_aux\n            | empty\n    \n    escritura : WRITE pn_secu3 LPAREN esc_aux RPAREN SEMIC pn_secu5\n    \n    esc_aux : STRING_CTE pn_secu4 esc_rec\n            | expresiones pn_secu4 esc_rec\n            | empty\n    \n    esc_rec : COMMA esc_aux\n            | empty\n    \n    decision : IF LPAREN expresiones RPAREN pn_cond1 THEN bloque dec_aux\n    \n    dec_aux : else pn_cond2\n            | empty\n    \n    else : ELSE pn_cond3 bloque\n    \n    loop_cond : WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3    \n    \n    loop_no_cond : FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque\n    \n    nocond_aux : LBRACK expresiones RBRACK\n               | empty\n    \n    expresiones : t_exp or_check\n    \n    or_check : OR_LOG pn_expresion9 expresiones pn_expresion10\n             | empty\n    \n    t_exp : g_exp and_check\n    \n    and_check : AND_LOG pn_expresion9 t_exp pn_expresion10\n              | empty\n    \n    g_exp : m_exp op_check\n    \n    op_check : empty\n             | comparacion m_exp pn_expresion8\n    \n    comparacion : GT_LOG pn_expresion7\n                | LT_LOG pn_expresion7\n                | EQUAL_LOG pn_expresion7\n                | NE_LOG pn_expresion7\n    \n    m_exp : termino pn_expresion3 m_rec\n    \n    m_rec : PLUS_OP pn_expresion1 m_exp \n          | MINUS_OP pn_expresion1 m_exp \n          | empty\n    \n    termino : factor pn_expresion4 term_rec\n    \n    term_rec : MULT_OP pn_expresion2 termino\n             | DIV_OP pn_expresion2 termino\n             | empty\n    \n    factor : LPAREN pn_expresion5 expresiones RPAREN pn_expresion6\n           | INT_CTE pn_constante\n           | FLOAT_CTE pn_constante\n           | ID\n           | llamada_func\n    empty :\n    pn_expresionID :\n    \n    pn_expresion1 : \n    \n    pn_expresion2 :\n    \n    pn_expresion3 : \n    \n    pn_expresion4 : \n    \n    pn_expresion5 :\n    \n    pn_expresion6 :\n    \n    pn_expresion7 :\n\n    \n    pn_expresion8 :\n\n    \n    pn_expresion9 :\n    \n    pn_expresion10 :\n    \n    pn_secu1 :\n    \n    pn_secu2 :\n    \n    pn_secu3 :\n    \n    pn_secu4 :\n    \n    pn_secu5 :\n    \n    pn_cond1 :\n    \n    pn_cond2 :\n    \n    pn_cond3 :\n    \n    pn_loop1 :\n    \n    pn_loop2 :\n    \n    pn_loop3 :\n    \n    pn_tipoAct : \n    \n    pn_func1 :\n    \n    pn_func2 :\n    \n    pn_func3 : \n    \n    pn_func4 : \n    \n    pn_llamFunc1 :\n    \n    pn_llamFunc2 :\n    \n    pn_llamFunc3 :\n    \n    pn_GotoMain :\n    \n    pn_constante :\n    \n    pn_print :\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,15,24,39,115,],[0,-134,-1,-27,-28,]),'ID':([2,12,13,14,17,18,19,20,21,22,23,27,28,40,42,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,69,70,71,72,73,74,75,81,83,87,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,115,116,117,120,121,122,123,124,126,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,148,149,154,156,166,168,169,170,171,172,173,174,177,183,184,185,186,189,198,199,200,201,202,203,210,215,218,221,223,228,234,236,239,241,243,247,250,251,252,253,255,258,259,260,262,263,265,267,274,],[3,-124,-124,-124,26,-124,-124,30,-11,-12,-13,-16,-17,60,30,30,60,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,86,-107,93,-101,-101,-101,-105,-106,-133,-133,60,-42,120,120,-75,-111,-77,-78,-111,-80,-81,-82,120,-109,-109,-109,-109,-101,-101,-97,-98,146,-28,-113,120,-99,-100,120,159,120,120,120,120,120,-110,-84,-85,-86,-87,-88,-103,-103,-91,-92,-104,-104,-95,120,120,-113,-108,120,-112,-112,-83,120,120,120,120,-114,-44,120,-96,-107,220,-76,-79,-89,-90,-93,-94,-43,120,-57,-117,120,120,120,-52,-116,-61,-101,257,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,269,-70,275,]),'SEMIC':([3,30,36,38,43,45,69,70,71,72,73,74,75,78,79,80,86,94,96,97,99,100,101,107,108,109,110,111,118,120,121,132,137,140,141,144,145,153,155,156,168,169,170,181,185,187,191,198,199,200,201,202,203,211,213,217,219,232,238,248,257,258,264,266,269,273,275,276,],[4,-101,-101,-8,-6,-10,-101,-101,-101,-105,-106,-133,-133,113,-9,-7,-102,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-127,-101,-99,-100,-110,-88,-91,-92,-95,175,183,-46,-108,-112,-112,-83,-131,-96,218,221,-76,-79,-89,-90,-93,-94,-108,236,-114,239,-131,-45,258,-101,-47,268,-21,-101,-20,-101,277,]),'VARS':([4,175,],[6,205,]),'FUNCTION':([4,5,7,29,30,34,35,36,38,43,45,79,80,113,147,],[-101,9,-3,-101,-101,-2,-5,-101,-8,-6,-10,-9,-7,-101,-4,]),'MAIN':([4,5,7,8,10,29,30,34,35,36,38,43,45,79,80,113,115,147,229,246,],[-101,-101,-3,16,-15,-101,-101,-2,-5,-101,-8,-6,-10,-9,-7,-101,-28,-4,-128,-14,]),'INT_TYPE':([6,9,29,30,36,38,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,79,80,81,83,94,96,97,99,100,101,107,108,109,110,113,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,205,208,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,268,277,],[12,18,12,-101,-101,-8,12,12,-6,-10,12,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,-9,-7,12,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,12,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,12,12,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,12,12,]),'FLOAT_TYPE':([6,29,30,36,38,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,79,80,81,83,94,96,97,99,100,101,107,108,109,110,113,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,205,208,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,268,277,],[13,13,-101,-101,-8,13,13,-6,-10,13,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,-9,-7,13,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,13,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,13,13,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,13,13,]),'CHAR_TYPE':([6,29,30,36,38,40,41,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,79,80,81,83,94,96,97,99,100,101,107,108,109,110,113,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,205,208,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,268,277,],[14,14,-101,-101,-8,14,14,-6,-10,14,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,-9,-7,14,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,14,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,14,14,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,14,14,]),'VOID':([9,],[19,]),'COLON':([11,12,13,14,21,22,23,33,77,230,270,],[20,-124,-124,-124,-11,-12,-13,42,112,247,274,]),'LPAREN':([16,26,32,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,69,70,71,72,73,74,75,81,83,85,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,117,120,121,122,124,126,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,148,149,154,156,157,166,168,169,170,171,172,173,174,177,183,184,185,186,198,199,200,201,202,203,210,215,218,221,223,228,234,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[25,-125,41,62,62,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-107,-115,-115,-115,91,-121,-101,-101,-101,-105,-106,-133,-133,62,-42,117,62,122,123,124,62,126,-75,-111,-77,-78,-111,-80,-81,-82,62,-109,-109,-109,-109,-101,-101,-97,-98,-28,-113,62,-99,-100,62,62,62,62,62,62,-110,-84,-85,-86,-87,-88,-103,-103,-91,-92,-104,-104,-95,62,62,-113,-108,186,62,-112,-112,-83,62,62,62,62,-114,-44,62,-96,-107,-76,-79,-89,-90,-93,-94,-43,62,-57,-117,62,62,62,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'RPAREN':([25,69,70,71,72,73,74,75,76,94,96,97,99,100,101,107,108,109,110,117,119,120,121,124,125,132,137,140,141,144,146,149,150,151,152,156,158,159,160,161,162,163,165,168,169,170,176,178,179,180,182,185,186,188,190,192,193,198,199,200,201,202,203,207,209,212,214,215,216,220,222,223,224,225,231,233,234,235,237,240,242,249,258,],[31,-101,-101,-101,-105,-106,-133,-133,111,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-101,156,-99,-100,-101,164,-110,-88,-91,-92,-95,-126,-101,181,-130,-54,-108,187,-101,191,-116,-116,-64,195,-112,-112,-83,-101,211,-130,-49,-101,-96,-107,219,-60,-101,-101,-76,-79,-89,-90,-93,-94,-24,-26,-101,-53,-101,-56,-101,-62,-101,-66,-63,-25,-48,-101,-51,-55,-59,-65,-50,-47,]),'LBRACK':([30,93,],[37,128,]),'COMMA':([30,36,38,69,70,71,72,73,74,75,80,94,96,97,99,100,101,107,108,109,110,120,121,132,137,140,141,144,146,151,156,159,161,162,168,169,170,176,179,182,185,192,193,198,199,200,201,202,203,212,220,257,258,269,275,],[-101,44,-8,-101,-101,-101,-105,-106,-133,-133,-7,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-99,-100,-110,-88,-91,-92,-95,-126,-130,-108,189,-116,-116,-112,-112,-83,208,-130,215,-96,223,223,-76,-79,-89,-90,-93,-94,234,189,265,-47,265,265,]),'LCURLY':([31,175,204,206,226,244,254,256,261,268,271,272,277,278,],[40,-101,40,-19,40,40,-120,40,40,-101,-18,-23,-101,-22,]),'INT_CTE':([37,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,69,70,71,72,73,74,75,81,83,87,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,117,120,121,122,124,126,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,148,149,154,156,166,168,169,170,171,172,173,174,177,183,184,185,186,198,199,200,201,202,203,210,215,218,221,223,228,234,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[46,74,74,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-107,-101,-101,-101,-105,-106,-133,-133,74,-42,74,74,-75,-111,-77,-78,-111,-80,-81,-82,74,-109,-109,-109,-109,-101,-101,-97,-98,-28,-113,74,-99,-100,74,74,74,74,74,74,-110,-84,-85,-86,-87,-88,-103,-103,-91,-92,-104,-104,-95,74,74,-113,-108,74,-112,-112,-83,74,74,74,74,-114,-44,74,-96,-107,-76,-79,-89,-90,-93,-94,-43,74,-57,-117,74,74,74,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'RETURN':([40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,81,83,94,96,97,99,100,101,107,108,109,110,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[63,63,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,63,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'READ':([40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,81,83,94,96,97,99,100,101,107,108,109,110,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[64,64,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,64,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'WRITE':([40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,81,83,94,96,97,99,100,101,107,108,109,110,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[65,65,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,65,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'IF':([40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,81,83,94,96,97,99,100,101,107,108,109,110,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[66,66,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,66,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'WHILE':([40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,81,83,94,96,97,99,100,101,107,108,109,110,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[67,67,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,67,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'FOR':([40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,81,83,94,96,97,99,100,101,107,108,109,110,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[68,68,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,68,-42,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'FLOAT_CTE':([40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,69,70,71,72,73,74,75,81,83,87,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,117,120,121,122,124,126,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,148,149,154,156,166,168,169,170,171,172,173,174,177,183,184,185,186,198,199,200,201,202,203,210,215,218,221,223,228,234,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[75,75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-107,-101,-101,-101,-105,-106,-133,-133,75,-42,75,75,-75,-111,-77,-78,-111,-80,-81,-82,75,-109,-109,-109,-109,-101,-101,-97,-98,-28,-113,75,-99,-100,75,75,75,75,75,75,-110,-84,-85,-86,-87,-88,-103,-103,-91,-92,-104,-104,-95,75,75,-113,-108,75,-112,-112,-83,75,75,75,75,-114,-44,75,-96,-107,-76,-79,-89,-90,-93,-94,-43,75,-57,-117,75,75,75,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'RCURLY':([40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,69,70,71,72,73,74,75,81,82,83,94,96,97,99,100,101,107,108,109,110,114,115,120,121,132,137,140,141,144,156,168,169,170,177,183,185,198,199,200,201,202,203,210,218,221,236,239,241,243,250,251,252,253,255,258,259,260,262,263,267,],[-101,-101,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-99,-101,-101,-101,-105,-106,-133,-133,-101,115,-30,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-29,-28,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-114,-44,-96,-76,-79,-89,-90,-93,-94,-43,-57,-117,-52,-116,-61,-101,-117,-67,-119,-69,-123,-47,-58,-68,-71,-72,-70,]),'RBRACK':([46,69,70,71,72,73,74,75,94,96,97,99,100,101,107,108,109,110,120,121,132,137,140,141,144,156,167,168,169,170,185,198,199,200,201,202,203,258,],[80,-101,-101,-101,-105,-106,-133,-133,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-99,-100,-110,-88,-91,-92,-95,-108,197,-112,-112,-83,-96,-76,-79,-89,-90,-93,-94,-47,]),'MULT_OP':([50,60,73,74,75,108,109,110,120,121,156,185,258,],[-100,-99,-106,-133,-133,142,-97,-98,-99,-100,-108,-96,-47,]),'DIV_OP':([50,60,73,74,75,108,109,110,120,121,156,185,258,],[-100,-99,-106,-133,-133,143,-97,-98,-99,-100,-108,-96,-47,]),'PLUS_OP':([50,60,72,73,74,75,107,108,109,110,120,121,141,144,156,185,202,203,258,],[-100,-99,-105,-106,-133,-133,138,-101,-97,-98,-99,-100,-92,-95,-108,-96,-93,-94,-47,]),'MINUS_OP':([50,60,72,73,74,75,107,108,109,110,120,121,141,144,156,185,202,203,258,],[-100,-99,-105,-106,-133,-133,139,-101,-97,-98,-99,-100,-92,-95,-108,-96,-93,-94,-47,]),'GT_LOG':([50,60,71,72,73,74,75,107,108,109,110,120,121,137,140,141,144,156,185,200,201,202,203,258,],[-100,-99,103,-105,-106,-133,-133,-101,-101,-97,-98,-99,-100,-88,-91,-92,-95,-108,-96,-89,-90,-93,-94,-47,]),'LT_LOG':([50,60,71,72,73,74,75,107,108,109,110,120,121,137,140,141,144,156,185,200,201,202,203,258,],[-100,-99,104,-105,-106,-133,-133,-101,-101,-97,-98,-99,-100,-88,-91,-92,-95,-108,-96,-89,-90,-93,-94,-47,]),'EQUAL_LOG':([50,60,71,72,73,74,75,107,108,109,110,120,121,137,140,141,144,156,185,200,201,202,203,258,],[-100,-99,105,-105,-106,-133,-133,-101,-101,-97,-98,-99,-100,-88,-91,-92,-95,-108,-96,-89,-90,-93,-94,-47,]),'NE_LOG':([50,60,71,72,73,74,75,107,108,109,110,120,121,137,140,141,144,156,185,200,201,202,203,258,],[-100,-99,106,-105,-106,-133,-133,-101,-101,-97,-98,-99,-100,-88,-91,-92,-95,-108,-96,-89,-90,-93,-94,-47,]),'AND_LOG':([50,60,70,71,72,73,74,75,100,101,107,108,109,110,120,121,132,137,140,141,144,156,170,185,200,201,202,203,258,],[-100,-99,98,-101,-105,-106,-133,-133,-81,-82,-101,-101,-97,-98,-99,-100,-110,-88,-91,-92,-95,-108,-83,-96,-89,-90,-93,-94,-47,]),'OR_LOG':([50,60,69,70,71,72,73,74,75,97,99,100,101,107,108,109,110,120,121,132,137,140,141,144,156,169,170,185,199,200,201,202,203,258,],[-100,-99,95,-101,-101,-105,-106,-133,-133,-78,-80,-81,-82,-101,-101,-97,-98,-99,-100,-110,-88,-91,-92,-95,-108,-112,-83,-96,-79,-89,-90,-93,-94,-47,]),'ASSIGN':([60,84,86,93,118,127,129,197,],[-102,116,-102,-101,154,166,-74,-73,]),'TO':([69,70,71,72,73,74,75,94,96,97,99,100,101,107,108,109,110,120,121,132,137,140,141,144,156,168,169,170,185,196,198,199,200,201,202,203,258,],[-101,-101,-101,-105,-106,-133,-133,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-96,228,-76,-79,-89,-90,-93,-94,-47,]),'DO':([69,70,71,72,73,74,75,94,96,97,99,100,101,107,108,109,110,120,121,132,137,140,141,144,156,168,169,170,185,195,198,199,200,201,202,203,227,245,258,],[-101,-101,-101,-105,-106,-133,-133,-75,-77,-78,-80,-81,-82,-101,-101,-97,-98,-99,-100,-110,-88,-91,-92,-95,-108,-112,-112,-83,-96,-122,-76,-79,-89,-90,-93,-94,244,256,-47,]),'ELSE':([115,243,],[-28,254,]),'STRING_CTE':([124,223,],[161,161,]),'THEN':([164,194,],[-118,226,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'dec_var_gob':([4,],[5,]),'empty':([4,5,29,30,36,40,47,69,70,71,81,93,107,108,113,117,118,124,149,159,175,176,182,192,193,212,215,220,223,234,243,257,268,269,275,277,],[7,10,35,38,45,59,83,96,99,101,83,129,140,144,35,152,155,163,180,190,206,209,216,224,224,235,180,190,163,180,253,266,272,266,266,272,]),'def_funciones':([5,],[8,]),'tipos':([6,29,40,41,47,81,113,205,208,268,277,],[11,33,61,77,61,61,33,230,77,270,270,]),'main':([8,],[15,]),'tipos_func':([9,],[17,]),'pn_tipoAct':([12,13,14,18,19,],[21,22,23,27,28,]),'pn_print':([15,],[24,]),'lista_ids':([20,42,44,],[29,78,79,]),'pn_func1':([26,],[32,]),'dec_var_aux':([29,113,],[34,147,]),'lista_aux':([30,],[36,]),'bloque':([31,204,226,244,256,261,],[39,229,243,255,263,267,]),'lista_aux_b':([36,],[43,]),'estatutos':([40,47,81,],[47,81,81,]),'asignacion':([40,47,81,],[48,48,48,]),'declaracion':([40,47,81,],[49,49,49,]),'llamada_func':([40,47,81,87,91,102,117,122,124,126,128,130,131,148,149,166,171,172,173,174,184,215,223,228,234,],[50,50,50,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'llamada_void':([40,47,81,],[51,51,51,]),'retorno':([40,47,81,],[52,52,52,]),'lectura':([40,47,81,],[53,53,53,]),'escritura':([40,47,81,],[54,54,54,]),'decision':([40,47,81,],[55,55,55,]),'loop_cond':([40,47,81,],[56,56,56,]),'loop_no_cond':([40,47,81,],[57,57,57,]),'expresiones':([40,47,81,87,91,117,122,124,126,128,130,148,149,166,184,215,223,228,234,],[58,58,58,119,125,151,158,162,165,167,168,177,179,196,217,179,162,245,179,]),'t_exp':([40,47,81,87,91,117,122,124,126,128,130,131,148,149,166,184,215,223,228,234,],[69,69,69,69,69,69,69,69,69,69,69,169,69,69,69,69,69,69,69,69,]),'g_exp':([40,47,81,87,91,117,122,124,126,128,130,131,148,149,166,184,215,223,228,234,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'m_exp':([40,47,81,87,91,102,117,122,124,126,128,130,131,148,149,166,171,172,184,215,223,228,234,],[71,71,71,71,71,132,71,71,71,71,71,71,71,71,71,71,200,201,71,71,71,71,71,]),'termino':([40,47,81,87,91,102,117,122,124,126,128,130,131,148,149,166,171,172,173,174,184,215,223,228,234,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,202,203,72,72,72,72,72,]),'factor':([40,47,81,87,91,102,117,122,124,126,128,130,131,148,149,166,171,172,173,174,184,215,223,228,234,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'parametros':([41,208,],[76,231,]),'estatu_rec':([47,81,],[82,114,]),'pn_expresionID':([60,86,],[84,118,]),'pn_llamFunc1':([60,120,],[85,157,]),'pn_expresion5':([62,117,186,],[87,149,149,]),'pn_secu3':([63,64,65,],[88,89,90,]),'pn_loop1':([67,],[92,]),'or_check':([69,],[94,]),'and_check':([70,],[97,]),'op_check':([71,],[100,]),'comparacion':([71,],[102,]),'pn_expresion3':([72,],[107,]),'pn_expresion4':([73,],[108,]),'pn_constante':([74,75,],[109,110,]),'nocond_aux':([93,],[127,]),'pn_expresion9':([95,98,],[130,131,]),'pn_expresion7':([103,104,105,106,],[133,134,135,136,]),'m_rec':([107,],[137,]),'term_rec':([108,],[141,]),'pn_func3':([111,],[145,]),'pn_secu1':([116,154,],[148,184,]),'llamada_void_aux':([117,],[150,]),'declaracion_aux':([118,],[153,]),'esc_aux':([124,223,],[160,242,]),'pn_expresion8':([132,],[170,]),'pn_expresion1':([138,139,],[171,172,]),'pn_expresion2':([142,143,],[173,174,]),'pn_func2':([146,],[176,]),'llamada_func_aux':([149,215,234,],[178,237,249,]),'pn_llamFunc2':([151,179,],[182,212,]),'pn_expresion6':([156,211,],[185,232,]),'lec_aux':([159,220,],[188,240,]),'pn_secu4':([161,162,239,],[192,193,250,]),'pn_cond1':([164,],[194,]),'pn_expresion10':([168,169,],[198,199,]),'dec_var_loc':([175,],[204,]),'param_aux':([176,],[207,]),'pn_secu2':([177,217,],[210,238,]),'pn_llamFunc3':([181,232,],[213,248,]),'llama_void_auxb':([182,],[214,]),'esc_rec':([192,193,],[222,225,]),'pn_loop2':([195,],[227,]),'llama_func_auxb':([212,],[233,]),'pn_secu5':([221,250,],[241,259,]),'pn_func4':([229,],[246,]),'dec_aux':([243,],[251,]),'else':([243,],[252,]),'pn_cond2':([252,],[260,]),'pn_cond3':([254,],[261,]),'pn_loop3':([255,],[262,]),'dec_var_loc_aux':([257,269,275,],[264,273,276,]),'var_loc_rec':([268,277,],[271,278,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMIC dec_var_gob def_funciones main pn_print','program',7,'p_program','parser.py',50),
  ('dec_var_gob -> VARS tipos COLON lista_ids dec_var_aux','dec_var_gob',5,'p_dec_var_gob','parser.py',55),
  ('dec_var_gob -> empty','dec_var_gob',1,'p_dec_var_gob','parser.py',56),
  ('dec_var_aux -> tipos COLON lista_ids SEMIC dec_var_aux','dec_var_aux',5,'p_dec_var_aux','parser.py',61),
  ('dec_var_aux -> empty','dec_var_aux',1,'p_dec_var_aux','parser.py',62),
  ('lista_ids -> ID lista_aux lista_aux_b','lista_ids',3,'p_lista_ids','parser.py',67),
  ('lista_aux -> LBRACK INT_CTE RBRACK','lista_aux',3,'p_lista_aux','parser.py',72),
  ('lista_aux -> empty','lista_aux',1,'p_lista_aux','parser.py',73),
  ('lista_aux_b -> COMMA lista_ids','lista_aux_b',2,'p_lista_aux_b','parser.py',78),
  ('lista_aux_b -> empty','lista_aux_b',1,'p_lista_aux_b','parser.py',79),
  ('tipos -> INT_TYPE pn_tipoAct','tipos',2,'p_tipos','parser.py',84),
  ('tipos -> FLOAT_TYPE pn_tipoAct','tipos',2,'p_tipos','parser.py',85),
  ('tipos -> CHAR_TYPE pn_tipoAct','tipos',2,'p_tipos','parser.py',86),
  ('def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4','def_funciones',12,'p_def_funciones','parser.py',92),
  ('def_funciones -> empty','def_funciones',1,'p_def_funciones','parser.py',93),
  ('tipos_func -> INT_TYPE pn_tipoAct','tipos_func',2,'p_tipos_func','parser.py',98),
  ('tipos_func -> VOID pn_tipoAct','tipos_func',2,'p_tipos_func','parser.py',99),
  ('dec_var_loc -> VARS tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec','dec_var_loc',7,'p_dec_var_loc','parser.py',104),
  ('dec_var_loc -> empty','dec_var_loc',1,'p_dec_var_loc','parser.py',105),
  ('dec_var_loc_aux -> COMMA ID dec_var_loc_aux','dec_var_loc_aux',3,'p_dec_var_loc_aux','parser.py',110),
  ('dec_var_loc_aux -> empty','dec_var_loc_aux',1,'p_dec_var_loc_aux','parser.py',111),
  ('var_loc_rec -> tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec','var_loc_rec',6,'p_var_loc_rec','parser.py',116),
  ('var_loc_rec -> empty','var_loc_rec',1,'p_var_loc_rec','parser.py',117),
  ('parametros -> tipos COLON ID pn_func2 param_aux','parametros',5,'p_parametros','parser.py',122),
  ('param_aux -> COMMA parametros','param_aux',2,'p_param_aux','parser.py',127),
  ('param_aux -> empty','param_aux',1,'p_param_aux','parser.py',128),
  ('main -> MAIN LPAREN RPAREN bloque','main',4,'p_main','parser.py',135),
  ('bloque -> LCURLY estatutos estatu_rec RCURLY','bloque',4,'p_bloque','parser.py',140),
  ('estatu_rec -> estatutos estatu_rec','estatu_rec',2,'p_estatu_rec','parser.py',145),
  ('estatu_rec -> empty','estatu_rec',1,'p_estatu_rec','parser.py',146),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',151),
  ('estatutos -> declaracion','estatutos',1,'p_estatutos','parser.py',152),
  ('estatutos -> llamada_func','estatutos',1,'p_estatutos','parser.py',153),
  ('estatutos -> llamada_void','estatutos',1,'p_estatutos','parser.py',154),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',155),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',156),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',157),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',158),
  ('estatutos -> loop_cond','estatutos',1,'p_estatutos','parser.py',159),
  ('estatutos -> loop_no_cond','estatutos',1,'p_estatutos','parser.py',160),
  ('estatutos -> expresiones','estatutos',1,'p_estatutos','parser.py',161),
  ('estatutos -> empty','estatutos',1,'p_estatutos','parser.py',162),
  ('asignacion -> ID pn_expresionID ASSIGN pn_secu1 expresiones pn_secu2','asignacion',6,'p_asignacion','parser.py',167),
  ('declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC','declaracion',5,'p_declaracion','parser.py',172),
  ('declaracion_aux -> ASSIGN pn_secu1 expresiones pn_secu2','declaracion_aux',4,'p_declaracion_aux','parser.py',177),
  ('declaracion_aux -> empty','declaracion_aux',1,'p_declaracion_aux','parser.py',178),
  ('llamada_func -> ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC','llamada_func',9,'p_llamada_func','parser.py',183),
  ('llamada_func_aux -> expresiones pn_llamFunc2 llama_func_auxb','llamada_func_aux',3,'p_llamada_func_aux','parser.py',188),
  ('llamada_func_aux -> empty','llamada_func_aux',1,'p_llamada_func_aux','parser.py',189),
  ('llama_func_auxb -> COMMA llamada_func_aux','llama_func_auxb',2,'p_llama_func_auxb','parser.py',194),
  ('llama_func_auxb -> empty','llama_func_auxb',1,'p_llama_func_auxb','parser.py',195),
  ('llamada_void -> ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC','llamada_void',7,'p_llamada_void','parser.py',200),
  ('llamada_void_aux -> expresiones pn_llamFunc2 llama_void_auxb','llamada_void_aux',3,'p_llamada_void_aux','parser.py',205),
  ('llamada_void_aux -> empty','llamada_void_aux',1,'p_llamada_void_aux','parser.py',206),
  ('llama_void_auxb -> COMMA llamada_func_aux','llama_void_auxb',2,'p_llama_void_auxb','parser.py',211),
  ('llama_void_auxb -> empty','llama_void_auxb',1,'p_llama_void_auxb','parser.py',212),
  ('retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC','retorno',6,'p_retorno','parser.py',217),
  ('lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5','lectura',9,'p_lectura','parser.py',222),
  ('lec_aux -> COMMA ID lec_aux','lec_aux',3,'p_lec_aux','parser.py',227),
  ('lec_aux -> empty','lec_aux',1,'p_lec_aux','parser.py',228),
  ('escritura -> WRITE pn_secu3 LPAREN esc_aux RPAREN SEMIC pn_secu5','escritura',7,'p_escritura','parser.py',233),
  ('esc_aux -> STRING_CTE pn_secu4 esc_rec','esc_aux',3,'p_esc_aux','parser.py',238),
  ('esc_aux -> expresiones pn_secu4 esc_rec','esc_aux',3,'p_esc_aux','parser.py',239),
  ('esc_aux -> empty','esc_aux',1,'p_esc_aux','parser.py',240),
  ('esc_rec -> COMMA esc_aux','esc_rec',2,'p_esc_rec','parser.py',245),
  ('esc_rec -> empty','esc_rec',1,'p_esc_rec','parser.py',246),
  ('decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque dec_aux','decision',8,'p_decision','parser.py',251),
  ('dec_aux -> else pn_cond2','dec_aux',2,'p_dec_aux','parser.py',256),
  ('dec_aux -> empty','dec_aux',1,'p_dec_aux','parser.py',257),
  ('else -> ELSE pn_cond3 bloque','else',3,'p_else','parser.py',262),
  ('loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3','loop_cond',9,'p_loop_cond','parser.py',267),
  ('loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque','loop_no_cond',9,'p_loop_no_cond','parser.py',272),
  ('nocond_aux -> LBRACK expresiones RBRACK','nocond_aux',3,'p_nocond_aux','parser.py',277),
  ('nocond_aux -> empty','nocond_aux',1,'p_nocond_aux','parser.py',278),
  ('expresiones -> t_exp or_check','expresiones',2,'p_expresiones','parser.py',285),
  ('or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10','or_check',4,'p_or_check','parser.py',290),
  ('or_check -> empty','or_check',1,'p_or_check','parser.py',291),
  ('t_exp -> g_exp and_check','t_exp',2,'p_t_exp','parser.py',296),
  ('and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10','and_check',4,'p_and_check','parser.py',301),
  ('and_check -> empty','and_check',1,'p_and_check','parser.py',302),
  ('g_exp -> m_exp op_check','g_exp',2,'p_g_exp','parser.py',307),
  ('op_check -> empty','op_check',1,'p_op_check','parser.py',312),
  ('op_check -> comparacion m_exp pn_expresion8','op_check',3,'p_op_check','parser.py',313),
  ('comparacion -> GT_LOG pn_expresion7','comparacion',2,'p_comparacion','parser.py',318),
  ('comparacion -> LT_LOG pn_expresion7','comparacion',2,'p_comparacion','parser.py',319),
  ('comparacion -> EQUAL_LOG pn_expresion7','comparacion',2,'p_comparacion','parser.py',320),
  ('comparacion -> NE_LOG pn_expresion7','comparacion',2,'p_comparacion','parser.py',321),
  ('m_exp -> termino pn_expresion3 m_rec','m_exp',3,'p_m_exp','parser.py',326),
  ('m_rec -> PLUS_OP pn_expresion1 m_exp','m_rec',3,'p_m_rec','parser.py',331),
  ('m_rec -> MINUS_OP pn_expresion1 m_exp','m_rec',3,'p_m_rec','parser.py',332),
  ('m_rec -> empty','m_rec',1,'p_m_rec','parser.py',333),
  ('termino -> factor pn_expresion4 term_rec','termino',3,'p_termino','parser.py',338),
  ('term_rec -> MULT_OP pn_expresion2 termino','term_rec',3,'p_term_rec','parser.py',343),
  ('term_rec -> DIV_OP pn_expresion2 termino','term_rec',3,'p_term_rec','parser.py',344),
  ('term_rec -> empty','term_rec',1,'p_term_rec','parser.py',345),
  ('factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6','factor',5,'p_factor','parser.py',350),
  ('factor -> INT_CTE pn_constante','factor',2,'p_factor','parser.py',351),
  ('factor -> FLOAT_CTE pn_constante','factor',2,'p_factor','parser.py',352),
  ('factor -> ID','factor',1,'p_factor','parser.py',353),
  ('factor -> llamada_func','factor',1,'p_factor','parser.py',354),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',359),
  ('pn_expresionID -> <empty>','pn_expresionID',0,'p_pn_expresionID','parser.py',364),
  ('pn_expresion1 -> <empty>','pn_expresion1',0,'p_pn_expresion1','parser.py',371),
  ('pn_expresion2 -> <empty>','pn_expresion2',0,'p_pn_expresion2','parser.py',383),
  ('pn_expresion3 -> <empty>','pn_expresion3',0,'p_pn_expresion3','parser.py',393),
  ('pn_expresion4 -> <empty>','pn_expresion4',0,'p_pn_expresion4','parser.py',420),
  ('pn_expresion5 -> <empty>','pn_expresion5',0,'p_pn_expresion5','parser.py',445),
  ('pn_expresion6 -> <empty>','pn_expresion6',0,'p_pn_expresion6','parser.py',452),
  ('pn_expresion7 -> <empty>','pn_expresion7',0,'p_pn_expresion7','parser.py',458),
  ('pn_expresion8 -> <empty>','pn_expresion8',0,'p_pn_expresion8','parser.py',468),
  ('pn_expresion9 -> <empty>','pn_expresion9',0,'p_pn_expresion9','parser.py',492),
  ('pn_expresion10 -> <empty>','pn_expresion10',0,'p_pn_expresion10','parser.py',501),
  ('pn_secu1 -> <empty>','pn_secu1',0,'p_pn_secu1','parser.py',527),
  ('pn_secu2 -> <empty>','pn_secu2',0,'p_pn_secu2','parser.py',536),
  ('pn_secu3 -> <empty>','pn_secu3',0,'p_pn_secu3','parser.py',562),
  ('pn_secu4 -> <empty>','pn_secu4',0,'p_pn_secu4','parser.py',571),
  ('pn_secu5 -> <empty>','pn_secu5',0,'p_pn_secu5','parser.py',582),
  ('pn_cond1 -> <empty>','pn_cond1',0,'p_pn_cond1','parser.py',597),
  ('pn_cond2 -> <empty>','pn_cond2',0,'p_pn_cond2','parser.py',607),
  ('pn_cond3 -> <empty>','pn_cond3',0,'p_pn_cond3','parser.py',615),
  ('pn_loop1 -> <empty>','pn_loop1',0,'p_pn_loop1','parser.py',625),
  ('pn_loop2 -> <empty>','pn_loop2',0,'p_pn_loop2','parser.py',631),
  ('pn_loop3 -> <empty>','pn_loop3',0,'p_pn_loop3','parser.py',643),
  ('pn_tipoAct -> <empty>','pn_tipoAct',0,'p_pn_tipoAct','parser.py',654),
  ('pn_func1 -> <empty>','pn_func1',0,'p_pn_func1','parser.py',663),
  ('pn_func2 -> <empty>','pn_func2',0,'p_pn_func2','parser.py',677),
  ('pn_func3 -> <empty>','pn_func3',0,'p_pn_func3','parser.py',687),
  ('pn_func4 -> <empty>','pn_func4',0,'p_pn_func4','parser.py',693),
  ('pn_llamFunc1 -> <empty>','pn_llamFunc1',0,'p_pn_llamFunc1','parser.py',700),
  ('pn_llamFunc2 -> <empty>','pn_llamFunc2',0,'p_pn_llamFunc2','parser.py',710),
  ('pn_llamFunc3 -> <empty>','pn_llamFunc3',0,'p_pn_llamFunc3','parser.py',722),
  ('pn_GotoMain -> <empty>','pn_GotoMain',0,'p_pn_GotoMain','parser.py',738),
  ('pn_constante -> <empty>','pn_constante',0,'p_pn_constante','parser.py',745),
  ('pn_print -> <empty>','pn_print',0,'p_pn_print','parser.py',786),
]
