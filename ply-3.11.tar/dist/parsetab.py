
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND_LOG ARC ASSIGN CHAR_CTE CHAR_TYPE CIRCLE COLON COLOR COMMA COMMENT DIV_OP DO ELSE EQUAL_LOG FLOAT_CTE FLOAT_TYPE FOR FUNCTION GTE_LOG GT_LOG ID IF INT_CTE INT_TYPE LBRACK LCURLY LINE LPAREN LTE_LOG LT_LOG MAIN MINUS_OP MULT_OP NEW_LINE NE_LOG OR_LOG PENDOWN PENUP PLUS_OP POINT PROGRAM RBRACK RCURLY READ RETURN RPAREN SEMIC SIZE STRING_CTE THEN TO VARS VOID WHILE WRITEprogram : PROGRAM ID SEMIC dec_var_gob def_funciones main\n    dec_var_gob : VARS tipos COLON lista_ids SEMIC dec_var_aux\n                | empty\n    \n    dec_var_aux : tipos COLON lista_ids SEMIC dec_var_aux\n                | empty\n    \n    lista_ids : ID lista_aux lista_aux_b\n    \n    lista_aux : LBRACK INT_CTE RBRACK\n              | empty\n    \n    lista_aux_b : COMMA lista_ids\n                | empty\n    \n    tipos   : INT_CTE\n            | FLOAT_CTE\n            | CHAR_CTE\n    \n    def_funciones : FUNCTION tipos_func ID LPAREN parametros RPAREN SEMIC dec_var_loc bloque\n                  | empty\n    \n    tipos_func : INT_CTE\n               | FLOAT_CTE\n               | CHAR_CTE\n               | VOID\n    \n    dec_var_loc : VARS tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec\n                | empty\n    \n    dec_var_loc_aux : COMMA ID dec_var_loc_aux\n                    | empty\n    \n    var_loc_rec : tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec\n                | empty\n    \n    parametros : tipos COLON ID param_aux\n    \n    param_aux : COMMA parametros\n              | empty\n    \n    main : MAIN LPAREN RPAREN bloque\n    \n    bloque : LCURLY estatutos estatu_rec RCURLY\n    \n    estatu_rec : estatutos estatu_rec\n               | empty\n    \n    estatutos : asignacion\n              | llamada_func\n              | llamada_void\n              | retorno\n              | lectura\n              | escritura\n              | decision\n              | loop_cond\n              | loop_no_cond \n              | expresiones\n              | empty\n    \n    asignacion : ID ASSIGN expresiones\n    \n    llamada_func : ID LPAREN llamada_func_aux RPAREN SEMIC\n    \n    llamada_func_aux : ID llama_func_auxb\n                     | empty\n    \n    llama_func_auxb : COMMA llamada_func_aux\n                    | empty\n    \n    llamada_void : ID LPAREN llamada_void_aux RPAREN SEMIC\n    \n    llamada_void_aux : ID llama_void_auxb\n                     | empty\n    \n    llama_void_auxb : COMMA llamada_func_aux\n                    | empty\n    \n    retorno : RETURN LPAREN expresiones RPAREN SEMIC\n    \n    lectura : READ LPAREN ID lec_aux RPAREN SEMIC\n    \n    lec_aux : COMMA ID lec_aux\n            | empty\n    \n    escritura : WRITE LPAREN esc_aux RPAREN SEMIC\n    \n    esc_aux : STRING_CTE esc_rec\n            | expresiones esc_rec\n            | empty\n    \n    esc_rec : COMMA esc_aux\n            | empty\n    \n    decision : IF LPAREN expresiones RPAREN THEN bloque dec_aux\n    \n    dec_aux : else\n            | empty\n    \n    else : ELSE bloque\n    \n    loop_cond : WHILE LPAREN expresiones RPAREN DO bloque\n    \n    loop_no_cond : FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque\n    \n    nocond_aux : LBRACK expresiones RBRACK\n               | empty\n    \n    expresiones : t_exp or_check\n    \n    or_check : OR_LOG expresiones\n             | empty\n    \n    t_exp : g_exp and_check\n    \n    and_check : AND_LOG t_exp\n              | empty\n    \n    g_exp : m_exp op_check\n    \n    op_check : empty\n             | comparacion m_exp\n    \n    comparacion : GT_LOG\n                | LT_LOG\n                | EQUAL_LOG\n                | NE_LOG\n    \n    m_exp : termino m_rec\n    \n    m_rec : PLUS_OP m_exp\n          | MINUS_OP m_exp\n          | empty\n    \n    termino : factor term_rec\n    \n    term_rec : MULT_OP termino\n             | DIV_OP termino\n             | empty\n    \n    factor : LPAREN expresiones RPAREN\n           | INT_CTE\n           | FLOAT_CTE\n           | ID\n           | llamada_func\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,15,33,115,],[0,-1,-29,-30,]),'ID':([2,17,18,19,20,21,22,34,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,63,64,65,66,67,68,69,70,72,73,76,78,79,80,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,121,122,132,134,135,136,137,138,139,140,150,158,162,167,174,175,176,178,181,187,189,191,192,193,195,196,197,201,203,207,212,],[3,24,-16,-17,-18,-19,26,56,26,56,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,82,89,-99,-99,-99,-99,-99,-95,-96,112,26,56,-43,82,117,-97,-98,82,124,82,82,82,-73,82,-75,-76,82,-78,-79,-80,82,-82,-83,-84,-85,-86,82,82,-89,-90,82,82,-93,-30,-44,-94,154,82,-74,-77,-81,-87,-88,-91,-92,154,180,82,82,-45,-50,154,-55,-59,194,-56,-99,-69,82,-65,-66,-67,206,-68,-70,213,]),'SEMIC':([3,25,26,30,32,40,42,71,74,75,113,152,153,156,160,179,194,200,202,206,211,213,214,],[4,29,-99,-99,-8,-6,-10,111,-9,-7,147,174,175,178,181,189,-99,205,-23,-99,-22,-99,215,]),'VARS':([4,111,],[6,142,]),'FUNCTION':([4,5,7,29,38,39,147,172,],[-99,9,-3,-99,-2,-5,-99,-4,]),'MAIN':([4,5,7,8,10,29,38,39,115,147,169,172,],[-99,-99,-3,16,-15,-99,-2,-5,-30,-99,-14,-4,]),'INT_CTE':([6,9,28,29,31,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,65,66,67,68,69,70,76,78,79,82,83,84,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,121,132,134,135,136,137,138,139,140,142,145,147,162,167,174,175,178,181,189,191,192,193,195,196,197,203,205,207,215,],[12,18,12,12,43,69,69,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,69,-99,-99,-99,-99,-99,-95,-96,69,-43,69,-97,-98,69,69,69,69,-73,69,-75,-76,69,-78,-79,-80,69,-82,-83,-84,-85,-86,69,69,-89,-90,69,69,-93,-30,-44,-94,69,-74,-77,-81,-87,-88,-91,-92,12,12,12,69,69,-45,-50,-55,-59,-56,-99,-69,69,-65,-66,-67,-68,12,-70,12,]),'FLOAT_CTE':([6,9,28,29,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,64,65,66,67,68,69,70,76,78,79,82,83,84,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,121,132,134,135,136,137,138,139,140,142,145,147,162,167,174,175,178,181,189,191,192,193,195,196,197,203,205,207,215,],[13,19,13,13,70,70,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,70,-99,-99,-99,-99,-99,-95,-96,70,-43,70,-97,-98,70,70,70,70,-73,70,-75,-76,70,-78,-79,-80,70,-82,-83,-84,-85,-86,70,70,-89,-90,70,70,-93,-30,-44,-94,70,-74,-77,-81,-87,-88,-91,-92,13,13,13,70,70,-45,-50,-55,-59,-56,-99,-69,70,-65,-66,-67,-68,13,-70,13,]),'CHAR_CTE':([6,9,28,29,142,145,147,205,215,],[14,20,14,14,14,14,14,14,14,]),'VOID':([9,],[21,]),'COLON':([11,12,13,14,36,37,170,208,],[22,-11,-12,-13,72,73,187,212,]),'LPAREN':([16,24,34,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,76,78,79,82,83,84,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,121,132,134,135,136,137,138,139,140,162,167,174,175,178,181,189,191,192,193,195,196,197,203,207,],[23,28,57,57,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,80,57,84,85,86,87,88,-99,-99,-99,-99,-99,-95,-96,57,-43,57,122,-98,57,57,57,57,-73,57,-75,-76,57,-78,-79,-80,57,-82,-83,-84,-85,-86,57,57,-89,-90,57,57,-93,-30,-44,-94,57,-74,-77,-81,-87,-88,-91,-92,57,57,-45,-50,-55,-59,-56,-99,-69,57,-65,-66,-67,-68,-70,]),'RPAREN':([23,35,64,65,66,67,68,69,70,80,81,82,83,86,90,92,93,95,96,97,103,106,107,110,112,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,144,146,148,149,150,151,154,155,157,159,161,162,163,164,171,173,174,176,177,180,182,188,190,],[27,71,-99,-99,-99,-99,-99,-95,-96,-99,121,-97,-98,-99,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-99,-99,152,153,-47,-94,-99,156,-99,160,-99,-99,-62,165,166,-74,-77,-81,-87,-88,-91,-92,-26,-28,-46,-51,-99,-49,-99,-47,179,-58,-60,-99,-64,-61,-27,-48,-45,-99,-49,-99,-63,-48,-57,]),'LBRACK':([26,89,],[31,132,]),'COMMA':([26,30,32,64,65,66,67,68,69,70,75,82,83,90,92,93,95,96,97,103,106,107,110,112,117,121,124,126,127,134,135,136,137,138,139,140,154,174,180,194,206,213,],[-99,41,-8,-99,-99,-99,-99,-99,-95,-96,-7,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,145,150,-94,158,162,162,-74,-77,-81,-87,-88,-91,-92,176,-45,158,201,201,201,]),'LCURLY':([27,111,141,143,183,184,198,204,205,209,210,215,216,],[34,-99,34,-21,34,34,34,34,-99,-20,-25,-99,-24,]),'RETURN':([34,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,68,69,70,76,78,82,83,90,92,93,95,96,97,103,106,107,110,115,116,121,134,135,136,137,138,139,140,174,175,178,181,189,191,192,195,196,197,203,207,],[58,58,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,-99,-99,-99,-99,-99,-95,-96,58,-43,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-30,-44,-94,-74,-77,-81,-87,-88,-91,-92,-45,-50,-55,-59,-56,-99,-69,-65,-66,-67,-68,-70,]),'READ':([34,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,68,69,70,76,78,82,83,90,92,93,95,96,97,103,106,107,110,115,116,121,134,135,136,137,138,139,140,174,175,178,181,189,191,192,195,196,197,203,207,],[59,59,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,-99,-99,-99,-99,-99,-95,-96,59,-43,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-30,-44,-94,-74,-77,-81,-87,-88,-91,-92,-45,-50,-55,-59,-56,-99,-69,-65,-66,-67,-68,-70,]),'WRITE':([34,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,68,69,70,76,78,82,83,90,92,93,95,96,97,103,106,107,110,115,116,121,134,135,136,137,138,139,140,174,175,178,181,189,191,192,195,196,197,203,207,],[60,60,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,-99,-99,-99,-99,-99,-95,-96,60,-43,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-30,-44,-94,-74,-77,-81,-87,-88,-91,-92,-45,-50,-55,-59,-56,-99,-69,-65,-66,-67,-68,-70,]),'IF':([34,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,68,69,70,76,78,82,83,90,92,93,95,96,97,103,106,107,110,115,116,121,134,135,136,137,138,139,140,174,175,178,181,189,191,192,195,196,197,203,207,],[61,61,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,-99,-99,-99,-99,-99,-95,-96,61,-43,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-30,-44,-94,-74,-77,-81,-87,-88,-91,-92,-45,-50,-55,-59,-56,-99,-69,-65,-66,-67,-68,-70,]),'WHILE':([34,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,68,69,70,76,78,82,83,90,92,93,95,96,97,103,106,107,110,115,116,121,134,135,136,137,138,139,140,174,175,178,181,189,191,192,195,196,197,203,207,],[62,62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,-99,-99,-99,-99,-99,-95,-96,62,-43,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-30,-44,-94,-74,-77,-81,-87,-88,-91,-92,-45,-50,-55,-59,-56,-99,-69,-65,-66,-67,-68,-70,]),'FOR':([34,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,68,69,70,76,78,82,83,90,92,93,95,96,97,103,106,107,110,115,116,121,134,135,136,137,138,139,140,174,175,178,181,189,191,192,195,196,197,203,207,],[63,63,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,-99,-99,-99,-99,-99,-95,-96,63,-43,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-30,-44,-94,-74,-77,-81,-87,-88,-91,-92,-45,-50,-55,-59,-56,-99,-69,-65,-66,-67,-68,-70,]),'RCURLY':([34,44,45,46,47,48,49,50,51,52,53,54,55,56,64,65,66,67,68,69,70,76,77,78,82,83,90,92,93,95,96,97,103,106,107,110,114,115,116,121,134,135,136,137,138,139,140,174,175,178,181,189,191,192,195,196,197,203,207,],[-99,-99,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-97,-99,-99,-99,-99,-99,-95,-96,-99,115,-32,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-31,-30,-44,-94,-74,-77,-81,-87,-88,-91,-92,-45,-50,-55,-59,-56,-99,-69,-65,-66,-67,-68,-70,]),'RBRACK':([43,64,65,66,67,68,69,70,82,83,90,92,93,95,96,97,103,106,107,110,121,134,135,136,137,138,139,140,168,174,],[75,-99,-99,-99,-99,-99,-95,-96,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-94,-74,-77,-81,-87,-88,-91,-92,186,-45,]),'MULT_OP':([46,56,68,69,70,82,83,121,174,],[-98,-97,108,-95,-96,-97,-98,-94,-45,]),'DIV_OP':([46,56,68,69,70,82,83,121,174,],[-98,-97,109,-95,-96,-97,-98,-94,-45,]),'PLUS_OP':([46,56,67,68,69,70,82,83,107,110,121,139,140,174,],[-98,-97,104,-99,-95,-96,-97,-98,-90,-93,-94,-91,-92,-45,]),'MINUS_OP':([46,56,67,68,69,70,82,83,107,110,121,139,140,174,],[-98,-97,105,-99,-95,-96,-97,-98,-90,-93,-94,-91,-92,-45,]),'GT_LOG':([46,56,66,67,68,69,70,82,83,103,106,107,110,121,137,138,139,140,174,],[-98,-97,99,-99,-99,-95,-96,-97,-98,-86,-89,-90,-93,-94,-87,-88,-91,-92,-45,]),'LT_LOG':([46,56,66,67,68,69,70,82,83,103,106,107,110,121,137,138,139,140,174,],[-98,-97,100,-99,-99,-95,-96,-97,-98,-86,-89,-90,-93,-94,-87,-88,-91,-92,-45,]),'EQUAL_LOG':([46,56,66,67,68,69,70,82,83,103,106,107,110,121,137,138,139,140,174,],[-98,-97,101,-99,-99,-95,-96,-97,-98,-86,-89,-90,-93,-94,-87,-88,-91,-92,-45,]),'NE_LOG':([46,56,66,67,68,69,70,82,83,103,106,107,110,121,137,138,139,140,174,],[-98,-97,102,-99,-99,-95,-96,-97,-98,-86,-89,-90,-93,-94,-87,-88,-91,-92,-45,]),'AND_LOG':([46,56,65,66,67,68,69,70,82,83,96,97,103,106,107,110,121,136,137,138,139,140,174,],[-98,-97,94,-99,-99,-99,-95,-96,-97,-98,-79,-80,-86,-89,-90,-93,-94,-81,-87,-88,-91,-92,-45,]),'OR_LOG':([46,56,64,65,66,67,68,69,70,82,83,93,95,96,97,103,106,107,110,121,135,136,137,138,139,140,174,],[-98,-97,91,-99,-99,-99,-99,-95,-96,-97,-98,-76,-78,-79,-80,-86,-89,-90,-93,-94,-77,-81,-87,-88,-91,-92,-45,]),'ASSIGN':([56,89,131,133,186,],[79,-99,167,-72,-71,]),'TO':([64,65,66,67,68,69,70,82,83,90,92,93,95,96,97,103,106,107,110,121,134,135,136,137,138,139,140,174,185,],[-99,-99,-99,-99,-99,-95,-96,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-94,-74,-77,-81,-87,-88,-91,-92,-45,193,]),'DO':([64,65,66,67,68,69,70,82,83,90,92,93,95,96,97,103,106,107,110,121,134,135,136,137,138,139,140,166,174,199,],[-99,-99,-99,-99,-99,-95,-96,-97,-98,-73,-75,-76,-78,-79,-80,-86,-89,-90,-93,-94,-74,-77,-81,-87,-88,-91,-92,184,-45,204,]),'STRING_CTE':([86,162,],[126,126,]),'ELSE':([115,191,],[-30,198,]),'THEN':([165,],[183,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'dec_var_gob':([4,],[5,]),'empty':([4,5,26,29,30,34,44,64,65,66,67,68,76,80,86,89,111,112,117,122,124,126,127,147,150,154,162,176,180,191,194,205,206,213,215,],[7,10,32,39,42,55,78,92,95,97,106,110,78,120,128,133,143,146,151,155,159,163,163,39,155,177,128,155,159,197,202,210,202,202,210,]),'def_funciones':([5,],[8,]),'tipos':([6,28,29,142,145,147,205,215,],[11,36,37,170,36,37,208,208,]),'main':([8,],[15,]),'tipos_func':([9,],[17,]),'lista_ids':([22,41,73,],[25,74,113,]),'lista_aux':([26,],[30,]),'bloque':([27,141,183,184,198,204,],[33,169,191,192,203,207,]),'parametros':([28,145,],[35,171,]),'dec_var_aux':([29,147,],[38,172,]),'lista_aux_b':([30,],[40,]),'estatutos':([34,44,76,],[44,76,76,]),'asignacion':([34,44,76,],[45,45,45,]),'llamada_func':([34,44,57,76,79,84,86,87,88,91,94,98,104,105,108,109,132,162,167,193,],[46,46,83,46,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'llamada_void':([34,44,76,],[47,47,47,]),'retorno':([34,44,76,],[48,48,48,]),'lectura':([34,44,76,],[49,49,49,]),'escritura':([34,44,76,],[50,50,50,]),'decision':([34,44,76,],[51,51,51,]),'loop_cond':([34,44,76,],[52,52,52,]),'loop_no_cond':([34,44,76,],[53,53,53,]),'expresiones':([34,44,57,76,79,84,86,87,88,91,132,162,167,193,],[54,54,81,54,116,123,127,129,130,134,168,127,185,199,]),'t_exp':([34,44,57,76,79,84,86,87,88,91,94,132,162,167,193,],[64,64,64,64,64,64,64,64,64,64,135,64,64,64,64,]),'g_exp':([34,44,57,76,79,84,86,87,88,91,94,132,162,167,193,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'m_exp':([34,44,57,76,79,84,86,87,88,91,94,98,104,105,132,162,167,193,],[66,66,66,66,66,66,66,66,66,66,66,136,137,138,66,66,66,66,]),'termino':([34,44,57,76,79,84,86,87,88,91,94,98,104,105,108,109,132,162,167,193,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,139,140,67,67,67,67,]),'factor':([34,44,57,76,79,84,86,87,88,91,94,98,104,105,108,109,132,162,167,193,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'estatu_rec':([44,76,],[77,114,]),'or_check':([64,],[90,]),'and_check':([65,],[93,]),'op_check':([66,],[96,]),'comparacion':([66,],[98,]),'m_rec':([67,],[103,]),'term_rec':([68,],[107,]),'llamada_func_aux':([80,122,150,176,],[118,118,173,188,]),'llamada_void_aux':([80,],[119,]),'esc_aux':([86,162,],[125,182,]),'nocond_aux':([89,],[131,]),'dec_var_loc':([111,],[141,]),'param_aux':([112,],[144,]),'llama_func_auxb':([117,154,],[148,148,]),'llama_void_auxb':([117,],[149,]),'lec_aux':([124,180,],[157,190,]),'esc_rec':([126,127,],[161,164,]),'dec_aux':([191,],[195,]),'else':([191,],[196,]),'dec_var_loc_aux':([194,206,213,],[200,211,214,]),'var_loc_rec':([205,215,],[209,216,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMIC dec_var_gob def_funciones main','program',6,'p_program','parser.py',21),
  ('dec_var_gob -> VARS tipos COLON lista_ids SEMIC dec_var_aux','dec_var_gob',6,'p_dec_var_gob','parser.py',26),
  ('dec_var_gob -> empty','dec_var_gob',1,'p_dec_var_gob','parser.py',27),
  ('dec_var_aux -> tipos COLON lista_ids SEMIC dec_var_aux','dec_var_aux',5,'p_dec_var_aux','parser.py',32),
  ('dec_var_aux -> empty','dec_var_aux',1,'p_dec_var_aux','parser.py',33),
  ('lista_ids -> ID lista_aux lista_aux_b','lista_ids',3,'p_lista_ids','parser.py',38),
  ('lista_aux -> LBRACK INT_CTE RBRACK','lista_aux',3,'p_lista_aux','parser.py',43),
  ('lista_aux -> empty','lista_aux',1,'p_lista_aux','parser.py',44),
  ('lista_aux_b -> COMMA lista_ids','lista_aux_b',2,'p_lista_aux_b','parser.py',49),
  ('lista_aux_b -> empty','lista_aux_b',1,'p_lista_aux_b','parser.py',50),
  ('tipos -> INT_CTE','tipos',1,'p_tipos','parser.py',55),
  ('tipos -> FLOAT_CTE','tipos',1,'p_tipos','parser.py',56),
  ('tipos -> CHAR_CTE','tipos',1,'p_tipos','parser.py',57),
  ('def_funciones -> FUNCTION tipos_func ID LPAREN parametros RPAREN SEMIC dec_var_loc bloque','def_funciones',9,'p_def_funciones','parser.py',63),
  ('def_funciones -> empty','def_funciones',1,'p_def_funciones','parser.py',64),
  ('tipos_func -> INT_CTE','tipos_func',1,'p_tipos_func','parser.py',69),
  ('tipos_func -> FLOAT_CTE','tipos_func',1,'p_tipos_func','parser.py',70),
  ('tipos_func -> CHAR_CTE','tipos_func',1,'p_tipos_func','parser.py',71),
  ('tipos_func -> VOID','tipos_func',1,'p_tipos_func','parser.py',72),
  ('dec_var_loc -> VARS tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec','dec_var_loc',7,'p_dec_var_loc','parser.py',77),
  ('dec_var_loc -> empty','dec_var_loc',1,'p_dec_var_loc','parser.py',78),
  ('dec_var_loc_aux -> COMMA ID dec_var_loc_aux','dec_var_loc_aux',3,'p_dec_var_loc_aux','parser.py',83),
  ('dec_var_loc_aux -> empty','dec_var_loc_aux',1,'p_dec_var_loc_aux','parser.py',84),
  ('var_loc_rec -> tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec','var_loc_rec',6,'p_var_loc_rec','parser.py',89),
  ('var_loc_rec -> empty','var_loc_rec',1,'p_var_loc_rec','parser.py',90),
  ('parametros -> tipos COLON ID param_aux','parametros',4,'p_parametros','parser.py',95),
  ('param_aux -> COMMA parametros','param_aux',2,'p_param_aux','parser.py',100),
  ('param_aux -> empty','param_aux',1,'p_param_aux','parser.py',101),
  ('main -> MAIN LPAREN RPAREN bloque','main',4,'p_main','parser.py',108),
  ('bloque -> LCURLY estatutos estatu_rec RCURLY','bloque',4,'p_bloque','parser.py',113),
  ('estatu_rec -> estatutos estatu_rec','estatu_rec',2,'p_estatu_rec','parser.py',118),
  ('estatu_rec -> empty','estatu_rec',1,'p_estatu_rec','parser.py',119),
  ('estatutos -> asignacion','estatutos',1,'p_estatutos','parser.py',124),
  ('estatutos -> llamada_func','estatutos',1,'p_estatutos','parser.py',125),
  ('estatutos -> llamada_void','estatutos',1,'p_estatutos','parser.py',126),
  ('estatutos -> retorno','estatutos',1,'p_estatutos','parser.py',127),
  ('estatutos -> lectura','estatutos',1,'p_estatutos','parser.py',128),
  ('estatutos -> escritura','estatutos',1,'p_estatutos','parser.py',129),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',130),
  ('estatutos -> loop_cond','estatutos',1,'p_estatutos','parser.py',131),
  ('estatutos -> loop_no_cond','estatutos',1,'p_estatutos','parser.py',132),
  ('estatutos -> expresiones','estatutos',1,'p_estatutos','parser.py',133),
  ('estatutos -> empty','estatutos',1,'p_estatutos','parser.py',134),
  ('asignacion -> ID ASSIGN expresiones','asignacion',3,'p_asignacion','parser.py',139),
  ('llamada_func -> ID LPAREN llamada_func_aux RPAREN SEMIC','llamada_func',5,'p_llamada_func','parser.py',144),
  ('llamada_func_aux -> ID llama_func_auxb','llamada_func_aux',2,'p_llamada_func_aux','parser.py',149),
  ('llamada_func_aux -> empty','llamada_func_aux',1,'p_llamada_func_aux','parser.py',150),
  ('llama_func_auxb -> COMMA llamada_func_aux','llama_func_auxb',2,'p_llama_func_auxb','parser.py',155),
  ('llama_func_auxb -> empty','llama_func_auxb',1,'p_llama_func_auxb','parser.py',156),
  ('llamada_void -> ID LPAREN llamada_void_aux RPAREN SEMIC','llamada_void',5,'p_llamada_void','parser.py',161),
  ('llamada_void_aux -> ID llama_void_auxb','llamada_void_aux',2,'p_llamada_void_aux','parser.py',166),
  ('llamada_void_aux -> empty','llamada_void_aux',1,'p_llamada_void_aux','parser.py',167),
  ('llama_void_auxb -> COMMA llamada_func_aux','llama_void_auxb',2,'p_llama_void_auxb','parser.py',172),
  ('llama_void_auxb -> empty','llama_void_auxb',1,'p_llama_void_auxb','parser.py',173),
  ('retorno -> RETURN LPAREN expresiones RPAREN SEMIC','retorno',5,'p_retorno','parser.py',178),
  ('lectura -> READ LPAREN ID lec_aux RPAREN SEMIC','lectura',6,'p_lectura','parser.py',183),
  ('lec_aux -> COMMA ID lec_aux','lec_aux',3,'p_lec_aux','parser.py',188),
  ('lec_aux -> empty','lec_aux',1,'p_lec_aux','parser.py',189),
  ('escritura -> WRITE LPAREN esc_aux RPAREN SEMIC','escritura',5,'p_escritura','parser.py',194),
  ('esc_aux -> STRING_CTE esc_rec','esc_aux',2,'p_esc_aux','parser.py',199),
  ('esc_aux -> expresiones esc_rec','esc_aux',2,'p_esc_aux','parser.py',200),
  ('esc_aux -> empty','esc_aux',1,'p_esc_aux','parser.py',201),
  ('esc_rec -> COMMA esc_aux','esc_rec',2,'p_esc_rec','parser.py',206),
  ('esc_rec -> empty','esc_rec',1,'p_esc_rec','parser.py',207),
  ('decision -> IF LPAREN expresiones RPAREN THEN bloque dec_aux','decision',7,'p_decision','parser.py',212),
  ('dec_aux -> else','dec_aux',1,'p_dec_aux','parser.py',217),
  ('dec_aux -> empty','dec_aux',1,'p_dec_aux','parser.py',218),
  ('else -> ELSE bloque','else',2,'p_else','parser.py',223),
  ('loop_cond -> WHILE LPAREN expresiones RPAREN DO bloque','loop_cond',6,'p_loop_cond','parser.py',228),
  ('loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque','loop_no_cond',9,'p_loop_no_cond','parser.py',233),
  ('nocond_aux -> LBRACK expresiones RBRACK','nocond_aux',3,'p_nocond_aux','parser.py',238),
  ('nocond_aux -> empty','nocond_aux',1,'p_nocond_aux','parser.py',239),
  ('expresiones -> t_exp or_check','expresiones',2,'p_expresiones','parser.py',246),
  ('or_check -> OR_LOG expresiones','or_check',2,'p_or_check','parser.py',251),
  ('or_check -> empty','or_check',1,'p_or_check','parser.py',252),
  ('t_exp -> g_exp and_check','t_exp',2,'p_t_exp','parser.py',257),
  ('and_check -> AND_LOG t_exp','and_check',2,'p_and_check','parser.py',262),
  ('and_check -> empty','and_check',1,'p_and_check','parser.py',263),
  ('g_exp -> m_exp op_check','g_exp',2,'p_g_exp','parser.py',268),
  ('op_check -> empty','op_check',1,'p_op_check','parser.py',273),
  ('op_check -> comparacion m_exp','op_check',2,'p_op_check','parser.py',274),
  ('comparacion -> GT_LOG','comparacion',1,'p_comparacion','parser.py',279),
  ('comparacion -> LT_LOG','comparacion',1,'p_comparacion','parser.py',280),
  ('comparacion -> EQUAL_LOG','comparacion',1,'p_comparacion','parser.py',281),
  ('comparacion -> NE_LOG','comparacion',1,'p_comparacion','parser.py',282),
  ('m_exp -> termino m_rec','m_exp',2,'p_m_exp','parser.py',287),
  ('m_rec -> PLUS_OP m_exp','m_rec',2,'p_m_rec','parser.py',292),
  ('m_rec -> MINUS_OP m_exp','m_rec',2,'p_m_rec','parser.py',293),
  ('m_rec -> empty','m_rec',1,'p_m_rec','parser.py',294),
  ('termino -> factor term_rec','termino',2,'p_termino','parser.py',299),
  ('term_rec -> MULT_OP termino','term_rec',2,'p_term_rec','parser.py',304),
  ('term_rec -> DIV_OP termino','term_rec',2,'p_term_rec','parser.py',305),
  ('term_rec -> empty','term_rec',1,'p_term_rec','parser.py',306),
  ('factor -> LPAREN expresiones RPAREN','factor',3,'p_factor','parser.py',311),
  ('factor -> INT_CTE','factor',1,'p_factor','parser.py',312),
  ('factor -> FLOAT_CTE','factor',1,'p_factor','parser.py',313),
  ('factor -> ID','factor',1,'p_factor','parser.py',314),
  ('factor -> llamada_func','factor',1,'p_factor','parser.py',315),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',320),
]
