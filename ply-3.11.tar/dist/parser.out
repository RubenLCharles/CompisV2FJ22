Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARC
    CHAR_CTE
    CIRCLE
    COLOR
    COMMENT
    GTE_LOG
    LINE
    LTE_LOG
    NEW_LINE
    PENDOWN
    PENUP
    POINT
    SIZE
    STRING_CTE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID pn_GotoMain SEMIC dec_var_gob def_funciones main pn_final pn_print
Rule 2     dec_var_gob -> VARS tipos COLON lista_ids dec_var_aux
Rule 3     dec_var_gob -> empty
Rule 4     dec_var_aux -> tipos COLON lista_ids SEMIC dec_var_aux
Rule 5     dec_var_aux -> empty
Rule 6     lista_ids -> ID lista_aux lista_aux_b
Rule 7     lista_aux -> LBRACK INT_CTE RBRACK
Rule 8     lista_aux -> empty
Rule 9     lista_aux_b -> COMMA lista_ids
Rule 10    lista_aux_b -> empty
Rule 11    tipos -> INT_TYPE pn_tipoAct
Rule 12    tipos -> FLOAT_TYPE pn_tipoAct
Rule 13    tipos -> CHAR_TYPE pn_tipoAct
Rule 14    def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4
Rule 15    def_funciones -> empty
Rule 16    tipos_func -> INT_TYPE pn_tipoAct
Rule 17    tipos_func -> VOID pn_tipoAct
Rule 18    dec_var_loc -> VARS tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec
Rule 19    dec_var_loc -> empty
Rule 20    dec_var_loc_aux -> COMMA ID dec_var_loc_aux
Rule 21    dec_var_loc_aux -> empty
Rule 22    var_loc_rec -> tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec
Rule 23    var_loc_rec -> empty
Rule 24    parametros -> tipos COLON ID pn_func2 param_aux
Rule 25    param_aux -> COMMA parametros
Rule 26    param_aux -> empty
Rule 27    main -> MAIN LPAREN RPAREN pn_FillMain pn_cambioCtxt bloque
Rule 28    bloque -> LCURLY estatutos estatu_rec RCURLY
Rule 29    estatu_rec -> estatutos estatu_rec
Rule 30    estatu_rec -> empty
Rule 31    estatutos -> asignacion
Rule 32    estatutos -> declaracion
Rule 33    estatutos -> llamada_func
Rule 34    estatutos -> llamada_void
Rule 35    estatutos -> retorno
Rule 36    estatutos -> lectura
Rule 37    estatutos -> escritura
Rule 38    estatutos -> decision
Rule 39    estatutos -> loop_cond
Rule 40    estatutos -> loop_no_cond
Rule 41    estatutos -> expresiones
Rule 42    estatutos -> empty
Rule 43    asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC
Rule 44    declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC
Rule 45    declaracion_aux -> ASSIGN pn_secu1 expresiones pn_secu2
Rule 46    declaracion_aux -> empty
Rule 47    llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
Rule 48    llamada_func_aux -> expresiones pn_llamFunc2 llama_func_auxb
Rule 49    llamada_func_aux -> empty
Rule 50    llama_func_auxb -> COMMA llamada_func_aux
Rule 51    llama_func_auxb -> empty
Rule 52    llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC
Rule 53    llamada_void_aux -> expresiones pn_llamFunc2 llama_void_auxb
Rule 54    llamada_void_aux -> empty
Rule 55    llama_void_auxb -> COMMA llamada_func_aux
Rule 56    llama_void_auxb -> empty
Rule 57    retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC
Rule 58    lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5
Rule 59    lec_aux -> COMMA ID lec_aux
Rule 60    lec_aux -> empty
Rule 61    escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC
Rule 62    decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2
Rule 63    else -> ELSE pn_cond3 bloque
Rule 64    else -> empty
Rule 65    loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3
Rule 66    loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque
Rule 67    nocond_aux -> LBRACK expresiones RBRACK
Rule 68    nocond_aux -> empty
Rule 69    expresiones -> t_exp or_check
Rule 70    or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10
Rule 71    or_check -> empty
Rule 72    t_exp -> g_exp and_check
Rule 73    and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10
Rule 74    and_check -> empty
Rule 75    g_exp -> m_exp op_check
Rule 76    op_check -> empty
Rule 77    op_check -> comparacion m_exp pn_expresion8
Rule 78    comparacion -> GT_LOG pn_expresion7
Rule 79    comparacion -> LT_LOG pn_expresion7
Rule 80    comparacion -> EQUAL_LOG pn_expresion7
Rule 81    comparacion -> NE_LOG pn_expresion7
Rule 82    m_exp -> termino pn_expresion3 m_rec
Rule 83    m_rec -> PLUS_OP pn_expresion1 m_exp
Rule 84    m_rec -> MINUS_OP pn_expresion1 m_exp
Rule 85    m_rec -> empty
Rule 86    termino -> factor pn_expresion4 term_rec
Rule 87    term_rec -> MULT_OP pn_expresion2 termino
Rule 88    term_rec -> DIV_OP pn_expresion2 termino
Rule 89    term_rec -> empty
Rule 90    factor -> llamada_func
Rule 91    factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
Rule 92    factor -> cte
Rule 93    factor -> ID pn_busqueda
Rule 94    cte -> INT_CTE pn_constante
Rule 95    cte -> FLOAT_CTE pn_constante
Rule 96    empty -> <empty>
Rule 97    pn_cambioCtxt -> <empty>
Rule 98    pn_expresionID -> <empty>
Rule 99    pn_busqueda -> <empty>
Rule 100   pn_expresionID2 -> <empty>
Rule 101   pn_expresion1 -> <empty>
Rule 102   pn_secuPR2 -> <empty>
Rule 103   pn_expresion2 -> <empty>
Rule 104   pn_expresion3 -> <empty>
Rule 105   pn_expresion4 -> <empty>
Rule 106   pn_expresion5 -> <empty>
Rule 107   pn_expresion6 -> <empty>
Rule 108   pn_expresion7 -> <empty>
Rule 109   pn_expresion8 -> <empty>
Rule 110   pn_expresion9 -> <empty>
Rule 111   pn_expresion10 -> <empty>
Rule 112   pn_secu1 -> <empty>
Rule 113   pn_secu2 -> <empty>
Rule 114   pn_secu3 -> <empty>
Rule 115   pn_secu4 -> <empty>
Rule 116   pn_secuPR -> <empty>
Rule 117   pn_secu5 -> <empty>
Rule 118   pn_cond1 -> <empty>
Rule 119   pn_cond2 -> <empty>
Rule 120   pn_cond3 -> <empty>
Rule 121   pn_loop1 -> <empty>
Rule 122   pn_loop2 -> <empty>
Rule 123   pn_loop3 -> <empty>
Rule 124   pn_tipoAct -> <empty>
Rule 125   pn_parametrosTipo -> <empty>
Rule 126   pn_func1 -> <empty>
Rule 127   pn_func2 -> <empty>
Rule 128   pn_func3 -> <empty>
Rule 129   pn_func4 -> <empty>
Rule 130   pn_llamFunc1 -> <empty>
Rule 131   pn_llamFunc2 -> <empty>
Rule 132   pn_llamFunc3 -> <empty>
Rule 133   pn_GotoMain -> <empty>
Rule 134   pn_FillMain -> <empty>
Rule 135   pn_constante -> <empty>
Rule 136   pn_final -> <empty>
Rule 137   pn_print -> <empty>

Terminals, with rules where they appear

AND_LOG              : 73
ARC                  : 
ASSIGN               : 43 45 66
CHAR_CTE             : 
CHAR_TYPE            : 13
CIRCLE               : 
COLON                : 2 4 18 22 24
COLOR                : 
COMMA                : 9 20 25 50 55 59
COMMENT              : 
DIV_OP               : 88
DO                   : 65 66
ELSE                 : 63
EQUAL_LOG            : 80
FLOAT_CTE            : 95
FLOAT_TYPE           : 12
FOR                  : 66
FUNCTION             : 14
GTE_LOG              : 
GT_LOG               : 78
ID                   : 1 6 14 18 20 22 24 43 44 47 52 58 59 66 93
IF                   : 62
INT_CTE              : 7 94
INT_TYPE             : 11 16
LBRACK               : 7 67
LCURLY               : 28
LINE                 : 
LLAMA                : 47 52
LPAREN               : 14 27 47 52 57 58 61 62 65 91
LTE_LOG              : 
LT_LOG               : 79
MAIN                 : 27
MINUS_OP             : 84
MULT_OP              : 87
NEW_LINE             : 
NE_LOG               : 81
OR_LOG               : 70
PENDOWN              : 
PENUP                : 
PLUS_OP              : 83
POINT                : 
PROGRAM              : 1
RBRACK               : 7 67
RCURLY               : 28
READ                 : 58
RETURN               : 57
RPAREN               : 14 27 47 52 57 58 61 62 65 91
SEMIC                : 1 4 14 18 22 43 44 47 52 57 58 61
SIZE                 : 
STRING_CTE           : 
THEN                 : 62
TO                   : 66
VARS                 : 2 18
VOID                 : 17
WHILE                : 65
WRITE                : 61
error                : 

Nonterminals, with rules where they appear

and_check            : 72
asignacion           : 31
bloque               : 14 27 62 63 65 66
comparacion          : 77
cte                  : 92
dec_var_aux          : 2 4
dec_var_gob          : 1
dec_var_loc          : 14
dec_var_loc_aux      : 18 20 22
decision             : 38
declaracion          : 32
declaracion_aux      : 44
def_funciones        : 1
else                 : 62
empty                : 3 5 8 10 15 19 21 23 26 30 42 46 49 51 54 56 60 64 68 71 74 76 85 89
escritura            : 37
estatu_rec           : 28 29
estatutos            : 28 29
expresiones          : 41 43 45 48 53 57 62 65 66 66 67 70 91
factor               : 86
g_exp                : 72
lec_aux              : 58 59
lectura              : 36
lista_aux            : 6
lista_aux_b          : 6
lista_ids            : 2 4 9
llama_func_auxb      : 48
llama_void_auxb      : 53
llamada_func         : 33 90
llamada_func_aux     : 47 50 55
llamada_void         : 34
llamada_void_aux     : 52
loop_cond            : 39
loop_no_cond         : 40
m_exp                : 75 77 83 84
m_rec                : 82
main                 : 1
nocond_aux           : 66
op_check             : 75
or_check             : 69
param_aux            : 24
parametros           : 14 25
pn_FillMain          : 27
pn_GotoMain          : 1
pn_busqueda          : 93
pn_cambioCtxt        : 27
pn_cond1             : 62
pn_cond2             : 62
pn_cond3             : 63
pn_constante         : 94 95
pn_expresion1        : 83 84
pn_expresion10       : 70 73
pn_expresion2        : 87 88
pn_expresion3        : 82
pn_expresion4        : 86
pn_expresion5        : 47 91
pn_expresion6        : 47 91
pn_expresion7        : 78 79 80 81
pn_expresion8        : 77
pn_expresion9        : 70 73
pn_expresionID       : 44
pn_expresionID2      : 43
pn_final             : 1
pn_func1             : 14
pn_func2             : 24
pn_func3             : 14
pn_func4             : 14
pn_llamFunc1         : 47 52
pn_llamFunc2         : 48 53
pn_llamFunc3         : 47 52
pn_loop1             : 65
pn_loop2             : 65
pn_loop3             : 65
pn_parametrosTipo    : 
pn_print             : 1
pn_secu1             : 43 45
pn_secu2             : 43 45
pn_secu3             : 57 58
pn_secu4             : 58
pn_secu5             : 58
pn_secuPR            : 
pn_secuPR2           : 61
pn_tipoAct           : 11 12 13 16 17
program              : 0
retorno              : 35
t_exp                : 69 73
term_rec             : 86
termino              : 82 87 88
tipos                : 2 4 18 22 24 44
tipos_func           : 14
var_loc_rec          : 18 22

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID pn_GotoMain SEMIC dec_var_gob def_funciones main pn_final pn_print

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID pn_GotoMain SEMIC dec_var_gob def_funciones main pn_final pn_print

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . pn_GotoMain SEMIC dec_var_gob def_funciones main pn_final pn_print
    (133) pn_GotoMain -> .

    SEMIC           reduce using rule 133 (pn_GotoMain -> .)

    pn_GotoMain                    shift and go to state 4

state 4

    (1) program -> PROGRAM ID pn_GotoMain . SEMIC dec_var_gob def_funciones main pn_final pn_print

    SEMIC           shift and go to state 5


state 5

    (1) program -> PROGRAM ID pn_GotoMain SEMIC . dec_var_gob def_funciones main pn_final pn_print
    (2) dec_var_gob -> . VARS tipos COLON lista_ids dec_var_aux
    (3) dec_var_gob -> . empty
    (96) empty -> .

    VARS            shift and go to state 7
    FUNCTION        reduce using rule 96 (empty -> .)
    MAIN            reduce using rule 96 (empty -> .)

    dec_var_gob                    shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) program -> PROGRAM ID pn_GotoMain SEMIC dec_var_gob . def_funciones main pn_final pn_print
    (14) def_funciones -> . FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4
    (15) def_funciones -> . empty
    (96) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 96 (empty -> .)

    def_funciones                  shift and go to state 9
    empty                          shift and go to state 11

state 7

    (2) dec_var_gob -> VARS . tipos COLON lista_ids dec_var_aux
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct

    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15

    tipos                          shift and go to state 12

state 8

    (3) dec_var_gob -> empty .

    FUNCTION        reduce using rule 3 (dec_var_gob -> empty .)
    MAIN            reduce using rule 3 (dec_var_gob -> empty .)


state 9

    (1) program -> PROGRAM ID pn_GotoMain SEMIC dec_var_gob def_funciones . main pn_final pn_print
    (27) main -> . MAIN LPAREN RPAREN pn_FillMain pn_cambioCtxt bloque

    MAIN            shift and go to state 17

    main                           shift and go to state 16

state 10

    (14) def_funciones -> FUNCTION . tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4
    (16) tipos_func -> . INT_TYPE pn_tipoAct
    (17) tipos_func -> . VOID pn_tipoAct

    INT_TYPE        shift and go to state 19
    VOID            shift and go to state 20

    tipos_func                     shift and go to state 18

state 11

    (15) def_funciones -> empty .

    MAIN            reduce using rule 15 (def_funciones -> empty .)


state 12

    (2) dec_var_gob -> VARS tipos . COLON lista_ids dec_var_aux

    COLON           shift and go to state 21


state 13

    (11) tipos -> INT_TYPE . pn_tipoAct
    (124) pn_tipoAct -> .

    COLON           reduce using rule 124 (pn_tipoAct -> .)
    ID              reduce using rule 124 (pn_tipoAct -> .)

    pn_tipoAct                     shift and go to state 22

state 14

    (12) tipos -> FLOAT_TYPE . pn_tipoAct
    (124) pn_tipoAct -> .

    COLON           reduce using rule 124 (pn_tipoAct -> .)
    ID              reduce using rule 124 (pn_tipoAct -> .)

    pn_tipoAct                     shift and go to state 23

state 15

    (13) tipos -> CHAR_TYPE . pn_tipoAct
    (124) pn_tipoAct -> .

    COLON           reduce using rule 124 (pn_tipoAct -> .)
    ID              reduce using rule 124 (pn_tipoAct -> .)

    pn_tipoAct                     shift and go to state 24

state 16

    (1) program -> PROGRAM ID pn_GotoMain SEMIC dec_var_gob def_funciones main . pn_final pn_print
    (136) pn_final -> .

    $end            reduce using rule 136 (pn_final -> .)

    pn_final                       shift and go to state 25

state 17

    (27) main -> MAIN . LPAREN RPAREN pn_FillMain pn_cambioCtxt bloque

    LPAREN          shift and go to state 26


state 18

    (14) def_funciones -> FUNCTION tipos_func . ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4

    ID              shift and go to state 27


state 19

    (16) tipos_func -> INT_TYPE . pn_tipoAct
    (124) pn_tipoAct -> .

    ID              reduce using rule 124 (pn_tipoAct -> .)

    pn_tipoAct                     shift and go to state 28

state 20

    (17) tipos_func -> VOID . pn_tipoAct
    (124) pn_tipoAct -> .

    ID              reduce using rule 124 (pn_tipoAct -> .)

    pn_tipoAct                     shift and go to state 29

state 21

    (2) dec_var_gob -> VARS tipos COLON . lista_ids dec_var_aux
    (6) lista_ids -> . ID lista_aux lista_aux_b

    ID              shift and go to state 31

    lista_ids                      shift and go to state 30

state 22

    (11) tipos -> INT_TYPE pn_tipoAct .

    COLON           reduce using rule 11 (tipos -> INT_TYPE pn_tipoAct .)
    ID              reduce using rule 11 (tipos -> INT_TYPE pn_tipoAct .)


state 23

    (12) tipos -> FLOAT_TYPE pn_tipoAct .

    COLON           reduce using rule 12 (tipos -> FLOAT_TYPE pn_tipoAct .)
    ID              reduce using rule 12 (tipos -> FLOAT_TYPE pn_tipoAct .)


state 24

    (13) tipos -> CHAR_TYPE pn_tipoAct .

    COLON           reduce using rule 13 (tipos -> CHAR_TYPE pn_tipoAct .)
    ID              reduce using rule 13 (tipos -> CHAR_TYPE pn_tipoAct .)


state 25

    (1) program -> PROGRAM ID pn_GotoMain SEMIC dec_var_gob def_funciones main pn_final . pn_print
    (137) pn_print -> .

    $end            reduce using rule 137 (pn_print -> .)

    pn_print                       shift and go to state 32

state 26

    (27) main -> MAIN LPAREN . RPAREN pn_FillMain pn_cambioCtxt bloque

    RPAREN          shift and go to state 33


state 27

    (14) def_funciones -> FUNCTION tipos_func ID . pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4
    (126) pn_func1 -> .

    LPAREN          reduce using rule 126 (pn_func1 -> .)

    pn_func1                       shift and go to state 34

state 28

    (16) tipos_func -> INT_TYPE pn_tipoAct .

    ID              reduce using rule 16 (tipos_func -> INT_TYPE pn_tipoAct .)


state 29

    (17) tipos_func -> VOID pn_tipoAct .

    ID              reduce using rule 17 (tipos_func -> VOID pn_tipoAct .)


state 30

    (2) dec_var_gob -> VARS tipos COLON lista_ids . dec_var_aux
    (4) dec_var_aux -> . tipos COLON lista_ids SEMIC dec_var_aux
    (5) dec_var_aux -> . empty
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct
    (96) empty -> .

    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15
    FUNCTION        reduce using rule 96 (empty -> .)
    MAIN            reduce using rule 96 (empty -> .)

    tipos                          shift and go to state 35
    dec_var_aux                    shift and go to state 36
    empty                          shift and go to state 37

state 31

    (6) lista_ids -> ID . lista_aux lista_aux_b
    (7) lista_aux -> . LBRACK INT_CTE RBRACK
    (8) lista_aux -> . empty
    (96) empty -> .

    LBRACK          shift and go to state 39
    COMMA           reduce using rule 96 (empty -> .)
    INT_TYPE        reduce using rule 96 (empty -> .)
    FLOAT_TYPE      reduce using rule 96 (empty -> .)
    CHAR_TYPE       reduce using rule 96 (empty -> .)
    FUNCTION        reduce using rule 96 (empty -> .)
    MAIN            reduce using rule 96 (empty -> .)
    SEMIC           reduce using rule 96 (empty -> .)

    lista_aux                      shift and go to state 38
    empty                          shift and go to state 40

state 32

    (1) program -> PROGRAM ID pn_GotoMain SEMIC dec_var_gob def_funciones main pn_final pn_print .

    $end            reduce using rule 1 (program -> PROGRAM ID pn_GotoMain SEMIC dec_var_gob def_funciones main pn_final pn_print .)


state 33

    (27) main -> MAIN LPAREN RPAREN . pn_FillMain pn_cambioCtxt bloque
    (134) pn_FillMain -> .

    LCURLY          reduce using rule 134 (pn_FillMain -> .)

    pn_FillMain                    shift and go to state 41

state 34

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 . LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4

    LPAREN          shift and go to state 42


state 35

    (4) dec_var_aux -> tipos . COLON lista_ids SEMIC dec_var_aux

    COLON           shift and go to state 43


state 36

    (2) dec_var_gob -> VARS tipos COLON lista_ids dec_var_aux .

    FUNCTION        reduce using rule 2 (dec_var_gob -> VARS tipos COLON lista_ids dec_var_aux .)
    MAIN            reduce using rule 2 (dec_var_gob -> VARS tipos COLON lista_ids dec_var_aux .)


state 37

    (5) dec_var_aux -> empty .

    FUNCTION        reduce using rule 5 (dec_var_aux -> empty .)
    MAIN            reduce using rule 5 (dec_var_aux -> empty .)


state 38

    (6) lista_ids -> ID lista_aux . lista_aux_b
    (9) lista_aux_b -> . COMMA lista_ids
    (10) lista_aux_b -> . empty
    (96) empty -> .

    COMMA           shift and go to state 45
    INT_TYPE        reduce using rule 96 (empty -> .)
    FLOAT_TYPE      reduce using rule 96 (empty -> .)
    CHAR_TYPE       reduce using rule 96 (empty -> .)
    FUNCTION        reduce using rule 96 (empty -> .)
    MAIN            reduce using rule 96 (empty -> .)
    SEMIC           reduce using rule 96 (empty -> .)

    lista_aux_b                    shift and go to state 44
    empty                          shift and go to state 46

state 39

    (7) lista_aux -> LBRACK . INT_CTE RBRACK

    INT_CTE         shift and go to state 47


state 40

    (8) lista_aux -> empty .

    COMMA           reduce using rule 8 (lista_aux -> empty .)
    INT_TYPE        reduce using rule 8 (lista_aux -> empty .)
    FLOAT_TYPE      reduce using rule 8 (lista_aux -> empty .)
    CHAR_TYPE       reduce using rule 8 (lista_aux -> empty .)
    FUNCTION        reduce using rule 8 (lista_aux -> empty .)
    MAIN            reduce using rule 8 (lista_aux -> empty .)
    SEMIC           reduce using rule 8 (lista_aux -> empty .)


state 41

    (27) main -> MAIN LPAREN RPAREN pn_FillMain . pn_cambioCtxt bloque
    (97) pn_cambioCtxt -> .

    LCURLY          reduce using rule 97 (pn_cambioCtxt -> .)

    pn_cambioCtxt                  shift and go to state 48

state 42

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN . parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4
    (24) parametros -> . tipos COLON ID pn_func2 param_aux
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct

    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15

    parametros                     shift and go to state 49
    tipos                          shift and go to state 50

state 43

    (4) dec_var_aux -> tipos COLON . lista_ids SEMIC dec_var_aux
    (6) lista_ids -> . ID lista_aux lista_aux_b

    ID              shift and go to state 31

    lista_ids                      shift and go to state 51

state 44

    (6) lista_ids -> ID lista_aux lista_aux_b .

    INT_TYPE        reduce using rule 6 (lista_ids -> ID lista_aux lista_aux_b .)
    FLOAT_TYPE      reduce using rule 6 (lista_ids -> ID lista_aux lista_aux_b .)
    CHAR_TYPE       reduce using rule 6 (lista_ids -> ID lista_aux lista_aux_b .)
    FUNCTION        reduce using rule 6 (lista_ids -> ID lista_aux lista_aux_b .)
    MAIN            reduce using rule 6 (lista_ids -> ID lista_aux lista_aux_b .)
    SEMIC           reduce using rule 6 (lista_ids -> ID lista_aux lista_aux_b .)


state 45

    (9) lista_aux_b -> COMMA . lista_ids
    (6) lista_ids -> . ID lista_aux lista_aux_b

    ID              shift and go to state 31

    lista_ids                      shift and go to state 52

state 46

    (10) lista_aux_b -> empty .

    INT_TYPE        reduce using rule 10 (lista_aux_b -> empty .)
    FLOAT_TYPE      reduce using rule 10 (lista_aux_b -> empty .)
    CHAR_TYPE       reduce using rule 10 (lista_aux_b -> empty .)
    FUNCTION        reduce using rule 10 (lista_aux_b -> empty .)
    MAIN            reduce using rule 10 (lista_aux_b -> empty .)
    SEMIC           reduce using rule 10 (lista_aux_b -> empty .)


state 47

    (7) lista_aux -> LBRACK INT_CTE . RBRACK

    RBRACK          shift and go to state 53


state 48

    (27) main -> MAIN LPAREN RPAREN pn_FillMain pn_cambioCtxt . bloque
    (28) bloque -> . LCURLY estatutos estatu_rec RCURLY

    LCURLY          shift and go to state 55

    bloque                         shift and go to state 54

state 49

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros . RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4

    RPAREN          shift and go to state 56


state 50

    (24) parametros -> tipos . COLON ID pn_func2 param_aux

    COLON           shift and go to state 57


state 51

    (4) dec_var_aux -> tipos COLON lista_ids . SEMIC dec_var_aux

    SEMIC           shift and go to state 58


state 52

    (9) lista_aux_b -> COMMA lista_ids .

    INT_TYPE        reduce using rule 9 (lista_aux_b -> COMMA lista_ids .)
    FLOAT_TYPE      reduce using rule 9 (lista_aux_b -> COMMA lista_ids .)
    CHAR_TYPE       reduce using rule 9 (lista_aux_b -> COMMA lista_ids .)
    FUNCTION        reduce using rule 9 (lista_aux_b -> COMMA lista_ids .)
    MAIN            reduce using rule 9 (lista_aux_b -> COMMA lista_ids .)
    SEMIC           reduce using rule 9 (lista_aux_b -> COMMA lista_ids .)


state 53

    (7) lista_aux -> LBRACK INT_CTE RBRACK .

    COMMA           reduce using rule 7 (lista_aux -> LBRACK INT_CTE RBRACK .)
    INT_TYPE        reduce using rule 7 (lista_aux -> LBRACK INT_CTE RBRACK .)
    FLOAT_TYPE      reduce using rule 7 (lista_aux -> LBRACK INT_CTE RBRACK .)
    CHAR_TYPE       reduce using rule 7 (lista_aux -> LBRACK INT_CTE RBRACK .)
    FUNCTION        reduce using rule 7 (lista_aux -> LBRACK INT_CTE RBRACK .)
    MAIN            reduce using rule 7 (lista_aux -> LBRACK INT_CTE RBRACK .)
    SEMIC           reduce using rule 7 (lista_aux -> LBRACK INT_CTE RBRACK .)


state 54

    (27) main -> MAIN LPAREN RPAREN pn_FillMain pn_cambioCtxt bloque .

    $end            reduce using rule 27 (main -> MAIN LPAREN RPAREN pn_FillMain pn_cambioCtxt bloque .)


state 55

    (28) bloque -> LCURLY . estatutos estatu_rec RCURLY
    (31) estatutos -> . asignacion
    (32) estatutos -> . declaracion
    (33) estatutos -> . llamada_func
    (34) estatutos -> . llamada_void
    (35) estatutos -> . retorno
    (36) estatutos -> . lectura
    (37) estatutos -> . escritura
    (38) estatutos -> . decision
    (39) estatutos -> . loop_cond
    (40) estatutos -> . loop_no_cond
    (41) estatutos -> . expresiones
    (42) estatutos -> . empty
    (43) asignacion -> . ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC
    (44) declaracion -> . tipos ID pn_expresionID declaracion_aux SEMIC
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (52) llamada_void -> . LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC
    (57) retorno -> . RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC
    (58) lectura -> . READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5
    (61) escritura -> . WRITE LPAREN RPAREN pn_secuPR2 SEMIC
    (62) decision -> . IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2
    (65) loop_cond -> . WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3
    (66) loop_no_cond -> . FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque
    (69) expresiones -> . t_exp or_check
    (96) empty -> .
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LLAMA resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT_TYPE resolved as shift
  ! shift/reduce conflict for CHAR_TYPE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT_CTE resolved as shift
  ! shift/reduce conflict for FLOAT_CTE resolved as shift
    ID              shift and go to state 72
    LLAMA           shift and go to state 74
    RETURN          shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80
    FOR             shift and go to state 81
    RCURLY          reduce using rule 96 (empty -> .)
    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15
    LPAREN          shift and go to state 75
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

  ! ID              [ reduce using rule 96 (empty -> .) ]
  ! LLAMA           [ reduce using rule 96 (empty -> .) ]
  ! RETURN          [ reduce using rule 96 (empty -> .) ]
  ! READ            [ reduce using rule 96 (empty -> .) ]
  ! WRITE           [ reduce using rule 96 (empty -> .) ]
  ! IF              [ reduce using rule 96 (empty -> .) ]
  ! WHILE           [ reduce using rule 96 (empty -> .) ]
  ! FOR             [ reduce using rule 96 (empty -> .) ]
  ! INT_TYPE        [ reduce using rule 96 (empty -> .) ]
  ! FLOAT_TYPE      [ reduce using rule 96 (empty -> .) ]
  ! CHAR_TYPE       [ reduce using rule 96 (empty -> .) ]
  ! LPAREN          [ reduce using rule 96 (empty -> .) ]
  ! INT_CTE         [ reduce using rule 96 (empty -> .) ]
  ! FLOAT_CTE       [ reduce using rule 96 (empty -> .) ]

    estatutos                      shift and go to state 59
    asignacion                     shift and go to state 60
    declaracion                    shift and go to state 61
    llamada_func                   shift and go to state 62
    llamada_void                   shift and go to state 63
    retorno                        shift and go to state 64
    lectura                        shift and go to state 65
    escritura                      shift and go to state 66
    decision                       shift and go to state 67
    loop_cond                      shift and go to state 68
    loop_no_cond                   shift and go to state 69
    expresiones                    shift and go to state 70
    empty                          shift and go to state 71
    tipos                          shift and go to state 73
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    cte                            shift and go to state 87

state 56

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN . pn_func3 SEMIC dec_var_loc bloque pn_func4
    (128) pn_func3 -> .

    SEMIC           reduce using rule 128 (pn_func3 -> .)

    pn_func3                       shift and go to state 90

state 57

    (24) parametros -> tipos COLON . ID pn_func2 param_aux

    ID              shift and go to state 91


state 58

    (4) dec_var_aux -> tipos COLON lista_ids SEMIC . dec_var_aux
    (4) dec_var_aux -> . tipos COLON lista_ids SEMIC dec_var_aux
    (5) dec_var_aux -> . empty
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct
    (96) empty -> .

    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15
    FUNCTION        reduce using rule 96 (empty -> .)
    MAIN            reduce using rule 96 (empty -> .)

    tipos                          shift and go to state 35
    dec_var_aux                    shift and go to state 92
    empty                          shift and go to state 37

state 59

    (28) bloque -> LCURLY estatutos . estatu_rec RCURLY
    (29) estatu_rec -> . estatutos estatu_rec
    (30) estatu_rec -> . empty
    (31) estatutos -> . asignacion
    (32) estatutos -> . declaracion
    (33) estatutos -> . llamada_func
    (34) estatutos -> . llamada_void
    (35) estatutos -> . retorno
    (36) estatutos -> . lectura
    (37) estatutos -> . escritura
    (38) estatutos -> . decision
    (39) estatutos -> . loop_cond
    (40) estatutos -> . loop_no_cond
    (41) estatutos -> . expresiones
    (42) estatutos -> . empty
    (96) empty -> .
    (43) asignacion -> . ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC
    (44) declaracion -> . tipos ID pn_expresionID declaracion_aux SEMIC
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (52) llamada_void -> . LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC
    (57) retorno -> . RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC
    (58) lectura -> . READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5
    (61) escritura -> . WRITE LPAREN RPAREN pn_secuPR2 SEMIC
    (62) decision -> . IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2
    (65) loop_cond -> . WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3
    (66) loop_no_cond -> . FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque
    (69) expresiones -> . t_exp or_check
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LLAMA resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT_TYPE resolved as shift
  ! shift/reduce conflict for CHAR_TYPE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT_CTE resolved as shift
  ! shift/reduce conflict for FLOAT_CTE resolved as shift
    RCURLY          reduce using rule 96 (empty -> .)
    ID              shift and go to state 72
    LLAMA           shift and go to state 74
    RETURN          shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80
    FOR             shift and go to state 81
    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15
    LPAREN          shift and go to state 75
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

  ! ID              [ reduce using rule 96 (empty -> .) ]
  ! LLAMA           [ reduce using rule 96 (empty -> .) ]
  ! RETURN          [ reduce using rule 96 (empty -> .) ]
  ! READ            [ reduce using rule 96 (empty -> .) ]
  ! WRITE           [ reduce using rule 96 (empty -> .) ]
  ! IF              [ reduce using rule 96 (empty -> .) ]
  ! WHILE           [ reduce using rule 96 (empty -> .) ]
  ! FOR             [ reduce using rule 96 (empty -> .) ]
  ! INT_TYPE        [ reduce using rule 96 (empty -> .) ]
  ! FLOAT_TYPE      [ reduce using rule 96 (empty -> .) ]
  ! CHAR_TYPE       [ reduce using rule 96 (empty -> .) ]
  ! LPAREN          [ reduce using rule 96 (empty -> .) ]
  ! INT_CTE         [ reduce using rule 96 (empty -> .) ]
  ! FLOAT_CTE       [ reduce using rule 96 (empty -> .) ]

    estatutos                      shift and go to state 93
    estatu_rec                     shift and go to state 94
    empty                          shift and go to state 95
    asignacion                     shift and go to state 60
    declaracion                    shift and go to state 61
    llamada_func                   shift and go to state 62
    llamada_void                   shift and go to state 63
    retorno                        shift and go to state 64
    lectura                        shift and go to state 65
    escritura                      shift and go to state 66
    decision                       shift and go to state 67
    loop_cond                      shift and go to state 68
    loop_no_cond                   shift and go to state 69
    expresiones                    shift and go to state 70
    tipos                          shift and go to state 73
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    cte                            shift and go to state 87

state 60

    (31) estatutos -> asignacion .

    ID              reduce using rule 31 (estatutos -> asignacion .)
    LLAMA           reduce using rule 31 (estatutos -> asignacion .)
    RETURN          reduce using rule 31 (estatutos -> asignacion .)
    READ            reduce using rule 31 (estatutos -> asignacion .)
    WRITE           reduce using rule 31 (estatutos -> asignacion .)
    IF              reduce using rule 31 (estatutos -> asignacion .)
    WHILE           reduce using rule 31 (estatutos -> asignacion .)
    FOR             reduce using rule 31 (estatutos -> asignacion .)
    INT_TYPE        reduce using rule 31 (estatutos -> asignacion .)
    FLOAT_TYPE      reduce using rule 31 (estatutos -> asignacion .)
    CHAR_TYPE       reduce using rule 31 (estatutos -> asignacion .)
    LPAREN          reduce using rule 31 (estatutos -> asignacion .)
    INT_CTE         reduce using rule 31 (estatutos -> asignacion .)
    FLOAT_CTE       reduce using rule 31 (estatutos -> asignacion .)
    RCURLY          reduce using rule 31 (estatutos -> asignacion .)


state 61

    (32) estatutos -> declaracion .

    ID              reduce using rule 32 (estatutos -> declaracion .)
    LLAMA           reduce using rule 32 (estatutos -> declaracion .)
    RETURN          reduce using rule 32 (estatutos -> declaracion .)
    READ            reduce using rule 32 (estatutos -> declaracion .)
    WRITE           reduce using rule 32 (estatutos -> declaracion .)
    IF              reduce using rule 32 (estatutos -> declaracion .)
    WHILE           reduce using rule 32 (estatutos -> declaracion .)
    FOR             reduce using rule 32 (estatutos -> declaracion .)
    INT_TYPE        reduce using rule 32 (estatutos -> declaracion .)
    FLOAT_TYPE      reduce using rule 32 (estatutos -> declaracion .)
    CHAR_TYPE       reduce using rule 32 (estatutos -> declaracion .)
    LPAREN          reduce using rule 32 (estatutos -> declaracion .)
    INT_CTE         reduce using rule 32 (estatutos -> declaracion .)
    FLOAT_CTE       reduce using rule 32 (estatutos -> declaracion .)
    RCURLY          reduce using rule 32 (estatutos -> declaracion .)


state 62

    (33) estatutos -> llamada_func .
    (90) factor -> llamada_func .

  ! reduce/reduce conflict for ID resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for LLAMA resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for RETURN resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for READ resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for WRITE resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for IF resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for WHILE resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for FOR resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for INT_TYPE resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for FLOAT_TYPE resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for CHAR_TYPE resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for LPAREN resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for INT_CTE resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for FLOAT_CTE resolved using rule 33 (estatutos -> llamada_func .)
  ! reduce/reduce conflict for RCURLY resolved using rule 33 (estatutos -> llamada_func .)
    ID              reduce using rule 33 (estatutos -> llamada_func .)
    LLAMA           reduce using rule 33 (estatutos -> llamada_func .)
    RETURN          reduce using rule 33 (estatutos -> llamada_func .)
    READ            reduce using rule 33 (estatutos -> llamada_func .)
    WRITE           reduce using rule 33 (estatutos -> llamada_func .)
    IF              reduce using rule 33 (estatutos -> llamada_func .)
    WHILE           reduce using rule 33 (estatutos -> llamada_func .)
    FOR             reduce using rule 33 (estatutos -> llamada_func .)
    INT_TYPE        reduce using rule 33 (estatutos -> llamada_func .)
    FLOAT_TYPE      reduce using rule 33 (estatutos -> llamada_func .)
    CHAR_TYPE       reduce using rule 33 (estatutos -> llamada_func .)
    LPAREN          reduce using rule 33 (estatutos -> llamada_func .)
    INT_CTE         reduce using rule 33 (estatutos -> llamada_func .)
    FLOAT_CTE       reduce using rule 33 (estatutos -> llamada_func .)
    RCURLY          reduce using rule 33 (estatutos -> llamada_func .)
    MULT_OP         reduce using rule 90 (factor -> llamada_func .)
    DIV_OP          reduce using rule 90 (factor -> llamada_func .)
    PLUS_OP         reduce using rule 90 (factor -> llamada_func .)
    MINUS_OP        reduce using rule 90 (factor -> llamada_func .)
    GT_LOG          reduce using rule 90 (factor -> llamada_func .)
    LT_LOG          reduce using rule 90 (factor -> llamada_func .)
    EQUAL_LOG       reduce using rule 90 (factor -> llamada_func .)
    NE_LOG          reduce using rule 90 (factor -> llamada_func .)
    AND_LOG         reduce using rule 90 (factor -> llamada_func .)
    OR_LOG          reduce using rule 90 (factor -> llamada_func .)

  ! ID              [ reduce using rule 90 (factor -> llamada_func .) ]
  ! LLAMA           [ reduce using rule 90 (factor -> llamada_func .) ]
  ! RETURN          [ reduce using rule 90 (factor -> llamada_func .) ]
  ! READ            [ reduce using rule 90 (factor -> llamada_func .) ]
  ! WRITE           [ reduce using rule 90 (factor -> llamada_func .) ]
  ! IF              [ reduce using rule 90 (factor -> llamada_func .) ]
  ! WHILE           [ reduce using rule 90 (factor -> llamada_func .) ]
  ! FOR             [ reduce using rule 90 (factor -> llamada_func .) ]
  ! INT_TYPE        [ reduce using rule 90 (factor -> llamada_func .) ]
  ! FLOAT_TYPE      [ reduce using rule 90 (factor -> llamada_func .) ]
  ! CHAR_TYPE       [ reduce using rule 90 (factor -> llamada_func .) ]
  ! LPAREN          [ reduce using rule 90 (factor -> llamada_func .) ]
  ! INT_CTE         [ reduce using rule 90 (factor -> llamada_func .) ]
  ! FLOAT_CTE       [ reduce using rule 90 (factor -> llamada_func .) ]
  ! RCURLY          [ reduce using rule 90 (factor -> llamada_func .) ]


state 63

    (34) estatutos -> llamada_void .

    ID              reduce using rule 34 (estatutos -> llamada_void .)
    LLAMA           reduce using rule 34 (estatutos -> llamada_void .)
    RETURN          reduce using rule 34 (estatutos -> llamada_void .)
    READ            reduce using rule 34 (estatutos -> llamada_void .)
    WRITE           reduce using rule 34 (estatutos -> llamada_void .)
    IF              reduce using rule 34 (estatutos -> llamada_void .)
    WHILE           reduce using rule 34 (estatutos -> llamada_void .)
    FOR             reduce using rule 34 (estatutos -> llamada_void .)
    INT_TYPE        reduce using rule 34 (estatutos -> llamada_void .)
    FLOAT_TYPE      reduce using rule 34 (estatutos -> llamada_void .)
    CHAR_TYPE       reduce using rule 34 (estatutos -> llamada_void .)
    LPAREN          reduce using rule 34 (estatutos -> llamada_void .)
    INT_CTE         reduce using rule 34 (estatutos -> llamada_void .)
    FLOAT_CTE       reduce using rule 34 (estatutos -> llamada_void .)
    RCURLY          reduce using rule 34 (estatutos -> llamada_void .)


state 64

    (35) estatutos -> retorno .

    ID              reduce using rule 35 (estatutos -> retorno .)
    LLAMA           reduce using rule 35 (estatutos -> retorno .)
    RETURN          reduce using rule 35 (estatutos -> retorno .)
    READ            reduce using rule 35 (estatutos -> retorno .)
    WRITE           reduce using rule 35 (estatutos -> retorno .)
    IF              reduce using rule 35 (estatutos -> retorno .)
    WHILE           reduce using rule 35 (estatutos -> retorno .)
    FOR             reduce using rule 35 (estatutos -> retorno .)
    INT_TYPE        reduce using rule 35 (estatutos -> retorno .)
    FLOAT_TYPE      reduce using rule 35 (estatutos -> retorno .)
    CHAR_TYPE       reduce using rule 35 (estatutos -> retorno .)
    LPAREN          reduce using rule 35 (estatutos -> retorno .)
    INT_CTE         reduce using rule 35 (estatutos -> retorno .)
    FLOAT_CTE       reduce using rule 35 (estatutos -> retorno .)
    RCURLY          reduce using rule 35 (estatutos -> retorno .)


state 65

    (36) estatutos -> lectura .

    ID              reduce using rule 36 (estatutos -> lectura .)
    LLAMA           reduce using rule 36 (estatutos -> lectura .)
    RETURN          reduce using rule 36 (estatutos -> lectura .)
    READ            reduce using rule 36 (estatutos -> lectura .)
    WRITE           reduce using rule 36 (estatutos -> lectura .)
    IF              reduce using rule 36 (estatutos -> lectura .)
    WHILE           reduce using rule 36 (estatutos -> lectura .)
    FOR             reduce using rule 36 (estatutos -> lectura .)
    INT_TYPE        reduce using rule 36 (estatutos -> lectura .)
    FLOAT_TYPE      reduce using rule 36 (estatutos -> lectura .)
    CHAR_TYPE       reduce using rule 36 (estatutos -> lectura .)
    LPAREN          reduce using rule 36 (estatutos -> lectura .)
    INT_CTE         reduce using rule 36 (estatutos -> lectura .)
    FLOAT_CTE       reduce using rule 36 (estatutos -> lectura .)
    RCURLY          reduce using rule 36 (estatutos -> lectura .)


state 66

    (37) estatutos -> escritura .

    ID              reduce using rule 37 (estatutos -> escritura .)
    LLAMA           reduce using rule 37 (estatutos -> escritura .)
    RETURN          reduce using rule 37 (estatutos -> escritura .)
    READ            reduce using rule 37 (estatutos -> escritura .)
    WRITE           reduce using rule 37 (estatutos -> escritura .)
    IF              reduce using rule 37 (estatutos -> escritura .)
    WHILE           reduce using rule 37 (estatutos -> escritura .)
    FOR             reduce using rule 37 (estatutos -> escritura .)
    INT_TYPE        reduce using rule 37 (estatutos -> escritura .)
    FLOAT_TYPE      reduce using rule 37 (estatutos -> escritura .)
    CHAR_TYPE       reduce using rule 37 (estatutos -> escritura .)
    LPAREN          reduce using rule 37 (estatutos -> escritura .)
    INT_CTE         reduce using rule 37 (estatutos -> escritura .)
    FLOAT_CTE       reduce using rule 37 (estatutos -> escritura .)
    RCURLY          reduce using rule 37 (estatutos -> escritura .)


state 67

    (38) estatutos -> decision .

    ID              reduce using rule 38 (estatutos -> decision .)
    LLAMA           reduce using rule 38 (estatutos -> decision .)
    RETURN          reduce using rule 38 (estatutos -> decision .)
    READ            reduce using rule 38 (estatutos -> decision .)
    WRITE           reduce using rule 38 (estatutos -> decision .)
    IF              reduce using rule 38 (estatutos -> decision .)
    WHILE           reduce using rule 38 (estatutos -> decision .)
    FOR             reduce using rule 38 (estatutos -> decision .)
    INT_TYPE        reduce using rule 38 (estatutos -> decision .)
    FLOAT_TYPE      reduce using rule 38 (estatutos -> decision .)
    CHAR_TYPE       reduce using rule 38 (estatutos -> decision .)
    LPAREN          reduce using rule 38 (estatutos -> decision .)
    INT_CTE         reduce using rule 38 (estatutos -> decision .)
    FLOAT_CTE       reduce using rule 38 (estatutos -> decision .)
    RCURLY          reduce using rule 38 (estatutos -> decision .)


state 68

    (39) estatutos -> loop_cond .

    ID              reduce using rule 39 (estatutos -> loop_cond .)
    LLAMA           reduce using rule 39 (estatutos -> loop_cond .)
    RETURN          reduce using rule 39 (estatutos -> loop_cond .)
    READ            reduce using rule 39 (estatutos -> loop_cond .)
    WRITE           reduce using rule 39 (estatutos -> loop_cond .)
    IF              reduce using rule 39 (estatutos -> loop_cond .)
    WHILE           reduce using rule 39 (estatutos -> loop_cond .)
    FOR             reduce using rule 39 (estatutos -> loop_cond .)
    INT_TYPE        reduce using rule 39 (estatutos -> loop_cond .)
    FLOAT_TYPE      reduce using rule 39 (estatutos -> loop_cond .)
    CHAR_TYPE       reduce using rule 39 (estatutos -> loop_cond .)
    LPAREN          reduce using rule 39 (estatutos -> loop_cond .)
    INT_CTE         reduce using rule 39 (estatutos -> loop_cond .)
    FLOAT_CTE       reduce using rule 39 (estatutos -> loop_cond .)
    RCURLY          reduce using rule 39 (estatutos -> loop_cond .)


state 69

    (40) estatutos -> loop_no_cond .

    ID              reduce using rule 40 (estatutos -> loop_no_cond .)
    LLAMA           reduce using rule 40 (estatutos -> loop_no_cond .)
    RETURN          reduce using rule 40 (estatutos -> loop_no_cond .)
    READ            reduce using rule 40 (estatutos -> loop_no_cond .)
    WRITE           reduce using rule 40 (estatutos -> loop_no_cond .)
    IF              reduce using rule 40 (estatutos -> loop_no_cond .)
    WHILE           reduce using rule 40 (estatutos -> loop_no_cond .)
    FOR             reduce using rule 40 (estatutos -> loop_no_cond .)
    INT_TYPE        reduce using rule 40 (estatutos -> loop_no_cond .)
    FLOAT_TYPE      reduce using rule 40 (estatutos -> loop_no_cond .)
    CHAR_TYPE       reduce using rule 40 (estatutos -> loop_no_cond .)
    LPAREN          reduce using rule 40 (estatutos -> loop_no_cond .)
    INT_CTE         reduce using rule 40 (estatutos -> loop_no_cond .)
    FLOAT_CTE       reduce using rule 40 (estatutos -> loop_no_cond .)
    RCURLY          reduce using rule 40 (estatutos -> loop_no_cond .)


state 70

    (41) estatutos -> expresiones .

    ID              reduce using rule 41 (estatutos -> expresiones .)
    LLAMA           reduce using rule 41 (estatutos -> expresiones .)
    RETURN          reduce using rule 41 (estatutos -> expresiones .)
    READ            reduce using rule 41 (estatutos -> expresiones .)
    WRITE           reduce using rule 41 (estatutos -> expresiones .)
    IF              reduce using rule 41 (estatutos -> expresiones .)
    WHILE           reduce using rule 41 (estatutos -> expresiones .)
    FOR             reduce using rule 41 (estatutos -> expresiones .)
    INT_TYPE        reduce using rule 41 (estatutos -> expresiones .)
    FLOAT_TYPE      reduce using rule 41 (estatutos -> expresiones .)
    CHAR_TYPE       reduce using rule 41 (estatutos -> expresiones .)
    LPAREN          reduce using rule 41 (estatutos -> expresiones .)
    INT_CTE         reduce using rule 41 (estatutos -> expresiones .)
    FLOAT_CTE       reduce using rule 41 (estatutos -> expresiones .)
    RCURLY          reduce using rule 41 (estatutos -> expresiones .)


state 71

    (42) estatutos -> empty .

    ID              reduce using rule 42 (estatutos -> empty .)
    LLAMA           reduce using rule 42 (estatutos -> empty .)
    RETURN          reduce using rule 42 (estatutos -> empty .)
    READ            reduce using rule 42 (estatutos -> empty .)
    WRITE           reduce using rule 42 (estatutos -> empty .)
    IF              reduce using rule 42 (estatutos -> empty .)
    WHILE           reduce using rule 42 (estatutos -> empty .)
    FOR             reduce using rule 42 (estatutos -> empty .)
    INT_TYPE        reduce using rule 42 (estatutos -> empty .)
    FLOAT_TYPE      reduce using rule 42 (estatutos -> empty .)
    CHAR_TYPE       reduce using rule 42 (estatutos -> empty .)
    LPAREN          reduce using rule 42 (estatutos -> empty .)
    INT_CTE         reduce using rule 42 (estatutos -> empty .)
    FLOAT_CTE       reduce using rule 42 (estatutos -> empty .)
    RCURLY          reduce using rule 42 (estatutos -> empty .)


state 72

    (43) asignacion -> ID . pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC
    (93) factor -> ID . pn_busqueda
    (100) pn_expresionID2 -> .
    (99) pn_busqueda -> .

    ASSIGN          reduce using rule 100 (pn_expresionID2 -> .)
    MULT_OP         reduce using rule 99 (pn_busqueda -> .)
    DIV_OP          reduce using rule 99 (pn_busqueda -> .)
    PLUS_OP         reduce using rule 99 (pn_busqueda -> .)
    MINUS_OP        reduce using rule 99 (pn_busqueda -> .)
    GT_LOG          reduce using rule 99 (pn_busqueda -> .)
    LT_LOG          reduce using rule 99 (pn_busqueda -> .)
    EQUAL_LOG       reduce using rule 99 (pn_busqueda -> .)
    NE_LOG          reduce using rule 99 (pn_busqueda -> .)
    AND_LOG         reduce using rule 99 (pn_busqueda -> .)
    OR_LOG          reduce using rule 99 (pn_busqueda -> .)
    ID              reduce using rule 99 (pn_busqueda -> .)
    LLAMA           reduce using rule 99 (pn_busqueda -> .)
    RETURN          reduce using rule 99 (pn_busqueda -> .)
    READ            reduce using rule 99 (pn_busqueda -> .)
    WRITE           reduce using rule 99 (pn_busqueda -> .)
    IF              reduce using rule 99 (pn_busqueda -> .)
    WHILE           reduce using rule 99 (pn_busqueda -> .)
    FOR             reduce using rule 99 (pn_busqueda -> .)
    INT_TYPE        reduce using rule 99 (pn_busqueda -> .)
    FLOAT_TYPE      reduce using rule 99 (pn_busqueda -> .)
    CHAR_TYPE       reduce using rule 99 (pn_busqueda -> .)
    LPAREN          reduce using rule 99 (pn_busqueda -> .)
    INT_CTE         reduce using rule 99 (pn_busqueda -> .)
    FLOAT_CTE       reduce using rule 99 (pn_busqueda -> .)
    RCURLY          reduce using rule 99 (pn_busqueda -> .)

    pn_expresionID2                shift and go to state 96
    pn_busqueda                    shift and go to state 97

state 73

    (44) declaracion -> tipos . ID pn_expresionID declaracion_aux SEMIC

    ID              shift and go to state 98


state 74

    (47) llamada_func -> LLAMA . ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (52) llamada_void -> LLAMA . ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC

    ID              shift and go to state 99


state 75

    (91) factor -> LPAREN . pn_expresion5 expresiones RPAREN pn_expresion6
    (106) pn_expresion5 -> .

    LPAREN          reduce using rule 106 (pn_expresion5 -> .)
    ID              reduce using rule 106 (pn_expresion5 -> .)
    LLAMA           reduce using rule 106 (pn_expresion5 -> .)
    INT_CTE         reduce using rule 106 (pn_expresion5 -> .)
    FLOAT_CTE       reduce using rule 106 (pn_expresion5 -> .)

    pn_expresion5                  shift and go to state 100

state 76

    (57) retorno -> RETURN . pn_secu3 LPAREN expresiones RPAREN SEMIC
    (114) pn_secu3 -> .

    LPAREN          reduce using rule 114 (pn_secu3 -> .)

    pn_secu3                       shift and go to state 101

state 77

    (58) lectura -> READ . pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5
    (114) pn_secu3 -> .

    LPAREN          reduce using rule 114 (pn_secu3 -> .)

    pn_secu3                       shift and go to state 102

state 78

    (61) escritura -> WRITE . LPAREN RPAREN pn_secuPR2 SEMIC

    LPAREN          shift and go to state 103


state 79

    (62) decision -> IF . LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2

    LPAREN          shift and go to state 104


state 80

    (65) loop_cond -> WHILE . pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3
    (121) pn_loop1 -> .

    LPAREN          reduce using rule 121 (pn_loop1 -> .)

    pn_loop1                       shift and go to state 105

state 81

    (66) loop_no_cond -> FOR . ID nocond_aux ASSIGN expresiones TO expresiones DO bloque

    ID              shift and go to state 106


state 82

    (69) expresiones -> t_exp . or_check
    (70) or_check -> . OR_LOG pn_expresion9 expresiones pn_expresion10
    (71) or_check -> . empty
    (96) empty -> .

    OR_LOG          shift and go to state 108
    ID              reduce using rule 96 (empty -> .)
    LLAMA           reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    READ            reduce using rule 96 (empty -> .)
    WRITE           reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    INT_TYPE        reduce using rule 96 (empty -> .)
    FLOAT_TYPE      reduce using rule 96 (empty -> .)
    CHAR_TYPE       reduce using rule 96 (empty -> .)
    LPAREN          reduce using rule 96 (empty -> .)
    INT_CTE         reduce using rule 96 (empty -> .)
    FLOAT_CTE       reduce using rule 96 (empty -> .)
    RCURLY          reduce using rule 96 (empty -> .)
    RPAREN          reduce using rule 96 (empty -> .)
    RBRACK          reduce using rule 96 (empty -> .)
    SEMIC           reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)
    TO              reduce using rule 96 (empty -> .)
    DO              reduce using rule 96 (empty -> .)

    or_check                       shift and go to state 107
    empty                          shift and go to state 109

state 83

    (72) t_exp -> g_exp . and_check
    (73) and_check -> . AND_LOG pn_expresion9 t_exp pn_expresion10
    (74) and_check -> . empty
    (96) empty -> .

    AND_LOG         shift and go to state 111
    OR_LOG          reduce using rule 96 (empty -> .)
    ID              reduce using rule 96 (empty -> .)
    LLAMA           reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    READ            reduce using rule 96 (empty -> .)
    WRITE           reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    INT_TYPE        reduce using rule 96 (empty -> .)
    FLOAT_TYPE      reduce using rule 96 (empty -> .)
    CHAR_TYPE       reduce using rule 96 (empty -> .)
    LPAREN          reduce using rule 96 (empty -> .)
    INT_CTE         reduce using rule 96 (empty -> .)
    FLOAT_CTE       reduce using rule 96 (empty -> .)
    RCURLY          reduce using rule 96 (empty -> .)
    RPAREN          reduce using rule 96 (empty -> .)
    RBRACK          reduce using rule 96 (empty -> .)
    SEMIC           reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)
    TO              reduce using rule 96 (empty -> .)
    DO              reduce using rule 96 (empty -> .)

    and_check                      shift and go to state 110
    empty                          shift and go to state 112

state 84

    (75) g_exp -> m_exp . op_check
    (76) op_check -> . empty
    (77) op_check -> . comparacion m_exp pn_expresion8
    (96) empty -> .
    (78) comparacion -> . GT_LOG pn_expresion7
    (79) comparacion -> . LT_LOG pn_expresion7
    (80) comparacion -> . EQUAL_LOG pn_expresion7
    (81) comparacion -> . NE_LOG pn_expresion7

    AND_LOG         reduce using rule 96 (empty -> .)
    OR_LOG          reduce using rule 96 (empty -> .)
    ID              reduce using rule 96 (empty -> .)
    LLAMA           reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    READ            reduce using rule 96 (empty -> .)
    WRITE           reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    INT_TYPE        reduce using rule 96 (empty -> .)
    FLOAT_TYPE      reduce using rule 96 (empty -> .)
    CHAR_TYPE       reduce using rule 96 (empty -> .)
    LPAREN          reduce using rule 96 (empty -> .)
    INT_CTE         reduce using rule 96 (empty -> .)
    FLOAT_CTE       reduce using rule 96 (empty -> .)
    RCURLY          reduce using rule 96 (empty -> .)
    RPAREN          reduce using rule 96 (empty -> .)
    RBRACK          reduce using rule 96 (empty -> .)
    SEMIC           reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)
    TO              reduce using rule 96 (empty -> .)
    DO              reduce using rule 96 (empty -> .)
    GT_LOG          shift and go to state 116
    LT_LOG          shift and go to state 117
    EQUAL_LOG       shift and go to state 118
    NE_LOG          shift and go to state 119

    op_check                       shift and go to state 113
    empty                          shift and go to state 114
    comparacion                    shift and go to state 115

state 85

    (82) m_exp -> termino . pn_expresion3 m_rec
    (104) pn_expresion3 -> .

    PLUS_OP         reduce using rule 104 (pn_expresion3 -> .)
    MINUS_OP        reduce using rule 104 (pn_expresion3 -> .)
    GT_LOG          reduce using rule 104 (pn_expresion3 -> .)
    LT_LOG          reduce using rule 104 (pn_expresion3 -> .)
    EQUAL_LOG       reduce using rule 104 (pn_expresion3 -> .)
    NE_LOG          reduce using rule 104 (pn_expresion3 -> .)
    AND_LOG         reduce using rule 104 (pn_expresion3 -> .)
    OR_LOG          reduce using rule 104 (pn_expresion3 -> .)
    ID              reduce using rule 104 (pn_expresion3 -> .)
    LLAMA           reduce using rule 104 (pn_expresion3 -> .)
    RETURN          reduce using rule 104 (pn_expresion3 -> .)
    READ            reduce using rule 104 (pn_expresion3 -> .)
    WRITE           reduce using rule 104 (pn_expresion3 -> .)
    IF              reduce using rule 104 (pn_expresion3 -> .)
    WHILE           reduce using rule 104 (pn_expresion3 -> .)
    FOR             reduce using rule 104 (pn_expresion3 -> .)
    INT_TYPE        reduce using rule 104 (pn_expresion3 -> .)
    FLOAT_TYPE      reduce using rule 104 (pn_expresion3 -> .)
    CHAR_TYPE       reduce using rule 104 (pn_expresion3 -> .)
    LPAREN          reduce using rule 104 (pn_expresion3 -> .)
    INT_CTE         reduce using rule 104 (pn_expresion3 -> .)
    FLOAT_CTE       reduce using rule 104 (pn_expresion3 -> .)
    RCURLY          reduce using rule 104 (pn_expresion3 -> .)
    RPAREN          reduce using rule 104 (pn_expresion3 -> .)
    RBRACK          reduce using rule 104 (pn_expresion3 -> .)
    SEMIC           reduce using rule 104 (pn_expresion3 -> .)
    COMMA           reduce using rule 104 (pn_expresion3 -> .)
    TO              reduce using rule 104 (pn_expresion3 -> .)
    DO              reduce using rule 104 (pn_expresion3 -> .)

    pn_expresion3                  shift and go to state 120

state 86

    (86) termino -> factor . pn_expresion4 term_rec
    (105) pn_expresion4 -> .

    MULT_OP         reduce using rule 105 (pn_expresion4 -> .)
    DIV_OP          reduce using rule 105 (pn_expresion4 -> .)
    PLUS_OP         reduce using rule 105 (pn_expresion4 -> .)
    MINUS_OP        reduce using rule 105 (pn_expresion4 -> .)
    GT_LOG          reduce using rule 105 (pn_expresion4 -> .)
    LT_LOG          reduce using rule 105 (pn_expresion4 -> .)
    EQUAL_LOG       reduce using rule 105 (pn_expresion4 -> .)
    NE_LOG          reduce using rule 105 (pn_expresion4 -> .)
    AND_LOG         reduce using rule 105 (pn_expresion4 -> .)
    OR_LOG          reduce using rule 105 (pn_expresion4 -> .)
    ID              reduce using rule 105 (pn_expresion4 -> .)
    LLAMA           reduce using rule 105 (pn_expresion4 -> .)
    RETURN          reduce using rule 105 (pn_expresion4 -> .)
    READ            reduce using rule 105 (pn_expresion4 -> .)
    WRITE           reduce using rule 105 (pn_expresion4 -> .)
    IF              reduce using rule 105 (pn_expresion4 -> .)
    WHILE           reduce using rule 105 (pn_expresion4 -> .)
    FOR             reduce using rule 105 (pn_expresion4 -> .)
    INT_TYPE        reduce using rule 105 (pn_expresion4 -> .)
    FLOAT_TYPE      reduce using rule 105 (pn_expresion4 -> .)
    CHAR_TYPE       reduce using rule 105 (pn_expresion4 -> .)
    LPAREN          reduce using rule 105 (pn_expresion4 -> .)
    INT_CTE         reduce using rule 105 (pn_expresion4 -> .)
    FLOAT_CTE       reduce using rule 105 (pn_expresion4 -> .)
    RCURLY          reduce using rule 105 (pn_expresion4 -> .)
    RPAREN          reduce using rule 105 (pn_expresion4 -> .)
    RBRACK          reduce using rule 105 (pn_expresion4 -> .)
    SEMIC           reduce using rule 105 (pn_expresion4 -> .)
    COMMA           reduce using rule 105 (pn_expresion4 -> .)
    TO              reduce using rule 105 (pn_expresion4 -> .)
    DO              reduce using rule 105 (pn_expresion4 -> .)

    pn_expresion4                  shift and go to state 121

state 87

    (92) factor -> cte .

    MULT_OP         reduce using rule 92 (factor -> cte .)
    DIV_OP          reduce using rule 92 (factor -> cte .)
    PLUS_OP         reduce using rule 92 (factor -> cte .)
    MINUS_OP        reduce using rule 92 (factor -> cte .)
    GT_LOG          reduce using rule 92 (factor -> cte .)
    LT_LOG          reduce using rule 92 (factor -> cte .)
    EQUAL_LOG       reduce using rule 92 (factor -> cte .)
    NE_LOG          reduce using rule 92 (factor -> cte .)
    AND_LOG         reduce using rule 92 (factor -> cte .)
    OR_LOG          reduce using rule 92 (factor -> cte .)
    ID              reduce using rule 92 (factor -> cte .)
    LLAMA           reduce using rule 92 (factor -> cte .)
    RETURN          reduce using rule 92 (factor -> cte .)
    READ            reduce using rule 92 (factor -> cte .)
    WRITE           reduce using rule 92 (factor -> cte .)
    IF              reduce using rule 92 (factor -> cte .)
    WHILE           reduce using rule 92 (factor -> cte .)
    FOR             reduce using rule 92 (factor -> cte .)
    INT_TYPE        reduce using rule 92 (factor -> cte .)
    FLOAT_TYPE      reduce using rule 92 (factor -> cte .)
    CHAR_TYPE       reduce using rule 92 (factor -> cte .)
    LPAREN          reduce using rule 92 (factor -> cte .)
    INT_CTE         reduce using rule 92 (factor -> cte .)
    FLOAT_CTE       reduce using rule 92 (factor -> cte .)
    RCURLY          reduce using rule 92 (factor -> cte .)
    RPAREN          reduce using rule 92 (factor -> cte .)
    RBRACK          reduce using rule 92 (factor -> cte .)
    SEMIC           reduce using rule 92 (factor -> cte .)
    COMMA           reduce using rule 92 (factor -> cte .)
    TO              reduce using rule 92 (factor -> cte .)
    DO              reduce using rule 92 (factor -> cte .)


state 88

    (94) cte -> INT_CTE . pn_constante
    (135) pn_constante -> .

    MULT_OP         reduce using rule 135 (pn_constante -> .)
    DIV_OP          reduce using rule 135 (pn_constante -> .)
    PLUS_OP         reduce using rule 135 (pn_constante -> .)
    MINUS_OP        reduce using rule 135 (pn_constante -> .)
    GT_LOG          reduce using rule 135 (pn_constante -> .)
    LT_LOG          reduce using rule 135 (pn_constante -> .)
    EQUAL_LOG       reduce using rule 135 (pn_constante -> .)
    NE_LOG          reduce using rule 135 (pn_constante -> .)
    AND_LOG         reduce using rule 135 (pn_constante -> .)
    OR_LOG          reduce using rule 135 (pn_constante -> .)
    ID              reduce using rule 135 (pn_constante -> .)
    LLAMA           reduce using rule 135 (pn_constante -> .)
    RETURN          reduce using rule 135 (pn_constante -> .)
    READ            reduce using rule 135 (pn_constante -> .)
    WRITE           reduce using rule 135 (pn_constante -> .)
    IF              reduce using rule 135 (pn_constante -> .)
    WHILE           reduce using rule 135 (pn_constante -> .)
    FOR             reduce using rule 135 (pn_constante -> .)
    INT_TYPE        reduce using rule 135 (pn_constante -> .)
    FLOAT_TYPE      reduce using rule 135 (pn_constante -> .)
    CHAR_TYPE       reduce using rule 135 (pn_constante -> .)
    LPAREN          reduce using rule 135 (pn_constante -> .)
    INT_CTE         reduce using rule 135 (pn_constante -> .)
    FLOAT_CTE       reduce using rule 135 (pn_constante -> .)
    RCURLY          reduce using rule 135 (pn_constante -> .)
    RPAREN          reduce using rule 135 (pn_constante -> .)
    RBRACK          reduce using rule 135 (pn_constante -> .)
    SEMIC           reduce using rule 135 (pn_constante -> .)
    COMMA           reduce using rule 135 (pn_constante -> .)
    TO              reduce using rule 135 (pn_constante -> .)
    DO              reduce using rule 135 (pn_constante -> .)

    pn_constante                   shift and go to state 122

state 89

    (95) cte -> FLOAT_CTE . pn_constante
    (135) pn_constante -> .

    MULT_OP         reduce using rule 135 (pn_constante -> .)
    DIV_OP          reduce using rule 135 (pn_constante -> .)
    PLUS_OP         reduce using rule 135 (pn_constante -> .)
    MINUS_OP        reduce using rule 135 (pn_constante -> .)
    GT_LOG          reduce using rule 135 (pn_constante -> .)
    LT_LOG          reduce using rule 135 (pn_constante -> .)
    EQUAL_LOG       reduce using rule 135 (pn_constante -> .)
    NE_LOG          reduce using rule 135 (pn_constante -> .)
    AND_LOG         reduce using rule 135 (pn_constante -> .)
    OR_LOG          reduce using rule 135 (pn_constante -> .)
    ID              reduce using rule 135 (pn_constante -> .)
    LLAMA           reduce using rule 135 (pn_constante -> .)
    RETURN          reduce using rule 135 (pn_constante -> .)
    READ            reduce using rule 135 (pn_constante -> .)
    WRITE           reduce using rule 135 (pn_constante -> .)
    IF              reduce using rule 135 (pn_constante -> .)
    WHILE           reduce using rule 135 (pn_constante -> .)
    FOR             reduce using rule 135 (pn_constante -> .)
    INT_TYPE        reduce using rule 135 (pn_constante -> .)
    FLOAT_TYPE      reduce using rule 135 (pn_constante -> .)
    CHAR_TYPE       reduce using rule 135 (pn_constante -> .)
    LPAREN          reduce using rule 135 (pn_constante -> .)
    INT_CTE         reduce using rule 135 (pn_constante -> .)
    FLOAT_CTE       reduce using rule 135 (pn_constante -> .)
    RCURLY          reduce using rule 135 (pn_constante -> .)
    RPAREN          reduce using rule 135 (pn_constante -> .)
    RBRACK          reduce using rule 135 (pn_constante -> .)
    SEMIC           reduce using rule 135 (pn_constante -> .)
    COMMA           reduce using rule 135 (pn_constante -> .)
    TO              reduce using rule 135 (pn_constante -> .)
    DO              reduce using rule 135 (pn_constante -> .)

    pn_constante                   shift and go to state 123

state 90

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 . SEMIC dec_var_loc bloque pn_func4

    SEMIC           shift and go to state 124


state 91

    (24) parametros -> tipos COLON ID . pn_func2 param_aux
    (127) pn_func2 -> .

    COMMA           reduce using rule 127 (pn_func2 -> .)
    RPAREN          reduce using rule 127 (pn_func2 -> .)

    pn_func2                       shift and go to state 125

state 92

    (4) dec_var_aux -> tipos COLON lista_ids SEMIC dec_var_aux .

    FUNCTION        reduce using rule 4 (dec_var_aux -> tipos COLON lista_ids SEMIC dec_var_aux .)
    MAIN            reduce using rule 4 (dec_var_aux -> tipos COLON lista_ids SEMIC dec_var_aux .)


state 93

    (29) estatu_rec -> estatutos . estatu_rec
    (29) estatu_rec -> . estatutos estatu_rec
    (30) estatu_rec -> . empty
    (31) estatutos -> . asignacion
    (32) estatutos -> . declaracion
    (33) estatutos -> . llamada_func
    (34) estatutos -> . llamada_void
    (35) estatutos -> . retorno
    (36) estatutos -> . lectura
    (37) estatutos -> . escritura
    (38) estatutos -> . decision
    (39) estatutos -> . loop_cond
    (40) estatutos -> . loop_no_cond
    (41) estatutos -> . expresiones
    (42) estatutos -> . empty
    (96) empty -> .
    (43) asignacion -> . ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC
    (44) declaracion -> . tipos ID pn_expresionID declaracion_aux SEMIC
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (52) llamada_void -> . LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC
    (57) retorno -> . RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC
    (58) lectura -> . READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5
    (61) escritura -> . WRITE LPAREN RPAREN pn_secuPR2 SEMIC
    (62) decision -> . IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2
    (65) loop_cond -> . WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3
    (66) loop_no_cond -> . FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque
    (69) expresiones -> . t_exp or_check
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LLAMA resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for READ resolved as shift
  ! shift/reduce conflict for WRITE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for INT_TYPE resolved as shift
  ! shift/reduce conflict for FLOAT_TYPE resolved as shift
  ! shift/reduce conflict for CHAR_TYPE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT_CTE resolved as shift
  ! shift/reduce conflict for FLOAT_CTE resolved as shift
    RCURLY          reduce using rule 96 (empty -> .)
    ID              shift and go to state 72
    LLAMA           shift and go to state 74
    RETURN          shift and go to state 76
    READ            shift and go to state 77
    WRITE           shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80
    FOR             shift and go to state 81
    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15
    LPAREN          shift and go to state 75
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

  ! ID              [ reduce using rule 96 (empty -> .) ]
  ! LLAMA           [ reduce using rule 96 (empty -> .) ]
  ! RETURN          [ reduce using rule 96 (empty -> .) ]
  ! READ            [ reduce using rule 96 (empty -> .) ]
  ! WRITE           [ reduce using rule 96 (empty -> .) ]
  ! IF              [ reduce using rule 96 (empty -> .) ]
  ! WHILE           [ reduce using rule 96 (empty -> .) ]
  ! FOR             [ reduce using rule 96 (empty -> .) ]
  ! INT_TYPE        [ reduce using rule 96 (empty -> .) ]
  ! FLOAT_TYPE      [ reduce using rule 96 (empty -> .) ]
  ! CHAR_TYPE       [ reduce using rule 96 (empty -> .) ]
  ! LPAREN          [ reduce using rule 96 (empty -> .) ]
  ! INT_CTE         [ reduce using rule 96 (empty -> .) ]
  ! FLOAT_CTE       [ reduce using rule 96 (empty -> .) ]

    estatutos                      shift and go to state 93
    estatu_rec                     shift and go to state 126
    empty                          shift and go to state 95
    asignacion                     shift and go to state 60
    declaracion                    shift and go to state 61
    llamada_func                   shift and go to state 62
    llamada_void                   shift and go to state 63
    retorno                        shift and go to state 64
    lectura                        shift and go to state 65
    escritura                      shift and go to state 66
    decision                       shift and go to state 67
    loop_cond                      shift and go to state 68
    loop_no_cond                   shift and go to state 69
    expresiones                    shift and go to state 70
    tipos                          shift and go to state 73
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    cte                            shift and go to state 87

state 94

    (28) bloque -> LCURLY estatutos estatu_rec . RCURLY

    RCURLY          shift and go to state 127


state 95

    (30) estatu_rec -> empty .
    (42) estatutos -> empty .

  ! reduce/reduce conflict for RCURLY resolved using rule 30 (estatu_rec -> empty .)
    RCURLY          reduce using rule 30 (estatu_rec -> empty .)
    ID              reduce using rule 42 (estatutos -> empty .)
    LLAMA           reduce using rule 42 (estatutos -> empty .)
    RETURN          reduce using rule 42 (estatutos -> empty .)
    READ            reduce using rule 42 (estatutos -> empty .)
    WRITE           reduce using rule 42 (estatutos -> empty .)
    IF              reduce using rule 42 (estatutos -> empty .)
    WHILE           reduce using rule 42 (estatutos -> empty .)
    FOR             reduce using rule 42 (estatutos -> empty .)
    INT_TYPE        reduce using rule 42 (estatutos -> empty .)
    FLOAT_TYPE      reduce using rule 42 (estatutos -> empty .)
    CHAR_TYPE       reduce using rule 42 (estatutos -> empty .)
    LPAREN          reduce using rule 42 (estatutos -> empty .)
    INT_CTE         reduce using rule 42 (estatutos -> empty .)
    FLOAT_CTE       reduce using rule 42 (estatutos -> empty .)

  ! RCURLY          [ reduce using rule 42 (estatutos -> empty .) ]


state 96

    (43) asignacion -> ID pn_expresionID2 . ASSIGN pn_secu1 expresiones pn_secu2 SEMIC

    ASSIGN          shift and go to state 128


state 97

    (93) factor -> ID pn_busqueda .

    MULT_OP         reduce using rule 93 (factor -> ID pn_busqueda .)
    DIV_OP          reduce using rule 93 (factor -> ID pn_busqueda .)
    PLUS_OP         reduce using rule 93 (factor -> ID pn_busqueda .)
    MINUS_OP        reduce using rule 93 (factor -> ID pn_busqueda .)
    GT_LOG          reduce using rule 93 (factor -> ID pn_busqueda .)
    LT_LOG          reduce using rule 93 (factor -> ID pn_busqueda .)
    EQUAL_LOG       reduce using rule 93 (factor -> ID pn_busqueda .)
    NE_LOG          reduce using rule 93 (factor -> ID pn_busqueda .)
    AND_LOG         reduce using rule 93 (factor -> ID pn_busqueda .)
    OR_LOG          reduce using rule 93 (factor -> ID pn_busqueda .)
    ID              reduce using rule 93 (factor -> ID pn_busqueda .)
    LLAMA           reduce using rule 93 (factor -> ID pn_busqueda .)
    RETURN          reduce using rule 93 (factor -> ID pn_busqueda .)
    READ            reduce using rule 93 (factor -> ID pn_busqueda .)
    WRITE           reduce using rule 93 (factor -> ID pn_busqueda .)
    IF              reduce using rule 93 (factor -> ID pn_busqueda .)
    WHILE           reduce using rule 93 (factor -> ID pn_busqueda .)
    FOR             reduce using rule 93 (factor -> ID pn_busqueda .)
    INT_TYPE        reduce using rule 93 (factor -> ID pn_busqueda .)
    FLOAT_TYPE      reduce using rule 93 (factor -> ID pn_busqueda .)
    CHAR_TYPE       reduce using rule 93 (factor -> ID pn_busqueda .)
    LPAREN          reduce using rule 93 (factor -> ID pn_busqueda .)
    INT_CTE         reduce using rule 93 (factor -> ID pn_busqueda .)
    FLOAT_CTE       reduce using rule 93 (factor -> ID pn_busqueda .)
    RCURLY          reduce using rule 93 (factor -> ID pn_busqueda .)
    RPAREN          reduce using rule 93 (factor -> ID pn_busqueda .)
    RBRACK          reduce using rule 93 (factor -> ID pn_busqueda .)
    SEMIC           reduce using rule 93 (factor -> ID pn_busqueda .)
    COMMA           reduce using rule 93 (factor -> ID pn_busqueda .)
    TO              reduce using rule 93 (factor -> ID pn_busqueda .)
    DO              reduce using rule 93 (factor -> ID pn_busqueda .)


state 98

    (44) declaracion -> tipos ID . pn_expresionID declaracion_aux SEMIC
    (98) pn_expresionID -> .

    ASSIGN          reduce using rule 98 (pn_expresionID -> .)
    SEMIC           reduce using rule 98 (pn_expresionID -> .)

    pn_expresionID                 shift and go to state 129

state 99

    (47) llamada_func -> LLAMA ID . pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (52) llamada_void -> LLAMA ID . pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC
    (130) pn_llamFunc1 -> .

    LPAREN          reduce using rule 130 (pn_llamFunc1 -> .)

    pn_llamFunc1                   shift and go to state 130

state 100

    (91) factor -> LPAREN pn_expresion5 . expresiones RPAREN pn_expresion6
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 131
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 101

    (57) retorno -> RETURN pn_secu3 . LPAREN expresiones RPAREN SEMIC

    LPAREN          shift and go to state 135


state 102

    (58) lectura -> READ pn_secu3 . LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5

    LPAREN          shift and go to state 136


state 103

    (61) escritura -> WRITE LPAREN . RPAREN pn_secuPR2 SEMIC

    RPAREN          shift and go to state 137


state 104

    (62) decision -> IF LPAREN . expresiones RPAREN pn_cond1 THEN bloque else pn_cond2
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 138
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 105

    (65) loop_cond -> WHILE pn_loop1 . LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3

    LPAREN          shift and go to state 139


state 106

    (66) loop_no_cond -> FOR ID . nocond_aux ASSIGN expresiones TO expresiones DO bloque
    (67) nocond_aux -> . LBRACK expresiones RBRACK
    (68) nocond_aux -> . empty
    (96) empty -> .

    LBRACK          shift and go to state 141
    ASSIGN          reduce using rule 96 (empty -> .)

    nocond_aux                     shift and go to state 140
    empty                          shift and go to state 142

state 107

    (69) expresiones -> t_exp or_check .

    ID              reduce using rule 69 (expresiones -> t_exp or_check .)
    LLAMA           reduce using rule 69 (expresiones -> t_exp or_check .)
    RETURN          reduce using rule 69 (expresiones -> t_exp or_check .)
    READ            reduce using rule 69 (expresiones -> t_exp or_check .)
    WRITE           reduce using rule 69 (expresiones -> t_exp or_check .)
    IF              reduce using rule 69 (expresiones -> t_exp or_check .)
    WHILE           reduce using rule 69 (expresiones -> t_exp or_check .)
    FOR             reduce using rule 69 (expresiones -> t_exp or_check .)
    INT_TYPE        reduce using rule 69 (expresiones -> t_exp or_check .)
    FLOAT_TYPE      reduce using rule 69 (expresiones -> t_exp or_check .)
    CHAR_TYPE       reduce using rule 69 (expresiones -> t_exp or_check .)
    LPAREN          reduce using rule 69 (expresiones -> t_exp or_check .)
    INT_CTE         reduce using rule 69 (expresiones -> t_exp or_check .)
    FLOAT_CTE       reduce using rule 69 (expresiones -> t_exp or_check .)
    RCURLY          reduce using rule 69 (expresiones -> t_exp or_check .)
    RPAREN          reduce using rule 69 (expresiones -> t_exp or_check .)
    RBRACK          reduce using rule 69 (expresiones -> t_exp or_check .)
    SEMIC           reduce using rule 69 (expresiones -> t_exp or_check .)
    COMMA           reduce using rule 69 (expresiones -> t_exp or_check .)
    TO              reduce using rule 69 (expresiones -> t_exp or_check .)
    DO              reduce using rule 69 (expresiones -> t_exp or_check .)


state 108

    (70) or_check -> OR_LOG . pn_expresion9 expresiones pn_expresion10
    (110) pn_expresion9 -> .

    LPAREN          reduce using rule 110 (pn_expresion9 -> .)
    ID              reduce using rule 110 (pn_expresion9 -> .)
    LLAMA           reduce using rule 110 (pn_expresion9 -> .)
    INT_CTE         reduce using rule 110 (pn_expresion9 -> .)
    FLOAT_CTE       reduce using rule 110 (pn_expresion9 -> .)

    pn_expresion9                  shift and go to state 143

state 109

    (71) or_check -> empty .

    ID              reduce using rule 71 (or_check -> empty .)
    LLAMA           reduce using rule 71 (or_check -> empty .)
    RETURN          reduce using rule 71 (or_check -> empty .)
    READ            reduce using rule 71 (or_check -> empty .)
    WRITE           reduce using rule 71 (or_check -> empty .)
    IF              reduce using rule 71 (or_check -> empty .)
    WHILE           reduce using rule 71 (or_check -> empty .)
    FOR             reduce using rule 71 (or_check -> empty .)
    INT_TYPE        reduce using rule 71 (or_check -> empty .)
    FLOAT_TYPE      reduce using rule 71 (or_check -> empty .)
    CHAR_TYPE       reduce using rule 71 (or_check -> empty .)
    LPAREN          reduce using rule 71 (or_check -> empty .)
    INT_CTE         reduce using rule 71 (or_check -> empty .)
    FLOAT_CTE       reduce using rule 71 (or_check -> empty .)
    RCURLY          reduce using rule 71 (or_check -> empty .)
    RPAREN          reduce using rule 71 (or_check -> empty .)
    RBRACK          reduce using rule 71 (or_check -> empty .)
    SEMIC           reduce using rule 71 (or_check -> empty .)
    COMMA           reduce using rule 71 (or_check -> empty .)
    TO              reduce using rule 71 (or_check -> empty .)
    DO              reduce using rule 71 (or_check -> empty .)


state 110

    (72) t_exp -> g_exp and_check .

    OR_LOG          reduce using rule 72 (t_exp -> g_exp and_check .)
    ID              reduce using rule 72 (t_exp -> g_exp and_check .)
    LLAMA           reduce using rule 72 (t_exp -> g_exp and_check .)
    RETURN          reduce using rule 72 (t_exp -> g_exp and_check .)
    READ            reduce using rule 72 (t_exp -> g_exp and_check .)
    WRITE           reduce using rule 72 (t_exp -> g_exp and_check .)
    IF              reduce using rule 72 (t_exp -> g_exp and_check .)
    WHILE           reduce using rule 72 (t_exp -> g_exp and_check .)
    FOR             reduce using rule 72 (t_exp -> g_exp and_check .)
    INT_TYPE        reduce using rule 72 (t_exp -> g_exp and_check .)
    FLOAT_TYPE      reduce using rule 72 (t_exp -> g_exp and_check .)
    CHAR_TYPE       reduce using rule 72 (t_exp -> g_exp and_check .)
    LPAREN          reduce using rule 72 (t_exp -> g_exp and_check .)
    INT_CTE         reduce using rule 72 (t_exp -> g_exp and_check .)
    FLOAT_CTE       reduce using rule 72 (t_exp -> g_exp and_check .)
    RCURLY          reduce using rule 72 (t_exp -> g_exp and_check .)
    RPAREN          reduce using rule 72 (t_exp -> g_exp and_check .)
    RBRACK          reduce using rule 72 (t_exp -> g_exp and_check .)
    SEMIC           reduce using rule 72 (t_exp -> g_exp and_check .)
    COMMA           reduce using rule 72 (t_exp -> g_exp and_check .)
    TO              reduce using rule 72 (t_exp -> g_exp and_check .)
    DO              reduce using rule 72 (t_exp -> g_exp and_check .)


state 111

    (73) and_check -> AND_LOG . pn_expresion9 t_exp pn_expresion10
    (110) pn_expresion9 -> .

    LPAREN          reduce using rule 110 (pn_expresion9 -> .)
    ID              reduce using rule 110 (pn_expresion9 -> .)
    LLAMA           reduce using rule 110 (pn_expresion9 -> .)
    INT_CTE         reduce using rule 110 (pn_expresion9 -> .)
    FLOAT_CTE       reduce using rule 110 (pn_expresion9 -> .)

    pn_expresion9                  shift and go to state 144

state 112

    (74) and_check -> empty .

    OR_LOG          reduce using rule 74 (and_check -> empty .)
    ID              reduce using rule 74 (and_check -> empty .)
    LLAMA           reduce using rule 74 (and_check -> empty .)
    RETURN          reduce using rule 74 (and_check -> empty .)
    READ            reduce using rule 74 (and_check -> empty .)
    WRITE           reduce using rule 74 (and_check -> empty .)
    IF              reduce using rule 74 (and_check -> empty .)
    WHILE           reduce using rule 74 (and_check -> empty .)
    FOR             reduce using rule 74 (and_check -> empty .)
    INT_TYPE        reduce using rule 74 (and_check -> empty .)
    FLOAT_TYPE      reduce using rule 74 (and_check -> empty .)
    CHAR_TYPE       reduce using rule 74 (and_check -> empty .)
    LPAREN          reduce using rule 74 (and_check -> empty .)
    INT_CTE         reduce using rule 74 (and_check -> empty .)
    FLOAT_CTE       reduce using rule 74 (and_check -> empty .)
    RCURLY          reduce using rule 74 (and_check -> empty .)
    RPAREN          reduce using rule 74 (and_check -> empty .)
    RBRACK          reduce using rule 74 (and_check -> empty .)
    SEMIC           reduce using rule 74 (and_check -> empty .)
    COMMA           reduce using rule 74 (and_check -> empty .)
    TO              reduce using rule 74 (and_check -> empty .)
    DO              reduce using rule 74 (and_check -> empty .)


state 113

    (75) g_exp -> m_exp op_check .

    AND_LOG         reduce using rule 75 (g_exp -> m_exp op_check .)
    OR_LOG          reduce using rule 75 (g_exp -> m_exp op_check .)
    ID              reduce using rule 75 (g_exp -> m_exp op_check .)
    LLAMA           reduce using rule 75 (g_exp -> m_exp op_check .)
    RETURN          reduce using rule 75 (g_exp -> m_exp op_check .)
    READ            reduce using rule 75 (g_exp -> m_exp op_check .)
    WRITE           reduce using rule 75 (g_exp -> m_exp op_check .)
    IF              reduce using rule 75 (g_exp -> m_exp op_check .)
    WHILE           reduce using rule 75 (g_exp -> m_exp op_check .)
    FOR             reduce using rule 75 (g_exp -> m_exp op_check .)
    INT_TYPE        reduce using rule 75 (g_exp -> m_exp op_check .)
    FLOAT_TYPE      reduce using rule 75 (g_exp -> m_exp op_check .)
    CHAR_TYPE       reduce using rule 75 (g_exp -> m_exp op_check .)
    LPAREN          reduce using rule 75 (g_exp -> m_exp op_check .)
    INT_CTE         reduce using rule 75 (g_exp -> m_exp op_check .)
    FLOAT_CTE       reduce using rule 75 (g_exp -> m_exp op_check .)
    RCURLY          reduce using rule 75 (g_exp -> m_exp op_check .)
    RPAREN          reduce using rule 75 (g_exp -> m_exp op_check .)
    RBRACK          reduce using rule 75 (g_exp -> m_exp op_check .)
    SEMIC           reduce using rule 75 (g_exp -> m_exp op_check .)
    COMMA           reduce using rule 75 (g_exp -> m_exp op_check .)
    TO              reduce using rule 75 (g_exp -> m_exp op_check .)
    DO              reduce using rule 75 (g_exp -> m_exp op_check .)


state 114

    (76) op_check -> empty .

    AND_LOG         reduce using rule 76 (op_check -> empty .)
    OR_LOG          reduce using rule 76 (op_check -> empty .)
    ID              reduce using rule 76 (op_check -> empty .)
    LLAMA           reduce using rule 76 (op_check -> empty .)
    RETURN          reduce using rule 76 (op_check -> empty .)
    READ            reduce using rule 76 (op_check -> empty .)
    WRITE           reduce using rule 76 (op_check -> empty .)
    IF              reduce using rule 76 (op_check -> empty .)
    WHILE           reduce using rule 76 (op_check -> empty .)
    FOR             reduce using rule 76 (op_check -> empty .)
    INT_TYPE        reduce using rule 76 (op_check -> empty .)
    FLOAT_TYPE      reduce using rule 76 (op_check -> empty .)
    CHAR_TYPE       reduce using rule 76 (op_check -> empty .)
    LPAREN          reduce using rule 76 (op_check -> empty .)
    INT_CTE         reduce using rule 76 (op_check -> empty .)
    FLOAT_CTE       reduce using rule 76 (op_check -> empty .)
    RCURLY          reduce using rule 76 (op_check -> empty .)
    RPAREN          reduce using rule 76 (op_check -> empty .)
    RBRACK          reduce using rule 76 (op_check -> empty .)
    SEMIC           reduce using rule 76 (op_check -> empty .)
    COMMA           reduce using rule 76 (op_check -> empty .)
    TO              reduce using rule 76 (op_check -> empty .)
    DO              reduce using rule 76 (op_check -> empty .)


state 115

    (77) op_check -> comparacion . m_exp pn_expresion8
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    m_exp                          shift and go to state 145
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 116

    (78) comparacion -> GT_LOG . pn_expresion7
    (108) pn_expresion7 -> .

    LPAREN          reduce using rule 108 (pn_expresion7 -> .)
    ID              reduce using rule 108 (pn_expresion7 -> .)
    LLAMA           reduce using rule 108 (pn_expresion7 -> .)
    INT_CTE         reduce using rule 108 (pn_expresion7 -> .)
    FLOAT_CTE       reduce using rule 108 (pn_expresion7 -> .)

    pn_expresion7                  shift and go to state 146

state 117

    (79) comparacion -> LT_LOG . pn_expresion7
    (108) pn_expresion7 -> .

    LPAREN          reduce using rule 108 (pn_expresion7 -> .)
    ID              reduce using rule 108 (pn_expresion7 -> .)
    LLAMA           reduce using rule 108 (pn_expresion7 -> .)
    INT_CTE         reduce using rule 108 (pn_expresion7 -> .)
    FLOAT_CTE       reduce using rule 108 (pn_expresion7 -> .)

    pn_expresion7                  shift and go to state 147

state 118

    (80) comparacion -> EQUAL_LOG . pn_expresion7
    (108) pn_expresion7 -> .

    LPAREN          reduce using rule 108 (pn_expresion7 -> .)
    ID              reduce using rule 108 (pn_expresion7 -> .)
    LLAMA           reduce using rule 108 (pn_expresion7 -> .)
    INT_CTE         reduce using rule 108 (pn_expresion7 -> .)
    FLOAT_CTE       reduce using rule 108 (pn_expresion7 -> .)

    pn_expresion7                  shift and go to state 148

state 119

    (81) comparacion -> NE_LOG . pn_expresion7
    (108) pn_expresion7 -> .

    LPAREN          reduce using rule 108 (pn_expresion7 -> .)
    ID              reduce using rule 108 (pn_expresion7 -> .)
    LLAMA           reduce using rule 108 (pn_expresion7 -> .)
    INT_CTE         reduce using rule 108 (pn_expresion7 -> .)
    FLOAT_CTE       reduce using rule 108 (pn_expresion7 -> .)

    pn_expresion7                  shift and go to state 149

state 120

    (82) m_exp -> termino pn_expresion3 . m_rec
    (83) m_rec -> . PLUS_OP pn_expresion1 m_exp
    (84) m_rec -> . MINUS_OP pn_expresion1 m_exp
    (85) m_rec -> . empty
    (96) empty -> .

    PLUS_OP         shift and go to state 151
    MINUS_OP        shift and go to state 152
    GT_LOG          reduce using rule 96 (empty -> .)
    LT_LOG          reduce using rule 96 (empty -> .)
    EQUAL_LOG       reduce using rule 96 (empty -> .)
    NE_LOG          reduce using rule 96 (empty -> .)
    AND_LOG         reduce using rule 96 (empty -> .)
    OR_LOG          reduce using rule 96 (empty -> .)
    ID              reduce using rule 96 (empty -> .)
    LLAMA           reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    READ            reduce using rule 96 (empty -> .)
    WRITE           reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    INT_TYPE        reduce using rule 96 (empty -> .)
    FLOAT_TYPE      reduce using rule 96 (empty -> .)
    CHAR_TYPE       reduce using rule 96 (empty -> .)
    LPAREN          reduce using rule 96 (empty -> .)
    INT_CTE         reduce using rule 96 (empty -> .)
    FLOAT_CTE       reduce using rule 96 (empty -> .)
    RCURLY          reduce using rule 96 (empty -> .)
    RPAREN          reduce using rule 96 (empty -> .)
    RBRACK          reduce using rule 96 (empty -> .)
    SEMIC           reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)
    TO              reduce using rule 96 (empty -> .)
    DO              reduce using rule 96 (empty -> .)

    m_rec                          shift and go to state 150
    empty                          shift and go to state 153

state 121

    (86) termino -> factor pn_expresion4 . term_rec
    (87) term_rec -> . MULT_OP pn_expresion2 termino
    (88) term_rec -> . DIV_OP pn_expresion2 termino
    (89) term_rec -> . empty
    (96) empty -> .

    MULT_OP         shift and go to state 155
    DIV_OP          shift and go to state 156
    PLUS_OP         reduce using rule 96 (empty -> .)
    MINUS_OP        reduce using rule 96 (empty -> .)
    GT_LOG          reduce using rule 96 (empty -> .)
    LT_LOG          reduce using rule 96 (empty -> .)
    EQUAL_LOG       reduce using rule 96 (empty -> .)
    NE_LOG          reduce using rule 96 (empty -> .)
    AND_LOG         reduce using rule 96 (empty -> .)
    OR_LOG          reduce using rule 96 (empty -> .)
    ID              reduce using rule 96 (empty -> .)
    LLAMA           reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    READ            reduce using rule 96 (empty -> .)
    WRITE           reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    INT_TYPE        reduce using rule 96 (empty -> .)
    FLOAT_TYPE      reduce using rule 96 (empty -> .)
    CHAR_TYPE       reduce using rule 96 (empty -> .)
    LPAREN          reduce using rule 96 (empty -> .)
    INT_CTE         reduce using rule 96 (empty -> .)
    FLOAT_CTE       reduce using rule 96 (empty -> .)
    RCURLY          reduce using rule 96 (empty -> .)
    RPAREN          reduce using rule 96 (empty -> .)
    RBRACK          reduce using rule 96 (empty -> .)
    SEMIC           reduce using rule 96 (empty -> .)
    COMMA           reduce using rule 96 (empty -> .)
    TO              reduce using rule 96 (empty -> .)
    DO              reduce using rule 96 (empty -> .)

    term_rec                       shift and go to state 154
    empty                          shift and go to state 157

state 122

    (94) cte -> INT_CTE pn_constante .

    MULT_OP         reduce using rule 94 (cte -> INT_CTE pn_constante .)
    DIV_OP          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    PLUS_OP         reduce using rule 94 (cte -> INT_CTE pn_constante .)
    MINUS_OP        reduce using rule 94 (cte -> INT_CTE pn_constante .)
    GT_LOG          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    LT_LOG          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    EQUAL_LOG       reduce using rule 94 (cte -> INT_CTE pn_constante .)
    NE_LOG          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    AND_LOG         reduce using rule 94 (cte -> INT_CTE pn_constante .)
    OR_LOG          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    ID              reduce using rule 94 (cte -> INT_CTE pn_constante .)
    LLAMA           reduce using rule 94 (cte -> INT_CTE pn_constante .)
    RETURN          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    READ            reduce using rule 94 (cte -> INT_CTE pn_constante .)
    WRITE           reduce using rule 94 (cte -> INT_CTE pn_constante .)
    IF              reduce using rule 94 (cte -> INT_CTE pn_constante .)
    WHILE           reduce using rule 94 (cte -> INT_CTE pn_constante .)
    FOR             reduce using rule 94 (cte -> INT_CTE pn_constante .)
    INT_TYPE        reduce using rule 94 (cte -> INT_CTE pn_constante .)
    FLOAT_TYPE      reduce using rule 94 (cte -> INT_CTE pn_constante .)
    CHAR_TYPE       reduce using rule 94 (cte -> INT_CTE pn_constante .)
    LPAREN          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    INT_CTE         reduce using rule 94 (cte -> INT_CTE pn_constante .)
    FLOAT_CTE       reduce using rule 94 (cte -> INT_CTE pn_constante .)
    RCURLY          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    RPAREN          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    RBRACK          reduce using rule 94 (cte -> INT_CTE pn_constante .)
    SEMIC           reduce using rule 94 (cte -> INT_CTE pn_constante .)
    COMMA           reduce using rule 94 (cte -> INT_CTE pn_constante .)
    TO              reduce using rule 94 (cte -> INT_CTE pn_constante .)
    DO              reduce using rule 94 (cte -> INT_CTE pn_constante .)


state 123

    (95) cte -> FLOAT_CTE pn_constante .

    MULT_OP         reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    DIV_OP          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    PLUS_OP         reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    MINUS_OP        reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    GT_LOG          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    LT_LOG          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    EQUAL_LOG       reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    NE_LOG          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    AND_LOG         reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    OR_LOG          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    ID              reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    LLAMA           reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    RETURN          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    READ            reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    WRITE           reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    IF              reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    WHILE           reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    FOR             reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    INT_TYPE        reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    FLOAT_TYPE      reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    CHAR_TYPE       reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    LPAREN          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    INT_CTE         reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    FLOAT_CTE       reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    RCURLY          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    RPAREN          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    RBRACK          reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    SEMIC           reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    COMMA           reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    TO              reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)
    DO              reduce using rule 95 (cte -> FLOAT_CTE pn_constante .)


state 124

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC . dec_var_loc bloque pn_func4
    (18) dec_var_loc -> . VARS tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec
    (19) dec_var_loc -> . empty
    (96) empty -> .

    VARS            shift and go to state 159
    LCURLY          reduce using rule 96 (empty -> .)

    dec_var_loc                    shift and go to state 158
    empty                          shift and go to state 160

state 125

    (24) parametros -> tipos COLON ID pn_func2 . param_aux
    (25) param_aux -> . COMMA parametros
    (26) param_aux -> . empty
    (96) empty -> .

    COMMA           shift and go to state 162
    RPAREN          reduce using rule 96 (empty -> .)

    param_aux                      shift and go to state 161
    empty                          shift and go to state 163

state 126

    (29) estatu_rec -> estatutos estatu_rec .

    RCURLY          reduce using rule 29 (estatu_rec -> estatutos estatu_rec .)


state 127

    (28) bloque -> LCURLY estatutos estatu_rec RCURLY .

    $end            reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    MAIN            reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    ELSE            reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    ID              reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    LLAMA           reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    RETURN          reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    READ            reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    WRITE           reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    IF              reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    WHILE           reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    FOR             reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    INT_TYPE        reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    FLOAT_TYPE      reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    CHAR_TYPE       reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    LPAREN          reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    INT_CTE         reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    FLOAT_CTE       reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)
    RCURLY          reduce using rule 28 (bloque -> LCURLY estatutos estatu_rec RCURLY .)


state 128

    (43) asignacion -> ID pn_expresionID2 ASSIGN . pn_secu1 expresiones pn_secu2 SEMIC
    (112) pn_secu1 -> .

    LPAREN          reduce using rule 112 (pn_secu1 -> .)
    ID              reduce using rule 112 (pn_secu1 -> .)
    LLAMA           reduce using rule 112 (pn_secu1 -> .)
    INT_CTE         reduce using rule 112 (pn_secu1 -> .)
    FLOAT_CTE       reduce using rule 112 (pn_secu1 -> .)

    pn_secu1                       shift and go to state 164

state 129

    (44) declaracion -> tipos ID pn_expresionID . declaracion_aux SEMIC
    (45) declaracion_aux -> . ASSIGN pn_secu1 expresiones pn_secu2
    (46) declaracion_aux -> . empty
    (96) empty -> .

    ASSIGN          shift and go to state 166
    SEMIC           reduce using rule 96 (empty -> .)

    declaracion_aux                shift and go to state 165
    empty                          shift and go to state 167

state 130

    (47) llamada_func -> LLAMA ID pn_llamFunc1 . LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (52) llamada_void -> LLAMA ID pn_llamFunc1 . LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC

    LPAREN          shift and go to state 168


state 131

    (91) factor -> LPAREN pn_expresion5 expresiones . RPAREN pn_expresion6

    RPAREN          shift and go to state 169


state 132

    (90) factor -> llamada_func .

    MULT_OP         reduce using rule 90 (factor -> llamada_func .)
    DIV_OP          reduce using rule 90 (factor -> llamada_func .)
    PLUS_OP         reduce using rule 90 (factor -> llamada_func .)
    MINUS_OP        reduce using rule 90 (factor -> llamada_func .)
    GT_LOG          reduce using rule 90 (factor -> llamada_func .)
    LT_LOG          reduce using rule 90 (factor -> llamada_func .)
    EQUAL_LOG       reduce using rule 90 (factor -> llamada_func .)
    NE_LOG          reduce using rule 90 (factor -> llamada_func .)
    AND_LOG         reduce using rule 90 (factor -> llamada_func .)
    OR_LOG          reduce using rule 90 (factor -> llamada_func .)
    RPAREN          reduce using rule 90 (factor -> llamada_func .)
    ID              reduce using rule 90 (factor -> llamada_func .)
    LLAMA           reduce using rule 90 (factor -> llamada_func .)
    RETURN          reduce using rule 90 (factor -> llamada_func .)
    READ            reduce using rule 90 (factor -> llamada_func .)
    WRITE           reduce using rule 90 (factor -> llamada_func .)
    IF              reduce using rule 90 (factor -> llamada_func .)
    WHILE           reduce using rule 90 (factor -> llamada_func .)
    FOR             reduce using rule 90 (factor -> llamada_func .)
    INT_TYPE        reduce using rule 90 (factor -> llamada_func .)
    FLOAT_TYPE      reduce using rule 90 (factor -> llamada_func .)
    CHAR_TYPE       reduce using rule 90 (factor -> llamada_func .)
    LPAREN          reduce using rule 90 (factor -> llamada_func .)
    INT_CTE         reduce using rule 90 (factor -> llamada_func .)
    FLOAT_CTE       reduce using rule 90 (factor -> llamada_func .)
    RCURLY          reduce using rule 90 (factor -> llamada_func .)
    RBRACK          reduce using rule 90 (factor -> llamada_func .)
    SEMIC           reduce using rule 90 (factor -> llamada_func .)
    COMMA           reduce using rule 90 (factor -> llamada_func .)
    TO              reduce using rule 90 (factor -> llamada_func .)
    DO              reduce using rule 90 (factor -> llamada_func .)


state 133

    (93) factor -> ID . pn_busqueda
    (99) pn_busqueda -> .

    MULT_OP         reduce using rule 99 (pn_busqueda -> .)
    DIV_OP          reduce using rule 99 (pn_busqueda -> .)
    PLUS_OP         reduce using rule 99 (pn_busqueda -> .)
    MINUS_OP        reduce using rule 99 (pn_busqueda -> .)
    GT_LOG          reduce using rule 99 (pn_busqueda -> .)
    LT_LOG          reduce using rule 99 (pn_busqueda -> .)
    EQUAL_LOG       reduce using rule 99 (pn_busqueda -> .)
    NE_LOG          reduce using rule 99 (pn_busqueda -> .)
    AND_LOG         reduce using rule 99 (pn_busqueda -> .)
    OR_LOG          reduce using rule 99 (pn_busqueda -> .)
    RPAREN          reduce using rule 99 (pn_busqueda -> .)
    ID              reduce using rule 99 (pn_busqueda -> .)
    LLAMA           reduce using rule 99 (pn_busqueda -> .)
    RETURN          reduce using rule 99 (pn_busqueda -> .)
    READ            reduce using rule 99 (pn_busqueda -> .)
    WRITE           reduce using rule 99 (pn_busqueda -> .)
    IF              reduce using rule 99 (pn_busqueda -> .)
    WHILE           reduce using rule 99 (pn_busqueda -> .)
    FOR             reduce using rule 99 (pn_busqueda -> .)
    INT_TYPE        reduce using rule 99 (pn_busqueda -> .)
    FLOAT_TYPE      reduce using rule 99 (pn_busqueda -> .)
    CHAR_TYPE       reduce using rule 99 (pn_busqueda -> .)
    LPAREN          reduce using rule 99 (pn_busqueda -> .)
    INT_CTE         reduce using rule 99 (pn_busqueda -> .)
    FLOAT_CTE       reduce using rule 99 (pn_busqueda -> .)
    RCURLY          reduce using rule 99 (pn_busqueda -> .)
    RBRACK          reduce using rule 99 (pn_busqueda -> .)
    SEMIC           reduce using rule 99 (pn_busqueda -> .)
    COMMA           reduce using rule 99 (pn_busqueda -> .)
    TO              reduce using rule 99 (pn_busqueda -> .)
    DO              reduce using rule 99 (pn_busqueda -> .)

    pn_busqueda                    shift and go to state 97

state 134

    (47) llamada_func -> LLAMA . ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC

    ID              shift and go to state 170


state 135

    (57) retorno -> RETURN pn_secu3 LPAREN . expresiones RPAREN SEMIC
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 171
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 136

    (58) lectura -> READ pn_secu3 LPAREN . ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5

    ID              shift and go to state 172


state 137

    (61) escritura -> WRITE LPAREN RPAREN . pn_secuPR2 SEMIC
    (102) pn_secuPR2 -> .

    SEMIC           reduce using rule 102 (pn_secuPR2 -> .)

    pn_secuPR2                     shift and go to state 173

state 138

    (62) decision -> IF LPAREN expresiones . RPAREN pn_cond1 THEN bloque else pn_cond2

    RPAREN          shift and go to state 174


state 139

    (65) loop_cond -> WHILE pn_loop1 LPAREN . expresiones RPAREN pn_loop2 DO bloque pn_loop3
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 175
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 140

    (66) loop_no_cond -> FOR ID nocond_aux . ASSIGN expresiones TO expresiones DO bloque

    ASSIGN          shift and go to state 176


state 141

    (67) nocond_aux -> LBRACK . expresiones RBRACK
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 177
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 142

    (68) nocond_aux -> empty .

    ASSIGN          reduce using rule 68 (nocond_aux -> empty .)


state 143

    (70) or_check -> OR_LOG pn_expresion9 . expresiones pn_expresion10
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 178
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 144

    (73) and_check -> AND_LOG pn_expresion9 . t_exp pn_expresion10
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    t_exp                          shift and go to state 179
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 145

    (77) op_check -> comparacion m_exp . pn_expresion8
    (109) pn_expresion8 -> .

    AND_LOG         reduce using rule 109 (pn_expresion8 -> .)
    OR_LOG          reduce using rule 109 (pn_expresion8 -> .)
    ID              reduce using rule 109 (pn_expresion8 -> .)
    LLAMA           reduce using rule 109 (pn_expresion8 -> .)
    RETURN          reduce using rule 109 (pn_expresion8 -> .)
    READ            reduce using rule 109 (pn_expresion8 -> .)
    WRITE           reduce using rule 109 (pn_expresion8 -> .)
    IF              reduce using rule 109 (pn_expresion8 -> .)
    WHILE           reduce using rule 109 (pn_expresion8 -> .)
    FOR             reduce using rule 109 (pn_expresion8 -> .)
    INT_TYPE        reduce using rule 109 (pn_expresion8 -> .)
    FLOAT_TYPE      reduce using rule 109 (pn_expresion8 -> .)
    CHAR_TYPE       reduce using rule 109 (pn_expresion8 -> .)
    LPAREN          reduce using rule 109 (pn_expresion8 -> .)
    INT_CTE         reduce using rule 109 (pn_expresion8 -> .)
    FLOAT_CTE       reduce using rule 109 (pn_expresion8 -> .)
    RCURLY          reduce using rule 109 (pn_expresion8 -> .)
    RPAREN          reduce using rule 109 (pn_expresion8 -> .)
    RBRACK          reduce using rule 109 (pn_expresion8 -> .)
    SEMIC           reduce using rule 109 (pn_expresion8 -> .)
    COMMA           reduce using rule 109 (pn_expresion8 -> .)
    TO              reduce using rule 109 (pn_expresion8 -> .)
    DO              reduce using rule 109 (pn_expresion8 -> .)

    pn_expresion8                  shift and go to state 180

state 146

    (78) comparacion -> GT_LOG pn_expresion7 .

    LPAREN          reduce using rule 78 (comparacion -> GT_LOG pn_expresion7 .)
    ID              reduce using rule 78 (comparacion -> GT_LOG pn_expresion7 .)
    LLAMA           reduce using rule 78 (comparacion -> GT_LOG pn_expresion7 .)
    INT_CTE         reduce using rule 78 (comparacion -> GT_LOG pn_expresion7 .)
    FLOAT_CTE       reduce using rule 78 (comparacion -> GT_LOG pn_expresion7 .)


state 147

    (79) comparacion -> LT_LOG pn_expresion7 .

    LPAREN          reduce using rule 79 (comparacion -> LT_LOG pn_expresion7 .)
    ID              reduce using rule 79 (comparacion -> LT_LOG pn_expresion7 .)
    LLAMA           reduce using rule 79 (comparacion -> LT_LOG pn_expresion7 .)
    INT_CTE         reduce using rule 79 (comparacion -> LT_LOG pn_expresion7 .)
    FLOAT_CTE       reduce using rule 79 (comparacion -> LT_LOG pn_expresion7 .)


state 148

    (80) comparacion -> EQUAL_LOG pn_expresion7 .

    LPAREN          reduce using rule 80 (comparacion -> EQUAL_LOG pn_expresion7 .)
    ID              reduce using rule 80 (comparacion -> EQUAL_LOG pn_expresion7 .)
    LLAMA           reduce using rule 80 (comparacion -> EQUAL_LOG pn_expresion7 .)
    INT_CTE         reduce using rule 80 (comparacion -> EQUAL_LOG pn_expresion7 .)
    FLOAT_CTE       reduce using rule 80 (comparacion -> EQUAL_LOG pn_expresion7 .)


state 149

    (81) comparacion -> NE_LOG pn_expresion7 .

    LPAREN          reduce using rule 81 (comparacion -> NE_LOG pn_expresion7 .)
    ID              reduce using rule 81 (comparacion -> NE_LOG pn_expresion7 .)
    LLAMA           reduce using rule 81 (comparacion -> NE_LOG pn_expresion7 .)
    INT_CTE         reduce using rule 81 (comparacion -> NE_LOG pn_expresion7 .)
    FLOAT_CTE       reduce using rule 81 (comparacion -> NE_LOG pn_expresion7 .)


state 150

    (82) m_exp -> termino pn_expresion3 m_rec .

    GT_LOG          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    LT_LOG          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    EQUAL_LOG       reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    NE_LOG          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    AND_LOG         reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    OR_LOG          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    ID              reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    LLAMA           reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    RETURN          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    READ            reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    WRITE           reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    IF              reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    WHILE           reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    FOR             reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    INT_TYPE        reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    FLOAT_TYPE      reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    CHAR_TYPE       reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    LPAREN          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    INT_CTE         reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    FLOAT_CTE       reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    RCURLY          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    RPAREN          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    RBRACK          reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    SEMIC           reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    COMMA           reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    TO              reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)
    DO              reduce using rule 82 (m_exp -> termino pn_expresion3 m_rec .)


state 151

    (83) m_rec -> PLUS_OP . pn_expresion1 m_exp
    (101) pn_expresion1 -> .

    LPAREN          reduce using rule 101 (pn_expresion1 -> .)
    ID              reduce using rule 101 (pn_expresion1 -> .)
    LLAMA           reduce using rule 101 (pn_expresion1 -> .)
    INT_CTE         reduce using rule 101 (pn_expresion1 -> .)
    FLOAT_CTE       reduce using rule 101 (pn_expresion1 -> .)

    pn_expresion1                  shift and go to state 181

state 152

    (84) m_rec -> MINUS_OP . pn_expresion1 m_exp
    (101) pn_expresion1 -> .

    LPAREN          reduce using rule 101 (pn_expresion1 -> .)
    ID              reduce using rule 101 (pn_expresion1 -> .)
    LLAMA           reduce using rule 101 (pn_expresion1 -> .)
    INT_CTE         reduce using rule 101 (pn_expresion1 -> .)
    FLOAT_CTE       reduce using rule 101 (pn_expresion1 -> .)

    pn_expresion1                  shift and go to state 182

state 153

    (85) m_rec -> empty .

    GT_LOG          reduce using rule 85 (m_rec -> empty .)
    LT_LOG          reduce using rule 85 (m_rec -> empty .)
    EQUAL_LOG       reduce using rule 85 (m_rec -> empty .)
    NE_LOG          reduce using rule 85 (m_rec -> empty .)
    AND_LOG         reduce using rule 85 (m_rec -> empty .)
    OR_LOG          reduce using rule 85 (m_rec -> empty .)
    ID              reduce using rule 85 (m_rec -> empty .)
    LLAMA           reduce using rule 85 (m_rec -> empty .)
    RETURN          reduce using rule 85 (m_rec -> empty .)
    READ            reduce using rule 85 (m_rec -> empty .)
    WRITE           reduce using rule 85 (m_rec -> empty .)
    IF              reduce using rule 85 (m_rec -> empty .)
    WHILE           reduce using rule 85 (m_rec -> empty .)
    FOR             reduce using rule 85 (m_rec -> empty .)
    INT_TYPE        reduce using rule 85 (m_rec -> empty .)
    FLOAT_TYPE      reduce using rule 85 (m_rec -> empty .)
    CHAR_TYPE       reduce using rule 85 (m_rec -> empty .)
    LPAREN          reduce using rule 85 (m_rec -> empty .)
    INT_CTE         reduce using rule 85 (m_rec -> empty .)
    FLOAT_CTE       reduce using rule 85 (m_rec -> empty .)
    RCURLY          reduce using rule 85 (m_rec -> empty .)
    RPAREN          reduce using rule 85 (m_rec -> empty .)
    RBRACK          reduce using rule 85 (m_rec -> empty .)
    SEMIC           reduce using rule 85 (m_rec -> empty .)
    COMMA           reduce using rule 85 (m_rec -> empty .)
    TO              reduce using rule 85 (m_rec -> empty .)
    DO              reduce using rule 85 (m_rec -> empty .)


state 154

    (86) termino -> factor pn_expresion4 term_rec .

    PLUS_OP         reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    MINUS_OP        reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    GT_LOG          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    LT_LOG          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    EQUAL_LOG       reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    NE_LOG          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    AND_LOG         reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    OR_LOG          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    ID              reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    LLAMA           reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    RETURN          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    READ            reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    WRITE           reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    IF              reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    WHILE           reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    FOR             reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    INT_TYPE        reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    FLOAT_TYPE      reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    CHAR_TYPE       reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    LPAREN          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    INT_CTE         reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    FLOAT_CTE       reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    RCURLY          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    RPAREN          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    RBRACK          reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    SEMIC           reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    COMMA           reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    TO              reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)
    DO              reduce using rule 86 (termino -> factor pn_expresion4 term_rec .)


state 155

    (87) term_rec -> MULT_OP . pn_expresion2 termino
    (103) pn_expresion2 -> .

    LPAREN          reduce using rule 103 (pn_expresion2 -> .)
    ID              reduce using rule 103 (pn_expresion2 -> .)
    LLAMA           reduce using rule 103 (pn_expresion2 -> .)
    INT_CTE         reduce using rule 103 (pn_expresion2 -> .)
    FLOAT_CTE       reduce using rule 103 (pn_expresion2 -> .)

    pn_expresion2                  shift and go to state 183

state 156

    (88) term_rec -> DIV_OP . pn_expresion2 termino
    (103) pn_expresion2 -> .

    LPAREN          reduce using rule 103 (pn_expresion2 -> .)
    ID              reduce using rule 103 (pn_expresion2 -> .)
    LLAMA           reduce using rule 103 (pn_expresion2 -> .)
    INT_CTE         reduce using rule 103 (pn_expresion2 -> .)
    FLOAT_CTE       reduce using rule 103 (pn_expresion2 -> .)

    pn_expresion2                  shift and go to state 184

state 157

    (89) term_rec -> empty .

    PLUS_OP         reduce using rule 89 (term_rec -> empty .)
    MINUS_OP        reduce using rule 89 (term_rec -> empty .)
    GT_LOG          reduce using rule 89 (term_rec -> empty .)
    LT_LOG          reduce using rule 89 (term_rec -> empty .)
    EQUAL_LOG       reduce using rule 89 (term_rec -> empty .)
    NE_LOG          reduce using rule 89 (term_rec -> empty .)
    AND_LOG         reduce using rule 89 (term_rec -> empty .)
    OR_LOG          reduce using rule 89 (term_rec -> empty .)
    ID              reduce using rule 89 (term_rec -> empty .)
    LLAMA           reduce using rule 89 (term_rec -> empty .)
    RETURN          reduce using rule 89 (term_rec -> empty .)
    READ            reduce using rule 89 (term_rec -> empty .)
    WRITE           reduce using rule 89 (term_rec -> empty .)
    IF              reduce using rule 89 (term_rec -> empty .)
    WHILE           reduce using rule 89 (term_rec -> empty .)
    FOR             reduce using rule 89 (term_rec -> empty .)
    INT_TYPE        reduce using rule 89 (term_rec -> empty .)
    FLOAT_TYPE      reduce using rule 89 (term_rec -> empty .)
    CHAR_TYPE       reduce using rule 89 (term_rec -> empty .)
    LPAREN          reduce using rule 89 (term_rec -> empty .)
    INT_CTE         reduce using rule 89 (term_rec -> empty .)
    FLOAT_CTE       reduce using rule 89 (term_rec -> empty .)
    RCURLY          reduce using rule 89 (term_rec -> empty .)
    RPAREN          reduce using rule 89 (term_rec -> empty .)
    RBRACK          reduce using rule 89 (term_rec -> empty .)
    SEMIC           reduce using rule 89 (term_rec -> empty .)
    COMMA           reduce using rule 89 (term_rec -> empty .)
    TO              reduce using rule 89 (term_rec -> empty .)
    DO              reduce using rule 89 (term_rec -> empty .)


state 158

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc . bloque pn_func4
    (28) bloque -> . LCURLY estatutos estatu_rec RCURLY

    LCURLY          shift and go to state 55

    bloque                         shift and go to state 185

state 159

    (18) dec_var_loc -> VARS . tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct

    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15

    tipos                          shift and go to state 186

state 160

    (19) dec_var_loc -> empty .

    LCURLY          reduce using rule 19 (dec_var_loc -> empty .)


state 161

    (24) parametros -> tipos COLON ID pn_func2 param_aux .

    RPAREN          reduce using rule 24 (parametros -> tipos COLON ID pn_func2 param_aux .)


state 162

    (25) param_aux -> COMMA . parametros
    (24) parametros -> . tipos COLON ID pn_func2 param_aux
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct

    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15

    parametros                     shift and go to state 187
    tipos                          shift and go to state 50

state 163

    (26) param_aux -> empty .

    RPAREN          reduce using rule 26 (param_aux -> empty .)


state 164

    (43) asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 . expresiones pn_secu2 SEMIC
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 188
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 165

    (44) declaracion -> tipos ID pn_expresionID declaracion_aux . SEMIC

    SEMIC           shift and go to state 189


state 166

    (45) declaracion_aux -> ASSIGN . pn_secu1 expresiones pn_secu2
    (112) pn_secu1 -> .

    LPAREN          reduce using rule 112 (pn_secu1 -> .)
    ID              reduce using rule 112 (pn_secu1 -> .)
    LLAMA           reduce using rule 112 (pn_secu1 -> .)
    INT_CTE         reduce using rule 112 (pn_secu1 -> .)
    FLOAT_CTE       reduce using rule 112 (pn_secu1 -> .)

    pn_secu1                       shift and go to state 190

state 167

    (46) declaracion_aux -> empty .

    SEMIC           reduce using rule 46 (declaracion_aux -> empty .)


state 168

    (47) llamada_func -> LLAMA ID pn_llamFunc1 LPAREN . pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (52) llamada_void -> LLAMA ID pn_llamFunc1 LPAREN . llamada_void_aux RPAREN pn_llamFunc3 SEMIC
    (106) pn_expresion5 -> .
    (53) llamada_void_aux -> . expresiones pn_llamFunc2 llama_void_auxb
    (54) llamada_void_aux -> . empty
    (69) expresiones -> . t_exp or_check
    (96) empty -> .
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

  ! reduce/reduce conflict for RPAREN resolved using rule 96 (empty -> .)
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for LLAMA resolved as shift
  ! shift/reduce conflict for INT_CTE resolved as shift
  ! shift/reduce conflict for FLOAT_CTE resolved as shift
    RPAREN          reduce using rule 96 (empty -> .)
    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

  ! LPAREN          [ reduce using rule 106 (pn_expresion5 -> .) ]
  ! ID              [ reduce using rule 106 (pn_expresion5 -> .) ]
  ! LLAMA           [ reduce using rule 106 (pn_expresion5 -> .) ]
  ! INT_CTE         [ reduce using rule 106 (pn_expresion5 -> .) ]
  ! FLOAT_CTE       [ reduce using rule 106 (pn_expresion5 -> .) ]
  ! RPAREN          [ reduce using rule 106 (pn_expresion5 -> .) ]

    pn_expresion5                  shift and go to state 191
    llamada_void_aux               shift and go to state 192
    expresiones                    shift and go to state 193
    empty                          shift and go to state 194
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 169

    (91) factor -> LPAREN pn_expresion5 expresiones RPAREN . pn_expresion6
    (107) pn_expresion6 -> .

    MULT_OP         reduce using rule 107 (pn_expresion6 -> .)
    DIV_OP          reduce using rule 107 (pn_expresion6 -> .)
    PLUS_OP         reduce using rule 107 (pn_expresion6 -> .)
    MINUS_OP        reduce using rule 107 (pn_expresion6 -> .)
    GT_LOG          reduce using rule 107 (pn_expresion6 -> .)
    LT_LOG          reduce using rule 107 (pn_expresion6 -> .)
    EQUAL_LOG       reduce using rule 107 (pn_expresion6 -> .)
    NE_LOG          reduce using rule 107 (pn_expresion6 -> .)
    AND_LOG         reduce using rule 107 (pn_expresion6 -> .)
    OR_LOG          reduce using rule 107 (pn_expresion6 -> .)
    ID              reduce using rule 107 (pn_expresion6 -> .)
    LLAMA           reduce using rule 107 (pn_expresion6 -> .)
    RETURN          reduce using rule 107 (pn_expresion6 -> .)
    READ            reduce using rule 107 (pn_expresion6 -> .)
    WRITE           reduce using rule 107 (pn_expresion6 -> .)
    IF              reduce using rule 107 (pn_expresion6 -> .)
    WHILE           reduce using rule 107 (pn_expresion6 -> .)
    FOR             reduce using rule 107 (pn_expresion6 -> .)
    INT_TYPE        reduce using rule 107 (pn_expresion6 -> .)
    FLOAT_TYPE      reduce using rule 107 (pn_expresion6 -> .)
    CHAR_TYPE       reduce using rule 107 (pn_expresion6 -> .)
    LPAREN          reduce using rule 107 (pn_expresion6 -> .)
    INT_CTE         reduce using rule 107 (pn_expresion6 -> .)
    FLOAT_CTE       reduce using rule 107 (pn_expresion6 -> .)
    RCURLY          reduce using rule 107 (pn_expresion6 -> .)
    RPAREN          reduce using rule 107 (pn_expresion6 -> .)
    RBRACK          reduce using rule 107 (pn_expresion6 -> .)
    SEMIC           reduce using rule 107 (pn_expresion6 -> .)
    COMMA           reduce using rule 107 (pn_expresion6 -> .)
    TO              reduce using rule 107 (pn_expresion6 -> .)
    DO              reduce using rule 107 (pn_expresion6 -> .)

    pn_expresion6                  shift and go to state 195

state 170

    (47) llamada_func -> LLAMA ID . pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (130) pn_llamFunc1 -> .

    LPAREN          reduce using rule 130 (pn_llamFunc1 -> .)

    pn_llamFunc1                   shift and go to state 196

state 171

    (57) retorno -> RETURN pn_secu3 LPAREN expresiones . RPAREN SEMIC

    RPAREN          shift and go to state 197


state 172

    (58) lectura -> READ pn_secu3 LPAREN ID . lec_aux RPAREN SEMIC pn_secu4 pn_secu5
    (59) lec_aux -> . COMMA ID lec_aux
    (60) lec_aux -> . empty
    (96) empty -> .

    COMMA           shift and go to state 199
    RPAREN          reduce using rule 96 (empty -> .)

    lec_aux                        shift and go to state 198
    empty                          shift and go to state 200

state 173

    (61) escritura -> WRITE LPAREN RPAREN pn_secuPR2 . SEMIC

    SEMIC           shift and go to state 201


state 174

    (62) decision -> IF LPAREN expresiones RPAREN . pn_cond1 THEN bloque else pn_cond2
    (118) pn_cond1 -> .

    THEN            reduce using rule 118 (pn_cond1 -> .)

    pn_cond1                       shift and go to state 202

state 175

    (65) loop_cond -> WHILE pn_loop1 LPAREN expresiones . RPAREN pn_loop2 DO bloque pn_loop3

    RPAREN          shift and go to state 203


state 176

    (66) loop_no_cond -> FOR ID nocond_aux ASSIGN . expresiones TO expresiones DO bloque
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 204
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 177

    (67) nocond_aux -> LBRACK expresiones . RBRACK

    RBRACK          shift and go to state 205


state 178

    (70) or_check -> OR_LOG pn_expresion9 expresiones . pn_expresion10
    (111) pn_expresion10 -> .

    ID              reduce using rule 111 (pn_expresion10 -> .)
    LLAMA           reduce using rule 111 (pn_expresion10 -> .)
    RETURN          reduce using rule 111 (pn_expresion10 -> .)
    READ            reduce using rule 111 (pn_expresion10 -> .)
    WRITE           reduce using rule 111 (pn_expresion10 -> .)
    IF              reduce using rule 111 (pn_expresion10 -> .)
    WHILE           reduce using rule 111 (pn_expresion10 -> .)
    FOR             reduce using rule 111 (pn_expresion10 -> .)
    INT_TYPE        reduce using rule 111 (pn_expresion10 -> .)
    FLOAT_TYPE      reduce using rule 111 (pn_expresion10 -> .)
    CHAR_TYPE       reduce using rule 111 (pn_expresion10 -> .)
    LPAREN          reduce using rule 111 (pn_expresion10 -> .)
    INT_CTE         reduce using rule 111 (pn_expresion10 -> .)
    FLOAT_CTE       reduce using rule 111 (pn_expresion10 -> .)
    RCURLY          reduce using rule 111 (pn_expresion10 -> .)
    RPAREN          reduce using rule 111 (pn_expresion10 -> .)
    RBRACK          reduce using rule 111 (pn_expresion10 -> .)
    SEMIC           reduce using rule 111 (pn_expresion10 -> .)
    COMMA           reduce using rule 111 (pn_expresion10 -> .)
    TO              reduce using rule 111 (pn_expresion10 -> .)
    DO              reduce using rule 111 (pn_expresion10 -> .)

    pn_expresion10                 shift and go to state 206

state 179

    (73) and_check -> AND_LOG pn_expresion9 t_exp . pn_expresion10
    (111) pn_expresion10 -> .

    OR_LOG          reduce using rule 111 (pn_expresion10 -> .)
    ID              reduce using rule 111 (pn_expresion10 -> .)
    LLAMA           reduce using rule 111 (pn_expresion10 -> .)
    RETURN          reduce using rule 111 (pn_expresion10 -> .)
    READ            reduce using rule 111 (pn_expresion10 -> .)
    WRITE           reduce using rule 111 (pn_expresion10 -> .)
    IF              reduce using rule 111 (pn_expresion10 -> .)
    WHILE           reduce using rule 111 (pn_expresion10 -> .)
    FOR             reduce using rule 111 (pn_expresion10 -> .)
    INT_TYPE        reduce using rule 111 (pn_expresion10 -> .)
    FLOAT_TYPE      reduce using rule 111 (pn_expresion10 -> .)
    CHAR_TYPE       reduce using rule 111 (pn_expresion10 -> .)
    LPAREN          reduce using rule 111 (pn_expresion10 -> .)
    INT_CTE         reduce using rule 111 (pn_expresion10 -> .)
    FLOAT_CTE       reduce using rule 111 (pn_expresion10 -> .)
    RCURLY          reduce using rule 111 (pn_expresion10 -> .)
    RPAREN          reduce using rule 111 (pn_expresion10 -> .)
    RBRACK          reduce using rule 111 (pn_expresion10 -> .)
    SEMIC           reduce using rule 111 (pn_expresion10 -> .)
    COMMA           reduce using rule 111 (pn_expresion10 -> .)
    TO              reduce using rule 111 (pn_expresion10 -> .)
    DO              reduce using rule 111 (pn_expresion10 -> .)

    pn_expresion10                 shift and go to state 207

state 180

    (77) op_check -> comparacion m_exp pn_expresion8 .

    AND_LOG         reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    OR_LOG          reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    ID              reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    LLAMA           reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    RETURN          reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    READ            reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    WRITE           reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    IF              reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    WHILE           reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    FOR             reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    INT_TYPE        reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    FLOAT_TYPE      reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    CHAR_TYPE       reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    LPAREN          reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    INT_CTE         reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    FLOAT_CTE       reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    RCURLY          reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    RPAREN          reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    RBRACK          reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    SEMIC           reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    COMMA           reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    TO              reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)
    DO              reduce using rule 77 (op_check -> comparacion m_exp pn_expresion8 .)


state 181

    (83) m_rec -> PLUS_OP pn_expresion1 . m_exp
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    m_exp                          shift and go to state 208
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 182

    (84) m_rec -> MINUS_OP pn_expresion1 . m_exp
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    m_exp                          shift and go to state 209
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 183

    (87) term_rec -> MULT_OP pn_expresion2 . termino
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    termino                        shift and go to state 210
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 184

    (88) term_rec -> DIV_OP pn_expresion2 . termino
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    termino                        shift and go to state 211
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 185

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque . pn_func4
    (129) pn_func4 -> .

    MAIN            reduce using rule 129 (pn_func4 -> .)

    pn_func4                       shift and go to state 212

state 186

    (18) dec_var_loc -> VARS tipos . COLON ID dec_var_loc_aux SEMIC var_loc_rec

    COLON           shift and go to state 213


state 187

    (25) param_aux -> COMMA parametros .

    RPAREN          reduce using rule 25 (param_aux -> COMMA parametros .)


state 188

    (43) asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones . pn_secu2 SEMIC
    (113) pn_secu2 -> .

    SEMIC           reduce using rule 113 (pn_secu2 -> .)

    pn_secu2                       shift and go to state 214

state 189

    (44) declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .

    ID              reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    LLAMA           reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    RETURN          reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    READ            reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    WRITE           reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    IF              reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    WHILE           reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    FOR             reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    INT_TYPE        reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    FLOAT_TYPE      reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    CHAR_TYPE       reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    LPAREN          reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    INT_CTE         reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    FLOAT_CTE       reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)
    RCURLY          reduce using rule 44 (declaracion -> tipos ID pn_expresionID declaracion_aux SEMIC .)


state 190

    (45) declaracion_aux -> ASSIGN pn_secu1 . expresiones pn_secu2
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 215
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 191

    (47) llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 . llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (48) llamada_func_aux -> . expresiones pn_llamFunc2 llama_func_auxb
    (49) llamada_func_aux -> . empty
    (69) expresiones -> . t_exp or_check
    (96) empty -> .
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    RPAREN          reduce using rule 96 (empty -> .)
    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    llamada_func_aux               shift and go to state 216
    expresiones                    shift and go to state 217
    empty                          shift and go to state 218
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 192

    (52) llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux . RPAREN pn_llamFunc3 SEMIC

    RPAREN          shift and go to state 219


state 193

    (53) llamada_void_aux -> expresiones . pn_llamFunc2 llama_void_auxb
    (131) pn_llamFunc2 -> .

    COMMA           reduce using rule 131 (pn_llamFunc2 -> .)
    RPAREN          reduce using rule 131 (pn_llamFunc2 -> .)

    pn_llamFunc2                   shift and go to state 220

state 194

    (54) llamada_void_aux -> empty .

    RPAREN          reduce using rule 54 (llamada_void_aux -> empty .)


state 195

    (91) factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .

    MULT_OP         reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    DIV_OP          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    PLUS_OP         reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    MINUS_OP        reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    GT_LOG          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    LT_LOG          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    EQUAL_LOG       reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    NE_LOG          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    AND_LOG         reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    OR_LOG          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    ID              reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    LLAMA           reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    RETURN          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    READ            reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    WRITE           reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    IF              reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    WHILE           reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    FOR             reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    INT_TYPE        reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    FLOAT_TYPE      reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    CHAR_TYPE       reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    LPAREN          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    INT_CTE         reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    FLOAT_CTE       reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    RCURLY          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    RPAREN          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    RBRACK          reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    SEMIC           reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    COMMA           reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    TO              reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)
    DO              reduce using rule 91 (factor -> LPAREN pn_expresion5 expresiones RPAREN pn_expresion6 .)


state 196

    (47) llamada_func -> LLAMA ID pn_llamFunc1 . LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC

    LPAREN          shift and go to state 221


state 197

    (57) retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN . SEMIC

    SEMIC           shift and go to state 222


state 198

    (58) lectura -> READ pn_secu3 LPAREN ID lec_aux . RPAREN SEMIC pn_secu4 pn_secu5

    RPAREN          shift and go to state 223


state 199

    (59) lec_aux -> COMMA . ID lec_aux

    ID              shift and go to state 224


state 200

    (60) lec_aux -> empty .

    RPAREN          reduce using rule 60 (lec_aux -> empty .)


state 201

    (61) escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .

    ID              reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    LLAMA           reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    RETURN          reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    READ            reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    WRITE           reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    IF              reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    WHILE           reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    FOR             reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    INT_TYPE        reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    FLOAT_TYPE      reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    CHAR_TYPE       reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    LPAREN          reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    INT_CTE         reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    FLOAT_CTE       reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)
    RCURLY          reduce using rule 61 (escritura -> WRITE LPAREN RPAREN pn_secuPR2 SEMIC .)


state 202

    (62) decision -> IF LPAREN expresiones RPAREN pn_cond1 . THEN bloque else pn_cond2

    THEN            shift and go to state 225


state 203

    (65) loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN . pn_loop2 DO bloque pn_loop3
    (122) pn_loop2 -> .

    DO              reduce using rule 122 (pn_loop2 -> .)

    pn_loop2                       shift and go to state 226

state 204

    (66) loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones . TO expresiones DO bloque

    TO              shift and go to state 227


state 205

    (67) nocond_aux -> LBRACK expresiones RBRACK .

    ASSIGN          reduce using rule 67 (nocond_aux -> LBRACK expresiones RBRACK .)


state 206

    (70) or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .

    ID              reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    LLAMA           reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    RETURN          reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    READ            reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    WRITE           reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    IF              reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    WHILE           reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    FOR             reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    INT_TYPE        reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    FLOAT_TYPE      reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    CHAR_TYPE       reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    LPAREN          reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    INT_CTE         reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    FLOAT_CTE       reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    RCURLY          reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    RPAREN          reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    RBRACK          reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    SEMIC           reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    COMMA           reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    TO              reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)
    DO              reduce using rule 70 (or_check -> OR_LOG pn_expresion9 expresiones pn_expresion10 .)


state 207

    (73) and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .

    OR_LOG          reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    ID              reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    LLAMA           reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    RETURN          reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    READ            reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    WRITE           reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    IF              reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    WHILE           reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    FOR             reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    INT_TYPE        reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    FLOAT_TYPE      reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    CHAR_TYPE       reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    LPAREN          reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    INT_CTE         reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    FLOAT_CTE       reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    RCURLY          reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    RPAREN          reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    RBRACK          reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    SEMIC           reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    COMMA           reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    TO              reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)
    DO              reduce using rule 73 (and_check -> AND_LOG pn_expresion9 t_exp pn_expresion10 .)


state 208

    (83) m_rec -> PLUS_OP pn_expresion1 m_exp .

    GT_LOG          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    LT_LOG          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    EQUAL_LOG       reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    NE_LOG          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    AND_LOG         reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    OR_LOG          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    ID              reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    LLAMA           reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    RETURN          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    READ            reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    WRITE           reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    IF              reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    WHILE           reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    FOR             reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    INT_TYPE        reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    FLOAT_TYPE      reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    CHAR_TYPE       reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    LPAREN          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    INT_CTE         reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    FLOAT_CTE       reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    RCURLY          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    RPAREN          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    RBRACK          reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    SEMIC           reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    COMMA           reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    TO              reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)
    DO              reduce using rule 83 (m_rec -> PLUS_OP pn_expresion1 m_exp .)


state 209

    (84) m_rec -> MINUS_OP pn_expresion1 m_exp .

    GT_LOG          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    LT_LOG          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    EQUAL_LOG       reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    NE_LOG          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    AND_LOG         reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    OR_LOG          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    ID              reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    LLAMA           reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    RETURN          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    READ            reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    WRITE           reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    IF              reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    WHILE           reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    FOR             reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    INT_TYPE        reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    FLOAT_TYPE      reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    CHAR_TYPE       reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    LPAREN          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    INT_CTE         reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    FLOAT_CTE       reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    RCURLY          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    RPAREN          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    RBRACK          reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    SEMIC           reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    COMMA           reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    TO              reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)
    DO              reduce using rule 84 (m_rec -> MINUS_OP pn_expresion1 m_exp .)


state 210

    (87) term_rec -> MULT_OP pn_expresion2 termino .

    PLUS_OP         reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    MINUS_OP        reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    GT_LOG          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    LT_LOG          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    EQUAL_LOG       reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    NE_LOG          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    AND_LOG         reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    OR_LOG          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    ID              reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    LLAMA           reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    RETURN          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    READ            reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    WRITE           reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    IF              reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    WHILE           reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    FOR             reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    INT_TYPE        reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    FLOAT_TYPE      reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    CHAR_TYPE       reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    LPAREN          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    INT_CTE         reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    FLOAT_CTE       reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    RCURLY          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    RPAREN          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    RBRACK          reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    SEMIC           reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    COMMA           reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    TO              reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)
    DO              reduce using rule 87 (term_rec -> MULT_OP pn_expresion2 termino .)


state 211

    (88) term_rec -> DIV_OP pn_expresion2 termino .

    PLUS_OP         reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    MINUS_OP        reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    GT_LOG          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    LT_LOG          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    EQUAL_LOG       reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    NE_LOG          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    AND_LOG         reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    OR_LOG          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    ID              reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    LLAMA           reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    RETURN          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    READ            reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    WRITE           reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    IF              reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    WHILE           reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    FOR             reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    INT_TYPE        reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    FLOAT_TYPE      reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    CHAR_TYPE       reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    LPAREN          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    INT_CTE         reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    FLOAT_CTE       reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    RCURLY          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    RPAREN          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    RBRACK          reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    SEMIC           reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    COMMA           reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    TO              reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)
    DO              reduce using rule 88 (term_rec -> DIV_OP pn_expresion2 termino .)


state 212

    (14) def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4 .

    MAIN            reduce using rule 14 (def_funciones -> FUNCTION tipos_func ID pn_func1 LPAREN parametros RPAREN pn_func3 SEMIC dec_var_loc bloque pn_func4 .)


state 213

    (18) dec_var_loc -> VARS tipos COLON . ID dec_var_loc_aux SEMIC var_loc_rec

    ID              shift and go to state 228


state 214

    (43) asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 . SEMIC

    SEMIC           shift and go to state 229


state 215

    (45) declaracion_aux -> ASSIGN pn_secu1 expresiones . pn_secu2
    (113) pn_secu2 -> .

    SEMIC           reduce using rule 113 (pn_secu2 -> .)

    pn_secu2                       shift and go to state 230

state 216

    (47) llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux . RPAREN pn_expresion6 pn_llamFunc3 SEMIC

    RPAREN          shift and go to state 231


state 217

    (48) llamada_func_aux -> expresiones . pn_llamFunc2 llama_func_auxb
    (131) pn_llamFunc2 -> .

    COMMA           reduce using rule 131 (pn_llamFunc2 -> .)
    RPAREN          reduce using rule 131 (pn_llamFunc2 -> .)

    pn_llamFunc2                   shift and go to state 232

state 218

    (49) llamada_func_aux -> empty .

    RPAREN          reduce using rule 49 (llamada_func_aux -> empty .)


state 219

    (52) llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN . pn_llamFunc3 SEMIC
    (132) pn_llamFunc3 -> .

    SEMIC           reduce using rule 132 (pn_llamFunc3 -> .)

    pn_llamFunc3                   shift and go to state 233

state 220

    (53) llamada_void_aux -> expresiones pn_llamFunc2 . llama_void_auxb
    (55) llama_void_auxb -> . COMMA llamada_func_aux
    (56) llama_void_auxb -> . empty
    (96) empty -> .

    COMMA           shift and go to state 235
    RPAREN          reduce using rule 96 (empty -> .)

    llama_void_auxb                shift and go to state 234
    empty                          shift and go to state 236

state 221

    (47) llamada_func -> LLAMA ID pn_llamFunc1 LPAREN . pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (106) pn_expresion5 -> .

    LPAREN          reduce using rule 106 (pn_expresion5 -> .)
    ID              reduce using rule 106 (pn_expresion5 -> .)
    LLAMA           reduce using rule 106 (pn_expresion5 -> .)
    INT_CTE         reduce using rule 106 (pn_expresion5 -> .)
    FLOAT_CTE       reduce using rule 106 (pn_expresion5 -> .)
    RPAREN          reduce using rule 106 (pn_expresion5 -> .)

    pn_expresion5                  shift and go to state 191

state 222

    (57) retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .

    ID              reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    LLAMA           reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    RETURN          reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    READ            reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    WRITE           reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    IF              reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    WHILE           reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    FOR             reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    INT_TYPE        reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    FLOAT_TYPE      reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    CHAR_TYPE       reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    LPAREN          reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    INT_CTE         reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    FLOAT_CTE       reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)
    RCURLY          reduce using rule 57 (retorno -> RETURN pn_secu3 LPAREN expresiones RPAREN SEMIC .)


state 223

    (58) lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN . SEMIC pn_secu4 pn_secu5

    SEMIC           shift and go to state 237


state 224

    (59) lec_aux -> COMMA ID . lec_aux
    (59) lec_aux -> . COMMA ID lec_aux
    (60) lec_aux -> . empty
    (96) empty -> .

    COMMA           shift and go to state 199
    RPAREN          reduce using rule 96 (empty -> .)

    lec_aux                        shift and go to state 238
    empty                          shift and go to state 200

state 225

    (62) decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN . bloque else pn_cond2
    (28) bloque -> . LCURLY estatutos estatu_rec RCURLY

    LCURLY          shift and go to state 55

    bloque                         shift and go to state 239

state 226

    (65) loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 . DO bloque pn_loop3

    DO              shift and go to state 240


state 227

    (66) loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO . expresiones DO bloque
    (69) expresiones -> . t_exp or_check
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    expresiones                    shift and go to state 241
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 228

    (18) dec_var_loc -> VARS tipos COLON ID . dec_var_loc_aux SEMIC var_loc_rec
    (20) dec_var_loc_aux -> . COMMA ID dec_var_loc_aux
    (21) dec_var_loc_aux -> . empty
    (96) empty -> .

    COMMA           shift and go to state 243
    SEMIC           reduce using rule 96 (empty -> .)

    dec_var_loc_aux                shift and go to state 242
    empty                          shift and go to state 244

state 229

    (43) asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .

    ID              reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    LLAMA           reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    RETURN          reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    READ            reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    WRITE           reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    IF              reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    WHILE           reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    FOR             reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    INT_TYPE        reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    FLOAT_TYPE      reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    CHAR_TYPE       reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    LPAREN          reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    INT_CTE         reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    FLOAT_CTE       reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)
    RCURLY          reduce using rule 43 (asignacion -> ID pn_expresionID2 ASSIGN pn_secu1 expresiones pn_secu2 SEMIC .)


state 230

    (45) declaracion_aux -> ASSIGN pn_secu1 expresiones pn_secu2 .

    SEMIC           reduce using rule 45 (declaracion_aux -> ASSIGN pn_secu1 expresiones pn_secu2 .)


state 231

    (47) llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN . pn_expresion6 pn_llamFunc3 SEMIC
    (107) pn_expresion6 -> .

    SEMIC           reduce using rule 107 (pn_expresion6 -> .)

    pn_expresion6                  shift and go to state 245

state 232

    (48) llamada_func_aux -> expresiones pn_llamFunc2 . llama_func_auxb
    (50) llama_func_auxb -> . COMMA llamada_func_aux
    (51) llama_func_auxb -> . empty
    (96) empty -> .

    COMMA           shift and go to state 247
    RPAREN          reduce using rule 96 (empty -> .)

    llama_func_auxb                shift and go to state 246
    empty                          shift and go to state 248

state 233

    (52) llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 . SEMIC

    SEMIC           shift and go to state 249


state 234

    (53) llamada_void_aux -> expresiones pn_llamFunc2 llama_void_auxb .

    RPAREN          reduce using rule 53 (llamada_void_aux -> expresiones pn_llamFunc2 llama_void_auxb .)


state 235

    (55) llama_void_auxb -> COMMA . llamada_func_aux
    (48) llamada_func_aux -> . expresiones pn_llamFunc2 llama_func_auxb
    (49) llamada_func_aux -> . empty
    (69) expresiones -> . t_exp or_check
    (96) empty -> .
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    RPAREN          reduce using rule 96 (empty -> .)
    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    llamada_func_aux               shift and go to state 250
    expresiones                    shift and go to state 217
    empty                          shift and go to state 218
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 236

    (56) llama_void_auxb -> empty .

    RPAREN          reduce using rule 56 (llama_void_auxb -> empty .)


state 237

    (58) lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC . pn_secu4 pn_secu5
    (115) pn_secu4 -> .

    ID              reduce using rule 115 (pn_secu4 -> .)
    LLAMA           reduce using rule 115 (pn_secu4 -> .)
    RETURN          reduce using rule 115 (pn_secu4 -> .)
    READ            reduce using rule 115 (pn_secu4 -> .)
    WRITE           reduce using rule 115 (pn_secu4 -> .)
    IF              reduce using rule 115 (pn_secu4 -> .)
    WHILE           reduce using rule 115 (pn_secu4 -> .)
    FOR             reduce using rule 115 (pn_secu4 -> .)
    INT_TYPE        reduce using rule 115 (pn_secu4 -> .)
    FLOAT_TYPE      reduce using rule 115 (pn_secu4 -> .)
    CHAR_TYPE       reduce using rule 115 (pn_secu4 -> .)
    LPAREN          reduce using rule 115 (pn_secu4 -> .)
    INT_CTE         reduce using rule 115 (pn_secu4 -> .)
    FLOAT_CTE       reduce using rule 115 (pn_secu4 -> .)
    RCURLY          reduce using rule 115 (pn_secu4 -> .)

    pn_secu4                       shift and go to state 251

state 238

    (59) lec_aux -> COMMA ID lec_aux .

    RPAREN          reduce using rule 59 (lec_aux -> COMMA ID lec_aux .)


state 239

    (62) decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque . else pn_cond2
    (63) else -> . ELSE pn_cond3 bloque
    (64) else -> . empty
    (96) empty -> .

    ELSE            shift and go to state 253
    ID              reduce using rule 96 (empty -> .)
    LLAMA           reduce using rule 96 (empty -> .)
    RETURN          reduce using rule 96 (empty -> .)
    READ            reduce using rule 96 (empty -> .)
    WRITE           reduce using rule 96 (empty -> .)
    IF              reduce using rule 96 (empty -> .)
    WHILE           reduce using rule 96 (empty -> .)
    FOR             reduce using rule 96 (empty -> .)
    INT_TYPE        reduce using rule 96 (empty -> .)
    FLOAT_TYPE      reduce using rule 96 (empty -> .)
    CHAR_TYPE       reduce using rule 96 (empty -> .)
    LPAREN          reduce using rule 96 (empty -> .)
    INT_CTE         reduce using rule 96 (empty -> .)
    FLOAT_CTE       reduce using rule 96 (empty -> .)
    RCURLY          reduce using rule 96 (empty -> .)

    else                           shift and go to state 252
    empty                          shift and go to state 254

state 240

    (65) loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO . bloque pn_loop3
    (28) bloque -> . LCURLY estatutos estatu_rec RCURLY

    LCURLY          shift and go to state 55

    bloque                         shift and go to state 255

state 241

    (66) loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones . DO bloque

    DO              shift and go to state 256


state 242

    (18) dec_var_loc -> VARS tipos COLON ID dec_var_loc_aux . SEMIC var_loc_rec

    SEMIC           shift and go to state 257


state 243

    (20) dec_var_loc_aux -> COMMA . ID dec_var_loc_aux

    ID              shift and go to state 258


state 244

    (21) dec_var_loc_aux -> empty .

    SEMIC           reduce using rule 21 (dec_var_loc_aux -> empty .)


state 245

    (47) llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 . pn_llamFunc3 SEMIC
    (132) pn_llamFunc3 -> .

    SEMIC           reduce using rule 132 (pn_llamFunc3 -> .)

    pn_llamFunc3                   shift and go to state 259

state 246

    (48) llamada_func_aux -> expresiones pn_llamFunc2 llama_func_auxb .

    RPAREN          reduce using rule 48 (llamada_func_aux -> expresiones pn_llamFunc2 llama_func_auxb .)


state 247

    (50) llama_func_auxb -> COMMA . llamada_func_aux
    (48) llamada_func_aux -> . expresiones pn_llamFunc2 llama_func_auxb
    (49) llamada_func_aux -> . empty
    (69) expresiones -> . t_exp or_check
    (96) empty -> .
    (72) t_exp -> . g_exp and_check
    (75) g_exp -> . m_exp op_check
    (82) m_exp -> . termino pn_expresion3 m_rec
    (86) termino -> . factor pn_expresion4 term_rec
    (90) factor -> . llamada_func
    (91) factor -> . LPAREN pn_expresion5 expresiones RPAREN pn_expresion6
    (92) factor -> . cte
    (93) factor -> . ID pn_busqueda
    (47) llamada_func -> . LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC
    (94) cte -> . INT_CTE pn_constante
    (95) cte -> . FLOAT_CTE pn_constante

    RPAREN          reduce using rule 96 (empty -> .)
    LPAREN          shift and go to state 75
    ID              shift and go to state 133
    LLAMA           shift and go to state 134
    INT_CTE         shift and go to state 88
    FLOAT_CTE       shift and go to state 89

    llamada_func_aux               shift and go to state 260
    expresiones                    shift and go to state 217
    empty                          shift and go to state 218
    t_exp                          shift and go to state 82
    g_exp                          shift and go to state 83
    m_exp                          shift and go to state 84
    termino                        shift and go to state 85
    factor                         shift and go to state 86
    llamada_func                   shift and go to state 132
    cte                            shift and go to state 87

state 248

    (51) llama_func_auxb -> empty .

    RPAREN          reduce using rule 51 (llama_func_auxb -> empty .)


state 249

    (52) llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .

    ID              reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    LLAMA           reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    RETURN          reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    READ            reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    WRITE           reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    IF              reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    WHILE           reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    FOR             reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    INT_TYPE        reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    FLOAT_TYPE      reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    CHAR_TYPE       reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    LPAREN          reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    INT_CTE         reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    FLOAT_CTE       reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)
    RCURLY          reduce using rule 52 (llamada_void -> LLAMA ID pn_llamFunc1 LPAREN llamada_void_aux RPAREN pn_llamFunc3 SEMIC .)


state 250

    (55) llama_void_auxb -> COMMA llamada_func_aux .

    RPAREN          reduce using rule 55 (llama_void_auxb -> COMMA llamada_func_aux .)


state 251

    (58) lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 . pn_secu5
    (117) pn_secu5 -> .

    ID              reduce using rule 117 (pn_secu5 -> .)
    LLAMA           reduce using rule 117 (pn_secu5 -> .)
    RETURN          reduce using rule 117 (pn_secu5 -> .)
    READ            reduce using rule 117 (pn_secu5 -> .)
    WRITE           reduce using rule 117 (pn_secu5 -> .)
    IF              reduce using rule 117 (pn_secu5 -> .)
    WHILE           reduce using rule 117 (pn_secu5 -> .)
    FOR             reduce using rule 117 (pn_secu5 -> .)
    INT_TYPE        reduce using rule 117 (pn_secu5 -> .)
    FLOAT_TYPE      reduce using rule 117 (pn_secu5 -> .)
    CHAR_TYPE       reduce using rule 117 (pn_secu5 -> .)
    LPAREN          reduce using rule 117 (pn_secu5 -> .)
    INT_CTE         reduce using rule 117 (pn_secu5 -> .)
    FLOAT_CTE       reduce using rule 117 (pn_secu5 -> .)
    RCURLY          reduce using rule 117 (pn_secu5 -> .)

    pn_secu5                       shift and go to state 261

state 252

    (62) decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else . pn_cond2
    (119) pn_cond2 -> .

    ID              reduce using rule 119 (pn_cond2 -> .)
    LLAMA           reduce using rule 119 (pn_cond2 -> .)
    RETURN          reduce using rule 119 (pn_cond2 -> .)
    READ            reduce using rule 119 (pn_cond2 -> .)
    WRITE           reduce using rule 119 (pn_cond2 -> .)
    IF              reduce using rule 119 (pn_cond2 -> .)
    WHILE           reduce using rule 119 (pn_cond2 -> .)
    FOR             reduce using rule 119 (pn_cond2 -> .)
    INT_TYPE        reduce using rule 119 (pn_cond2 -> .)
    FLOAT_TYPE      reduce using rule 119 (pn_cond2 -> .)
    CHAR_TYPE       reduce using rule 119 (pn_cond2 -> .)
    LPAREN          reduce using rule 119 (pn_cond2 -> .)
    INT_CTE         reduce using rule 119 (pn_cond2 -> .)
    FLOAT_CTE       reduce using rule 119 (pn_cond2 -> .)
    RCURLY          reduce using rule 119 (pn_cond2 -> .)

    pn_cond2                       shift and go to state 262

state 253

    (63) else -> ELSE . pn_cond3 bloque
    (120) pn_cond3 -> .

    LCURLY          reduce using rule 120 (pn_cond3 -> .)

    pn_cond3                       shift and go to state 263

state 254

    (64) else -> empty .

    ID              reduce using rule 64 (else -> empty .)
    LLAMA           reduce using rule 64 (else -> empty .)
    RETURN          reduce using rule 64 (else -> empty .)
    READ            reduce using rule 64 (else -> empty .)
    WRITE           reduce using rule 64 (else -> empty .)
    IF              reduce using rule 64 (else -> empty .)
    WHILE           reduce using rule 64 (else -> empty .)
    FOR             reduce using rule 64 (else -> empty .)
    INT_TYPE        reduce using rule 64 (else -> empty .)
    FLOAT_TYPE      reduce using rule 64 (else -> empty .)
    CHAR_TYPE       reduce using rule 64 (else -> empty .)
    LPAREN          reduce using rule 64 (else -> empty .)
    INT_CTE         reduce using rule 64 (else -> empty .)
    FLOAT_CTE       reduce using rule 64 (else -> empty .)
    RCURLY          reduce using rule 64 (else -> empty .)


state 255

    (65) loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque . pn_loop3
    (123) pn_loop3 -> .

    ID              reduce using rule 123 (pn_loop3 -> .)
    LLAMA           reduce using rule 123 (pn_loop3 -> .)
    RETURN          reduce using rule 123 (pn_loop3 -> .)
    READ            reduce using rule 123 (pn_loop3 -> .)
    WRITE           reduce using rule 123 (pn_loop3 -> .)
    IF              reduce using rule 123 (pn_loop3 -> .)
    WHILE           reduce using rule 123 (pn_loop3 -> .)
    FOR             reduce using rule 123 (pn_loop3 -> .)
    INT_TYPE        reduce using rule 123 (pn_loop3 -> .)
    FLOAT_TYPE      reduce using rule 123 (pn_loop3 -> .)
    CHAR_TYPE       reduce using rule 123 (pn_loop3 -> .)
    LPAREN          reduce using rule 123 (pn_loop3 -> .)
    INT_CTE         reduce using rule 123 (pn_loop3 -> .)
    FLOAT_CTE       reduce using rule 123 (pn_loop3 -> .)
    RCURLY          reduce using rule 123 (pn_loop3 -> .)

    pn_loop3                       shift and go to state 264

state 256

    (66) loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO . bloque
    (28) bloque -> . LCURLY estatutos estatu_rec RCURLY

    LCURLY          shift and go to state 55

    bloque                         shift and go to state 265

state 257

    (18) dec_var_loc -> VARS tipos COLON ID dec_var_loc_aux SEMIC . var_loc_rec
    (22) var_loc_rec -> . tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec
    (23) var_loc_rec -> . empty
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct
    (96) empty -> .

    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15
    LCURLY          reduce using rule 96 (empty -> .)

    tipos                          shift and go to state 266
    var_loc_rec                    shift and go to state 267
    empty                          shift and go to state 268

state 258

    (20) dec_var_loc_aux -> COMMA ID . dec_var_loc_aux
    (20) dec_var_loc_aux -> . COMMA ID dec_var_loc_aux
    (21) dec_var_loc_aux -> . empty
    (96) empty -> .

    COMMA           shift and go to state 243
    SEMIC           reduce using rule 96 (empty -> .)

    dec_var_loc_aux                shift and go to state 269
    empty                          shift and go to state 244

state 259

    (47) llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 . SEMIC

    SEMIC           shift and go to state 270


state 260

    (50) llama_func_auxb -> COMMA llamada_func_aux .

    RPAREN          reduce using rule 50 (llama_func_auxb -> COMMA llamada_func_aux .)


state 261

    (58) lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .

    ID              reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    LLAMA           reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    RETURN          reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    READ            reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    WRITE           reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    IF              reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    WHILE           reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    FOR             reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    INT_TYPE        reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    FLOAT_TYPE      reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    CHAR_TYPE       reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    LPAREN          reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    INT_CTE         reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    FLOAT_CTE       reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)
    RCURLY          reduce using rule 58 (lectura -> READ pn_secu3 LPAREN ID lec_aux RPAREN SEMIC pn_secu4 pn_secu5 .)


state 262

    (62) decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .

    ID              reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    LLAMA           reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    RETURN          reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    READ            reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    WRITE           reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    IF              reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    WHILE           reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    FOR             reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    INT_TYPE        reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    FLOAT_TYPE      reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    CHAR_TYPE       reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    LPAREN          reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    INT_CTE         reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    FLOAT_CTE       reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)
    RCURLY          reduce using rule 62 (decision -> IF LPAREN expresiones RPAREN pn_cond1 THEN bloque else pn_cond2 .)


state 263

    (63) else -> ELSE pn_cond3 . bloque
    (28) bloque -> . LCURLY estatutos estatu_rec RCURLY

    LCURLY          shift and go to state 55

    bloque                         shift and go to state 271

state 264

    (65) loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .

    ID              reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    LLAMA           reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    RETURN          reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    READ            reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    WRITE           reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    IF              reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    WHILE           reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    FOR             reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    INT_TYPE        reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    FLOAT_TYPE      reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    CHAR_TYPE       reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    LPAREN          reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    INT_CTE         reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    FLOAT_CTE       reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)
    RCURLY          reduce using rule 65 (loop_cond -> WHILE pn_loop1 LPAREN expresiones RPAREN pn_loop2 DO bloque pn_loop3 .)


state 265

    (66) loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .

    ID              reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    LLAMA           reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    RETURN          reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    READ            reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    WRITE           reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    IF              reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    WHILE           reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    FOR             reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    INT_TYPE        reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    FLOAT_TYPE      reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    CHAR_TYPE       reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    LPAREN          reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    INT_CTE         reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    FLOAT_CTE       reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)
    RCURLY          reduce using rule 66 (loop_no_cond -> FOR ID nocond_aux ASSIGN expresiones TO expresiones DO bloque .)


state 266

    (22) var_loc_rec -> tipos . COLON ID dec_var_loc_aux SEMIC var_loc_rec

    COLON           shift and go to state 272


state 267

    (18) dec_var_loc -> VARS tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec .

    LCURLY          reduce using rule 18 (dec_var_loc -> VARS tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec .)


state 268

    (23) var_loc_rec -> empty .

    LCURLY          reduce using rule 23 (var_loc_rec -> empty .)


state 269

    (20) dec_var_loc_aux -> COMMA ID dec_var_loc_aux .

    SEMIC           reduce using rule 20 (dec_var_loc_aux -> COMMA ID dec_var_loc_aux .)


state 270

    (47) llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .

    ID              reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    LLAMA           reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    RETURN          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    READ            reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    WRITE           reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    IF              reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    WHILE           reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    FOR             reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    INT_TYPE        reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    FLOAT_TYPE      reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    CHAR_TYPE       reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    LPAREN          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    INT_CTE         reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    FLOAT_CTE       reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    RCURLY          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    MULT_OP         reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    DIV_OP          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    PLUS_OP         reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    MINUS_OP        reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    GT_LOG          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    LT_LOG          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    EQUAL_LOG       reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    NE_LOG          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    AND_LOG         reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    OR_LOG          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    RPAREN          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    RBRACK          reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    SEMIC           reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    COMMA           reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    TO              reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)
    DO              reduce using rule 47 (llamada_func -> LLAMA ID pn_llamFunc1 LPAREN pn_expresion5 llamada_func_aux RPAREN pn_expresion6 pn_llamFunc3 SEMIC .)


state 271

    (63) else -> ELSE pn_cond3 bloque .

    ID              reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    LLAMA           reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    RETURN          reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    READ            reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    WRITE           reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    IF              reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    WHILE           reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    FOR             reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    INT_TYPE        reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    FLOAT_TYPE      reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    CHAR_TYPE       reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    LPAREN          reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    INT_CTE         reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    FLOAT_CTE       reduce using rule 63 (else -> ELSE pn_cond3 bloque .)
    RCURLY          reduce using rule 63 (else -> ELSE pn_cond3 bloque .)


state 272

    (22) var_loc_rec -> tipos COLON . ID dec_var_loc_aux SEMIC var_loc_rec

    ID              shift and go to state 273


state 273

    (22) var_loc_rec -> tipos COLON ID . dec_var_loc_aux SEMIC var_loc_rec
    (20) dec_var_loc_aux -> . COMMA ID dec_var_loc_aux
    (21) dec_var_loc_aux -> . empty
    (96) empty -> .

    COMMA           shift and go to state 243
    SEMIC           reduce using rule 96 (empty -> .)

    dec_var_loc_aux                shift and go to state 274
    empty                          shift and go to state 244

state 274

    (22) var_loc_rec -> tipos COLON ID dec_var_loc_aux . SEMIC var_loc_rec

    SEMIC           shift and go to state 275


state 275

    (22) var_loc_rec -> tipos COLON ID dec_var_loc_aux SEMIC . var_loc_rec
    (22) var_loc_rec -> . tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec
    (23) var_loc_rec -> . empty
    (11) tipos -> . INT_TYPE pn_tipoAct
    (12) tipos -> . FLOAT_TYPE pn_tipoAct
    (13) tipos -> . CHAR_TYPE pn_tipoAct
    (96) empty -> .

    INT_TYPE        shift and go to state 13
    FLOAT_TYPE      shift and go to state 14
    CHAR_TYPE       shift and go to state 15
    LCURLY          reduce using rule 96 (empty -> .)

    tipos                          shift and go to state 266
    var_loc_rec                    shift and go to state 276
    empty                          shift and go to state 268

state 276

    (22) var_loc_rec -> tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec .

    LCURLY          reduce using rule 22 (var_loc_rec -> tipos COLON ID dec_var_loc_aux SEMIC var_loc_rec .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 55 resolved as shift
WARNING: shift/reduce conflict for LLAMA in state 55 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 55 resolved as shift
WARNING: shift/reduce conflict for READ in state 55 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 55 resolved as shift
WARNING: shift/reduce conflict for IF in state 55 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 55 resolved as shift
WARNING: shift/reduce conflict for FOR in state 55 resolved as shift
WARNING: shift/reduce conflict for INT_TYPE in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT_TYPE in state 55 resolved as shift
WARNING: shift/reduce conflict for CHAR_TYPE in state 55 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 55 resolved as shift
WARNING: shift/reduce conflict for INT_CTE in state 55 resolved as shift
WARNING: shift/reduce conflict for FLOAT_CTE in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for LLAMA in state 59 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 59 resolved as shift
WARNING: shift/reduce conflict for READ in state 59 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 59 resolved as shift
WARNING: shift/reduce conflict for IF in state 59 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 59 resolved as shift
WARNING: shift/reduce conflict for FOR in state 59 resolved as shift
WARNING: shift/reduce conflict for INT_TYPE in state 59 resolved as shift
WARNING: shift/reduce conflict for FLOAT_TYPE in state 59 resolved as shift
WARNING: shift/reduce conflict for CHAR_TYPE in state 59 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 59 resolved as shift
WARNING: shift/reduce conflict for INT_CTE in state 59 resolved as shift
WARNING: shift/reduce conflict for FLOAT_CTE in state 59 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for LLAMA in state 93 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 93 resolved as shift
WARNING: shift/reduce conflict for READ in state 93 resolved as shift
WARNING: shift/reduce conflict for WRITE in state 93 resolved as shift
WARNING: shift/reduce conflict for IF in state 93 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 93 resolved as shift
WARNING: shift/reduce conflict for FOR in state 93 resolved as shift
WARNING: shift/reduce conflict for INT_TYPE in state 93 resolved as shift
WARNING: shift/reduce conflict for FLOAT_TYPE in state 93 resolved as shift
WARNING: shift/reduce conflict for CHAR_TYPE in state 93 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 93 resolved as shift
WARNING: shift/reduce conflict for INT_CTE in state 93 resolved as shift
WARNING: shift/reduce conflict for FLOAT_CTE in state 93 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for LLAMA in state 168 resolved as shift
WARNING: shift/reduce conflict for INT_CTE in state 168 resolved as shift
WARNING: shift/reduce conflict for FLOAT_CTE in state 168 resolved as shift
WARNING: reduce/reduce conflict in state 62 resolved using rule (estatutos -> llamada_func)
WARNING: rejected rule (factor -> llamada_func) in state 62
WARNING: reduce/reduce conflict in state 95 resolved using rule (estatu_rec -> empty)
WARNING: rejected rule (estatutos -> empty) in state 95
WARNING: reduce/reduce conflict in state 168 resolved using rule (empty -> <empty>)
WARNING: rejected rule (pn_expresion5 -> <empty>) in state 168
